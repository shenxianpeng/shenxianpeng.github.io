<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on DevOps Engineer</title><link>https://shenxianpeng.github.io/en/tags/git/</link><description>Recent content in Git on DevOps Engineer</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>xianpeng.shen@gmail.com (Xianpeng Shen)</managingEditor><webMaster>xianpeng.shen@gmail.com (Xianpeng Shen)</webMaster><copyright>Â© 2017 - 2025 Xianpeng Shen</copyright><lastBuildDate>Wed, 18 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://shenxianpeng.github.io/en/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Conventional Branch Specification Released!</title><link>https://shenxianpeng.github.io/en/posts/conventional-branch/</link><pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (Xianpeng Shen)</author><guid>https://shenxianpeng.github.io/en/posts/conventional-branch/</guid><description>&lt;h2 class="relative group">Summary
&lt;div id="summary" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#summary" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;p>Conventional Branch refers to a structured and standardized naming convention for Git branches which aims to make branch more readable and actionable. We&amp;rsquo;ve suggested some branch prefixes you might want to use but you can also specify your own naming convention. A consistent naming convention makes it easier to identify branches by type.&lt;/p></description></item><item><title>How to create GPG keys and add to GitHub</title><link>https://shenxianpeng.github.io/en/posts/create-gpg-keys/</link><pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (Xianpeng Shen)</author><guid>https://shenxianpeng.github.io/en/posts/create-gpg-keys/</guid><description>This article explains how to create GPG keys, export the public key, and add it to GitHub for signing commits.</description></item><item><title>Branch Naming Convention</title><link>https://shenxianpeng.github.io/en/posts/branch-naming-convention/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (Xianpeng Shen)</author><guid>https://shenxianpeng.github.io/en/posts/branch-naming-convention/</guid><description>This article introduces the conventional branch naming specification, including the purpose of branch names, key points, and basic rules for naming branches in Git. It also provides examples of branch prefixes and their meanings.</description></item><item><title>These settings in Bitbucket/GitHub recommends enable</title><link>https://shenxianpeng.github.io/en/posts/git-repository-settings/</link><pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (Xianpeng Shen)</author><guid>https://shenxianpeng.github.io/en/posts/git-repository-settings/</guid><description>This article provides a list of recommended settings for Bitbucket and GitHub repositories, including enabling force push rejection, branch protection, tag management, merge checks, and commit message standards.</description></item><item><title>git sparse-checkout enable and disable</title><link>https://shenxianpeng.github.io/en/posts/sparse-checkout/</link><pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (Xianpeng Shen)</author><guid>https://shenxianpeng.github.io/en/posts/sparse-checkout/</guid><description>This article explains how to enable and disable git sparse-checkout, including examples of how to configure sparse-checkout for specific directories and how to reset it.</description></item><item><title>Git Commit Squash</title><link>https://shenxianpeng.github.io/en/posts/git-commit-squash/</link><pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (Xianpeng Shen)</author><guid>https://shenxianpeng.github.io/en/posts/git-commit-squash/</guid><description>How to squash multiple Git commits into a single commit, both locally and remotely, using interactive rebase and merge strategies in Bitbucket.</description></item></channel></rss>