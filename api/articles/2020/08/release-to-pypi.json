{"title":"如何把自己的 Python 代码打包发布到 PyPI","slug":"2020/08/release-to-pypi","date":"2020-08-02T00:13:17.000Z","updated":"2020-08-02T01:52:33.950Z","comments":true,"path":"api/articles/2020/08/release-to-pypi.json","excerpt":"背景使用 Python 编程的人都知道，Python 的优势之一就是有大量的第三方库，通常使用如下命令1<br>pip install xxxx<br>就可以轻松下载，真是即酷炫又方便，你有没有想过这个是怎么实现的？最近正好赶上又开始写 Python 借此机会分享一下。","covers":null,"content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>使用 Python 编程的人都知道，Python 的优势之一就是有大量的第三方库，通常使用如下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install xxxx</span><br></pre></td></tr></table></figure>\n\n<p>就可以轻松下载，真是即酷炫又方便，你有没有想过这个是怎么实现的？最近正好赶上又开始写 Python 借此机会分享一下。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"什么是-PyPI\"><a href=\"#什么是-PyPI\" class=\"headerlink\" title=\"什么是 PyPI\"></a>什么是 PyPI</h2><p>PyPI 是 The Python Package Index 的缩写，意思是 Python 包索引仓库，用来查找、安装和发布 Python 包。</p>\n<p>PyPI 又两个环境，一个是测试环境 <a href=\"https://test.pypi.org/\" target=\"_blank\" rel=\"noopener\">TestPyPI</a> 和 正式环境 <a href=\"https://pypi.org/\" target=\"_blank\" rel=\"noopener\">PyPI</a></p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ol>\n<li>如果想熟悉 PyPI 发布工具和发布流程可以使用测试环境 <a href=\"https://test.pypi.org/\" target=\"_blank\" rel=\"noopener\">TestPyPI</a> </li>\n<li>如果已经熟悉了 PyPI 的发布工具和流程可以直接使用正式环境 <a href=\"https://pypi.org/\" target=\"_blank\" rel=\"noopener\">PyPI</a></li>\n<li>TestPyPI 和 PyPI 需要单独注册，即在正式环境注册了，如果去使用测试环境也同样需要注册。</li>\n<li>已经写好并且可以正常使用的项目/库/方法。</li>\n</ol>\n<h2 id=\"如何发布\"><a href=\"#如何发布\" class=\"headerlink\" title=\"如何发布\"></a>如何发布</h2><p>官方有详细的示例和文档，这里就不多做演示和翻译了，攒点耐心看完 <a href=\"https://packaging.python.org/tutorials/packaging-projects/\" target=\"_blank\" rel=\"noopener\">https://packaging.python.org/tutorials/packaging-projects/</a></p>\n<p>全当（一定要）锻炼自己的阅读官方有英文文档的能力，你就完全了解如何发布项目到 PyPI 上面了。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>发布一个 Python 项目到 PyPI 还是非常简单的，遵照上述的步骤，每个人都可以将上面的项目发布到自己账户下。</p>\n<p>只是有一个问题需要注意一下，作为公司一般情况下开发者无需担心 License 的选择，一般公司是由法务部门完成版权相关问题。如果是个人开发者，就需要了解一下 License，推荐一篇<a href=\"https://mp.weixin.qq.com/s?src=11&timestamp=1595346878&ver=2474&signature=Ct0nRc7fLMxhZV2OPjsc2bDnBkBZIclPMI1qRGdFf3hbWM3Q-*jPYwVknsa9laPvvgyRgXTXUHGZcigY0HLZNtUHMkYbDjCQp6LYMNT5zN9s5zNM44BxismGcfbxNA7D&new=1\" target=\"_blank\" rel=\"noopener\">文章</a>供参考。</p>\n<p>另外如果是正式版本，在发布还需要注意版本号的选择。如果是功能很简答，完成度也不高，建议从 0.0.1 版本开始。如果是一个完成度很高的产品了，那么可以从 1.0.0 版本开始。</p>\n<p>至此，一个 Python 代码就可以正式发布了，你可以使用 <code>pip install xxx</code> 来安装了，想想就觉得自己特别酷。</p>\n","more":"<h2 id=\"什么是-PyPI\"><a href=\"#什么是-PyPI\" class=\"headerlink\" title=\"什么是 PyPI\"></a>什么是 PyPI</h2><p>PyPI 是 The Python Package Index 的缩写，意思是 Python 包索引仓库，用来查找、安装和发布 Python 包。</p>\n<p>PyPI 又两个环境，一个是测试环境 <a href=\"https://test.pypi.org/\" target=\"_blank\" rel=\"noopener\">TestPyPI</a> 和 正式环境 <a href=\"https://pypi.org/\" target=\"_blank\" rel=\"noopener\">PyPI</a></p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ol>\n<li>如果想熟悉 PyPI 发布工具和发布流程可以使用测试环境 <a href=\"https://test.pypi.org/\" target=\"_blank\" rel=\"noopener\">TestPyPI</a> </li>\n<li>如果已经熟悉了 PyPI 的发布工具和流程可以直接使用正式环境 <a href=\"https://pypi.org/\" target=\"_blank\" rel=\"noopener\">PyPI</a></li>\n<li>TestPyPI 和 PyPI 需要单独注册，即在正式环境注册了，如果去使用测试环境也同样需要注册。</li>\n<li>已经写好并且可以正常使用的项目/库/方法。</li>\n</ol>\n<h2 id=\"如何发布\"><a href=\"#如何发布\" class=\"headerlink\" title=\"如何发布\"></a>如何发布</h2><p>官方有详细的示例和文档，这里就不多做演示和翻译了，攒点耐心看完 <a href=\"https://packaging.python.org/tutorials/packaging-projects/\" target=\"_blank\" rel=\"noopener\">https://packaging.python.org/tutorials/packaging-projects/</a></p>\n<p>全当（一定要）锻炼自己的阅读官方有英文文档的能力，你就完全了解如何发布项目到 PyPI 上面了。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>发布一个 Python 项目到 PyPI 还是非常简单的，遵照上述的步骤，每个人都可以将上面的项目发布到自己账户下。</p>\n<p>只是有一个问题需要注意一下，作为公司一般情况下开发者无需担心 License 的选择，一般公司是由法务部门完成版权相关问题。如果是个人开发者，就需要了解一下 License，推荐一篇<a href=\"https://mp.weixin.qq.com/s?src=11&timestamp=1595346878&ver=2474&signature=Ct0nRc7fLMxhZV2OPjsc2bDnBkBZIclPMI1qRGdFf3hbWM3Q-*jPYwVknsa9laPvvgyRgXTXUHGZcigY0HLZNtUHMkYbDjCQp6LYMNT5zN9s5zNM44BxismGcfbxNA7D&new=1\" target=\"_blank\" rel=\"noopener\">文章</a>供参考。</p>\n<p>另外如果是正式版本，在发布还需要注意版本号的选择。如果是功能很简答，完成度也不高，建议从 0.0.1 版本开始。如果是一个完成度很高的产品了，那么可以从 1.0.0 版本开始。</p>\n<p>至此，一个 Python 代码就可以正式发布了，你可以使用 <code>pip install xxx</code> 来安装了，想想就觉得自己特别酷。</p>","categories":[{"name":"Python","path":"api/categories/Python.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"Release","path":"api/tags/Release.json"},{"name":"PyPI","path":"api/tags/PyPI.json"}]}