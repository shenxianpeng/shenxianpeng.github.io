{"title":"Jenkins 执行 Shell 如果返回值不为0，作业(Job)停止并失败怎么办？","slug":"2020/07/jenkins-tips-3","date":"2020-07-22T08:11:36.000Z","updated":"2020-07-22T09:57:58.657Z","comments":true,"path":"api/articles/2020/07/jenkins-tips-3.json","excerpt":"《Jenkins Tips 3》—— 每期用简短的图文描述一个 Jenkins 小技巧。问题在使用 Jenkins pipeline 时，如果 Shell 的返回值不为零（也就是 Shell 命令执行时有错误），Jenkins Job 默认会标记当前的 stage 为失败。因此整个 Job 也会失败。在有些时候我们希望 Shell 虽然执行失败返回的不为零，但希望Jenkins Job 在执行成功后，要显示成功状态。","covers":["/2020/07/jenkins-tips-3/error.png"],"content":"<blockquote>\n<p>《Jenkins Tips 3》—— 每期用简短的图文描述一个 Jenkins 小技巧。</p>\n</blockquote>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>在使用 Jenkins pipeline 时，如果 Shell 的返回值不为零（也就是 Shell 命令执行时有错误），Jenkins Job 默认会标记当前的 stage 为失败。因此整个 Job 也会失败。</p>\n<p>在有些时候我们希望 Shell 虽然执行失败返回的不为零，但希望Jenkins Job 在执行成功后，要显示成功状态。</p>\n<a id=\"more\"></a>\n\n<p>例如：通过 Shell 命令列出以 <code>fail-list-</code> 开头的文件，如果存在则通知用户，如果不存在则不通知用户。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -a fail-list-*</span><br></pre></td></tr></table></figure>\n\n<p>默认情况是执行如上命令导致了整个 Job 失败。</p>\n<p><img src=\"/2020/07/jenkins-tips-3/error.png\" alt=\"失败 log\"></p>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>经过一番调查，使用以下代码片段解决了如上问题。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stage(<span class=\"string\">\"Send notification\"</span>) &#123;</span><br><span class=\"line\">  steps &#123;</span><br><span class=\"line\">    script &#123;</span><br><span class=\"line\">      def fileExist = sh script: <span class=\"string\">\"ls -a fail-list-* &gt; /dev/null 2&gt;&amp;1\"</span>, returnStatus: <span class=\"keyword\">true</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( fileExist == <span class=\"number\">0</span> ) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// send email to user</span></span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// if not found fail-list-* file, make build status success.</span></span><br><span class=\"line\">        currentBuild.result = <span class=\"string\">'SUCCESS'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>在执行 Shell 时，添加了 <code>returnStatus: true</code>。这是将状态码返回并保存起来，然后与 0 进行比较。</p>\n<p>如果不等于 0，如果不添加 <code>currentBuild.result = &#39;SUCCESS&#39;</code>，Jenkins 的整个 Job 还是会标记为失败状态。添加后，人为的忽略错误，将 Job 状态置为成功。</p>\n","more":"<p>例如：通过 Shell 命令列出以 <code>fail-list-</code> 开头的文件，如果存在则通知用户，如果不存在则不通知用户。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -a fail-list-*</span><br></pre></td></tr></table></figure>\n\n<p>默认情况是执行如上命令导致了整个 Job 失败。</p>\n<p><img src=\"/2020/07/jenkins-tips-3/error.png\" alt=\"失败 log\"></p>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>经过一番调查，使用以下代码片段解决了如上问题。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stage(<span class=\"string\">\"Send notification\"</span>) &#123;</span><br><span class=\"line\">  steps &#123;</span><br><span class=\"line\">    script &#123;</span><br><span class=\"line\">      def fileExist = sh script: <span class=\"string\">\"ls -a fail-list-* &gt; /dev/null 2&gt;&amp;1\"</span>, returnStatus: <span class=\"keyword\">true</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( fileExist == <span class=\"number\">0</span> ) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// send email to user</span></span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// if not found fail-list-* file, make build status success.</span></span><br><span class=\"line\">        currentBuild.result = <span class=\"string\">'SUCCESS'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>在执行 Shell 时，添加了 <code>returnStatus: true</code>。这是将状态码返回并保存起来，然后与 0 进行比较。</p>\n<p>如果不等于 0，如果不添加 <code>currentBuild.result = &#39;SUCCESS&#39;</code>，Jenkins 的整个 Job 还是会标记为失败状态。添加后，人为的忽略错误，将 Job 状态置为成功。</p>","categories":[{"name":"Jenkins","path":"api/categories/Jenkins.json"}],"tags":[{"name":"Jenkins","path":"api/tags/Jenkins.json"},{"name":"Tips","path":"api/tags/Tips.json"}]}