{"title":"Bitbucket Webhooks Configuration","slug":"2020/04/Bitbucket-webhooks","date":"2020-04-24T09:40:21.000Z","updated":"2020-07-03T05:20:58.899Z","comments":true,"path":"api/articles/2020/04/Bitbucket-webhooks.json","excerpt":"BackgroundI have set several multi-branch pipeline and it can support Bitbucket Pull Request build. So, when developer create a Pull Request on Bitbucket, Jenkins can auto-trigger PR build. but this jenkins-plugin may not very stable, it had not work two times and I actually don’t know why it does that. But I know the use Git webhook is a direct and hard approach could solve this problem. After my test, the answer is yes. it works as expect.","covers":["/2020/04/Bitbucket-webhooks/webhook-setting.png","/2020/04/Bitbucket-webhooks/jenkins-setting.png"],"content":"<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><p>I have set several multi-branch pipeline and it can support Bitbucket Pull Request build. So, when developer create a Pull Request on Bitbucket, Jenkins can auto-trigger PR build. but this jenkins-plugin may not very stable, it had not work two times and I actually don’t know why it does that. But I know the use Git webhook is a direct and hard approach could solve this problem. After my test, the answer is yes. it works as expect.</p>\n<a id=\"more\"></a>\n\n<p>Here is my setting.</p>\n<ul>\n<li>Webhook name: test-multibranch</li>\n<li>Webhook URL: <a href=\"http://localhost:8080/multibranch-webhook-trigger/invoke?token=test-multibranch\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/multibranch-webhook-trigger/invoke?token=test-multibranch</a></li>\n<li>Test connection: 200(green), it passed.</li>\n<li>Events:<ul>\n<li>Repository: N/A</li>\n<li>Pull Request: Opened, Merged, Declined, Deleted.</li>\n</ul>\n</li>\n<li>Active: enable</li>\n</ul>\n<p>Here is setting screenshots.</p>\n<p><img src=\"/2020/04/Bitbucket-webhooks/webhook-setting.png\" alt=\"Bitbucket webhooks setting\"></p>\n<p><img src=\"/2020/04/Bitbucket-webhooks/jenkins-setting.png\" alt=\"Jenkins multi-branch pipeline setting\"></p>\n<p>At first, I also enable Modified event, but I found when there is new merged commits into our develop branch(this is our PR target branch), the holding Pull Request will be triggered and merge develop branch back to source branch then re-build.</p>\n<p>Then I notice the Modified description: A pull request’s description, title, or target branch is changed.</p>\n<p>This is a nice feature to make sure the source code integrate with target branch and build passed, but  this is too frequent for our product builds, because our product pull request build on some Unix platform need almost 3 hours, if has 5 Pull Requests waiting to review, when new commits into develop branch, these 5 PR need to rebuild again, this takes up all the build machines, resulting in those that need to be built not getting the resources.</p>\n<p>After enable above Pull Request event and have these functions.</p>\n<ul>\n<li>when open a new Pull Request on Bitbucket, auto create Pull Request branch and build in Jenkins.</li>\n<li>when merge the Pull Request Bitbucket, auto delete Pull Request branch in Jenkins.</li>\n<li>when decline the Pull Request Bitbucket, auto delete Pull Request branch in Jenkins.</li>\n<li>when delete the Pull Request Bitbucket, auto delete Pull Request branch in Jenkins.</li>\n</ul>\n<p>For other specific branches build my Jenkins job support manually build and timing trigger, so this event settings currently good to me.</p>\n<p>If there is new settings need to add, I will keep update this article in the future.</p>\n","more":"<p>Here is my setting.</p>\n<ul>\n<li>Webhook name: test-multibranch</li>\n<li>Webhook URL: <a href=\"http://localhost:8080/multibranch-webhook-trigger/invoke?token=test-multibranch\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/multibranch-webhook-trigger/invoke?token=test-multibranch</a></li>\n<li>Test connection: 200(green), it passed.</li>\n<li>Events:<ul>\n<li>Repository: N/A</li>\n<li>Pull Request: Opened, Merged, Declined, Deleted.</li>\n</ul>\n</li>\n<li>Active: enable</li>\n</ul>\n<p>Here is setting screenshots.</p>\n<p><img src=\"/2020/04/Bitbucket-webhooks/webhook-setting.png\" alt=\"Bitbucket webhooks setting\"></p>\n<p><img src=\"/2020/04/Bitbucket-webhooks/jenkins-setting.png\" alt=\"Jenkins multi-branch pipeline setting\"></p>\n<p>At first, I also enable Modified event, but I found when there is new merged commits into our develop branch(this is our PR target branch), the holding Pull Request will be triggered and merge develop branch back to source branch then re-build.</p>\n<p>Then I notice the Modified description: A pull request’s description, title, or target branch is changed.</p>\n<p>This is a nice feature to make sure the source code integrate with target branch and build passed, but  this is too frequent for our product builds, because our product pull request build on some Unix platform need almost 3 hours, if has 5 Pull Requests waiting to review, when new commits into develop branch, these 5 PR need to rebuild again, this takes up all the build machines, resulting in those that need to be built not getting the resources.</p>\n<p>After enable above Pull Request event and have these functions.</p>\n<ul>\n<li>when open a new Pull Request on Bitbucket, auto create Pull Request branch and build in Jenkins.</li>\n<li>when merge the Pull Request Bitbucket, auto delete Pull Request branch in Jenkins.</li>\n<li>when decline the Pull Request Bitbucket, auto delete Pull Request branch in Jenkins.</li>\n<li>when delete the Pull Request Bitbucket, auto delete Pull Request branch in Jenkins.</li>\n</ul>\n<p>For other specific branches build my Jenkins job support manually build and timing trigger, so this event settings currently good to me.</p>\n<p>If there is new settings need to add, I will keep update this article in the future.</p>","categories":[{"name":"Jenkins","path":"api/categories/Jenkins.json"}],"tags":[{"name":"Bitbucket","path":"api/tags/Bitbucket.json"},{"name":"Webhooks","path":"api/tags/Webhooks.json"}]}