{"title":"忽略 Jenkins Shell 步骤中的故障","slug":"2020/06/jenkins-tips-1","date":"2020-06-21T13:42:17.000Z","updated":"2023-06-12T14:33:47.092Z","comments":true,"path":"api/articles/2020/06/jenkins-tips-1.json","excerpt":"《Jenkins Tips 1》 —— 每期用简短的图文描述一个 Jenkins 小技巧。问题不希望 Shell 脚本因失败而中止想一直运行 Shell 脚本并报告失败","covers":["/2020/06/jenkins-tips-1/1.png","/2020/06/jenkins-tips-1/2.png","/2020/06/jenkins-tips-1/3.png","/2020/06/jenkins-tips-1/4.png"],"content":"<blockquote>\n<p>《Jenkins Tips 1》 —— 每期用简短的图文描述一个 Jenkins 小技巧。</p>\n</blockquote>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><ul>\n<li>不希望 Shell 脚本因失败而中止</li>\n<li>想一直运行 Shell 脚本并报告失败</li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><p>运行 Shell 时，你可以通过使用内置的 <code>+e</code> 选项来控制执行你的脚本错误。这可以禁用“非 0 退出”的默认行为。</p>\n<p>请参考如下四个示例中的测试 Shell 和测试结果 Console Output。</p>\n<h4 id=\"示例一\"><a href=\"#示例一\" class=\"headerlink\" title=\"示例一\"></a>示例一</h4><p>执行的时候如果出现了返回值为非零（即命令执行失败）将会忽略错误，继续执行下面的脚本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> +e</span><br><span class=\"line\"><span class=\"built_in\">ls</span> no-exit-file</span><br><span class=\"line\"><span class=\"built_in\">whoami</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/06/jenkins-tips-1/1.png\" alt=\"示例一：测试结果\"></p>\n<h4 id=\"示例二\"><a href=\"#示例二\" class=\"headerlink\" title=\"示例二\"></a>示例二</h4><p>执行的时候如果出现了返回值为非零，整个脚本就会立即退出。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> -e</span><br><span class=\"line\"><span class=\"built_in\">ls</span> no-exit-file</span><br><span class=\"line\"><span class=\"built_in\">whoami</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/06/jenkins-tips-1/2.png\" alt=\"示例二：测试结果\"></p>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><h4 id=\"示例三\"><a href=\"#示例三\" class=\"headerlink\" title=\"示例三\"></a>示例三</h4><p>还有一种方式，如果不想停止失败的另一种方法是添加 <code>|| true</code> 到你的命令结尾。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 做可能会失败，但并不关注失败的命令时</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> no-exit-file || <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/06/jenkins-tips-1/3.png\" alt=\"示例三：测试结果\"></p>\n<h4 id=\"示例四\"><a href=\"#示例四\" class=\"headerlink\" title=\"示例四\"></a>示例四</h4><p>如果要在失败时执行某些操作则添加 <code>|| &lt;doSomethingOnFailure&gt;</code> 。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 做可能会失败的事情，并关注失败的命令</span></span><br><span class=\"line\"><span class=\"comment\"># 如果存在错误，则会创建变量 error 并将其设置为 true</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> no-exit-file || error=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 然后去判断 error 变量的值。如果为真，则退出 Shell</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$error</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">exit</span> -1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/06/jenkins-tips-1/4.png\" alt=\"示例四：测试结果\"></p>\n","more":"<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><p>运行 Shell 时，你可以通过使用内置的 <code>+e</code> 选项来控制执行你的脚本错误。这可以禁用“非 0 退出”的默认行为。</p>\n<p>请参考如下四个示例中的测试 Shell 和测试结果 Console Output。</p>\n<h4 id=\"示例一\"><a href=\"#示例一\" class=\"headerlink\" title=\"示例一\"></a>示例一</h4><p>执行的时候如果出现了返回值为非零（即命令执行失败）将会忽略错误，继续执行下面的脚本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> +e</span><br><span class=\"line\"><span class=\"built_in\">ls</span> no-exit-file</span><br><span class=\"line\"><span class=\"built_in\">whoami</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/06/jenkins-tips-1/1.png\" alt=\"示例一：测试结果\"></p>\n<h4 id=\"示例二\"><a href=\"#示例二\" class=\"headerlink\" title=\"示例二\"></a>示例二</h4><p>执行的时候如果出现了返回值为非零，整个脚本就会立即退出。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> -e</span><br><span class=\"line\"><span class=\"built_in\">ls</span> no-exit-file</span><br><span class=\"line\"><span class=\"built_in\">whoami</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/06/jenkins-tips-1/2.png\" alt=\"示例二：测试结果\"></p>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><h4 id=\"示例三\"><a href=\"#示例三\" class=\"headerlink\" title=\"示例三\"></a>示例三</h4><p>还有一种方式，如果不想停止失败的另一种方法是添加 <code>|| true</code> 到你的命令结尾。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 做可能会失败，但并不关注失败的命令时</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> no-exit-file || <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/06/jenkins-tips-1/3.png\" alt=\"示例三：测试结果\"></p>\n<h4 id=\"示例四\"><a href=\"#示例四\" class=\"headerlink\" title=\"示例四\"></a>示例四</h4><p>如果要在失败时执行某些操作则添加 <code>|| &lt;doSomethingOnFailure&gt;</code> 。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 做可能会失败的事情，并关注失败的命令</span></span><br><span class=\"line\"><span class=\"comment\"># 如果存在错误，则会创建变量 error 并将其设置为 true</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> no-exit-file || error=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 然后去判断 error 变量的值。如果为真，则退出 Shell</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$error</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">exit</span> -1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2020/06/jenkins-tips-1/4.png\" alt=\"示例四：测试结果\"></p>","categories":[{"name":"Jenkins","path":"api/categories/Jenkins.json"}],"tags":[{"name":"Jenkins","path":"api/tags/Jenkins.json"}]}