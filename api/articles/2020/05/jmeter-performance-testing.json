{"title":"How to use JMeter to do Performance Testing","slug":"2020/05/jmeter-performance-testing","date":"2020-05-09T06:28:09.000Z","updated":"2023-07-27T15:36:43.629Z","comments":true,"path":"api/articles/2020/05/jmeter-performance-testing.json","excerpt":"Record JMeter Scriptsuse JMeter’s HTTP(S) Test Script Recorder, please refer to this official document https://jmeter.apache.org/usermanual/jmeter_proxy_step_by_step.htmlRunning JMeter ScriptsDebug scripts on JMeter in GUI ModeYou can debug your record scripts in GUI Mode until there are no errorsrun test scripts in Non-GUI Mode(Command Line mode) recommendjmeter -n -t ..\\extras\\Test.jmx -l Test.jtl<br>","covers":["/2020/05/jmeter-performance-testing/response-chart.png"],"content":"<h2 id=\"Record-JMeter-Scripts\"><a href=\"#Record-JMeter-Scripts\" class=\"headerlink\" title=\"Record JMeter Scripts\"></a>Record JMeter Scripts</h2><p>use JMeter’s HTTP(S) Test Script Recorder, please refer to this official document <a href=\"https://jmeter.apache.org/usermanual/jmeter_proxy_step_by_step.html\">https://jmeter.apache.org/usermanual/jmeter_proxy_step_by_step.html</a></p>\n<h2 id=\"Running-JMeter-Scripts\"><a href=\"#Running-JMeter-Scripts\" class=\"headerlink\" title=\"Running JMeter Scripts\"></a>Running JMeter Scripts</h2><ul>\n<li><p>Debug scripts on JMeter in GUI Mode</p>\n<p>You can debug your record scripts in GUI Mode until there are no errors</p>\n</li>\n<li><p>run test scripts in Non-GUI Mode(Command Line mode) recommend</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">jmeter -n -t ..\\extras\\Test.jmx -l Test.jtl</span><br></pre></td></tr></table></figure></li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"Running-JMeter-Scripts-on-Jenkins\"><a href=\"#Running-JMeter-Scripts-on-Jenkins\" class=\"headerlink\" title=\"Running JMeter Scripts on Jenkins\"></a>Running JMeter Scripts on Jenkins</h2><h3 id=\"Need-Tools\"><a href=\"#Need-Tools\" class=\"headerlink\" title=\"Need Tools\"></a>Need Tools</h3><ol>\n<li>Jmeter - Web Request Load Testing</li>\n<li>Jmeter-plugins<ul>\n<li>ServerAgent-2.2.1 - PerfMon Agent to use with Standard Set</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Test-server\"><a href=\"#Test-server\" class=\"headerlink\" title=\"Test server\"></a>Test server</h3><p>Two virtual machines</p>\n<ul>\n<li>System under test</li>\n<li>Jmeter execution machine, this server is also Jenkins server</li>\n</ul>\n<h2 id=\"Implement\"><a href=\"#Implement\" class=\"headerlink\" title=\"Implement\"></a>Implement</h2><h3 id=\"Develop-test-script\"><a href=\"#Develop-test-script\" class=\"headerlink\" title=\"Develop test script\"></a>Develop test script</h3><p>Record Scripts - use JMeter’s HTTP(S) Test Script Recorder, please refer to this official document <a href=\"https://jmeter.apache.org/usermanual/jmeter_proxy_step_by_step.html\">https://jmeter.apache.org/usermanual/jmeter_proxy_step_by_step.html</a></p>\n<h3 id=\"Create-Jenkins-job-for-running-JMeter-scripts\"><a href=\"#Create-Jenkins-job-for-running-JMeter-scripts\" class=\"headerlink\" title=\"Create Jenkins job for running JMeter scripts\"></a>Create Jenkins job for running JMeter scripts</h3><ol>\n<li><p>Create a new item-&gt;select Freestyle project</p>\n</li>\n<li><p>Add build step-&gt;Execute Windows batch command</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//access to jenkins <span class=\"built_in\">jobs</span> workspace, empty the last <span class=\"built_in\">test</span> results</span><br><span class=\"line\">cmd</span><br><span class=\"line\"><span class=\"built_in\">cd</span> C:\\Users\\peter\\.jenkins\\<span class=\"built_in\">jobs</span>\\TEST-122 Upload large data\\workspace</span><br><span class=\"line\">del /Q <span class=\"string\">&quot;jtl&quot;</span>\\*</span><br><span class=\"line\">del /Q <span class=\"string\">&quot;PerfMon Metrics Collector&quot;</span>\\*</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Add build step-&gt;Execute Windows batch command</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//add first run jmeter script <span class=\"built_in\">command</span>, <span class=\"keyword\">if</span> you want run others script you can <span class=\"built_in\">continue</span> to add <span class=\"string\">&quot;Execute Windows batch command&quot;</span></span><br><span class=\"line\">jmeter -n -t script/UploadLargeData-1.jmx -l jtl/UploadLargeData-1.jtl</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Configure build email - Configure System</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//Configure System, Extended E-mail Notification</span><br><span class=\"line\">SMTP server: smtp.gmail.com</span><br><span class=\"line\"></span><br><span class=\"line\">//Job Configure, Enable <span class=\"string\">&quot;Editable Email Notification&quot;</span></span><br><span class=\"line\">Project Recipient List: xianpeng.shen@gmail.com</span><br><span class=\"line\">Project Reply-To List: <span class=\"variable\">$DEFAULT_REPLYTO</span></span><br><span class=\"line\">Content Type: HTML (text/html)</span><br><span class=\"line\">Default Subject:<span class=\"variable\">$DEFAULT_SUBJECT</span></span><br><span class=\"line\">Default Content: <span class=\"variable\">$&#123;SCRIPT, template=&quot;groovy-html.template&quot;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">//Advance setting</span><br><span class=\"line\">Triggers: Always</span><br><span class=\"line\">          Send to Recipient List</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"Generate-test-report\"><a href=\"#Generate-test-report\" class=\"headerlink\" title=\"Generate test report\"></a>Generate test report</h3><p>JMeter-&gt;Add listener-&gt;add jp@gc - PerfMon Metrics Collector, browse Test.jtl, click right key on graph Export to CSV</p>\n<h3 id=\"Analyze-test-results\"><a href=\"#Analyze-test-results\" class=\"headerlink\" title=\"Analyze test results\"></a>Analyze test results</h3><p>Introduction test scenarios</p>\n<p>Using 1, 5, 10, 20, 30, (50) users loading test, record every group user test results</p>\n<blockquote>\n<p>Glossary</p>\n<ul>\n<li>Sample(label) - This indicates the number of virtual users per request.</li>\n<li>Average - It is the average time taken by all the samples to execute specific label</li>\n<li>Median - is a number which divides the samples into two equal halves.</li>\n<li>%_line - is the value below which 90, 95, 99% of the samples fall.</li>\n<li>Min - The shortest time taken by a sample for specific label.</li>\n<li>Max - The longest time taken by a sample for specific label.</li>\n<li>Error% - percentage of failed tests.</li>\n<li>Throughput - how many requests per second does your server handle. Larger is better.</li>\n<li>KB&#x2F;Sec - it is the Throughput measured in Kilobytes per second.</li>\n</ul>\n</blockquote>\n<p>Example: Test results of each scenario shown in the following table</p>\n<table>\n<thead>\n<tr>\n<th>User</th>\n<th># Samples</th>\n<th>Average</th>\n<th>Median</th>\n<th>90% Line</th>\n<th>95% LIne</th>\n<th>Min</th>\n<th>Max</th>\n<th>Error %</th>\n<th>Throughput</th>\n<th>Received</th>\n<th>Send KB&#x2F;sec</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>31</td>\n<td>348</td>\n<td>345</td>\n<td>452</td>\n<td>517</td>\n<td>773</td>\n<td>5</td>\n<td>773</td>\n<td>0.00%</td>\n<td>2.85215</td>\n<td>2.5</td>\n</tr>\n<tr>\n<td>5</td>\n<td>155</td>\n<td>1166</td>\n<td>1164</td>\n<td>1414</td>\n<td>1602</td>\n<td>1639</td>\n<td>9</td>\n<td>1821</td>\n<td>0.00%</td>\n<td>4.26445</td>\n<td>3.73</td>\n</tr>\n<tr>\n<td>10</td>\n<td>310</td>\n<td>2275</td>\n<td>2299</td>\n<td>2687</td>\n<td>2954</td>\n<td>3671</td>\n<td>20</td>\n<td>4104</td>\n<td>0.00%</td>\n<td>4.38547</td>\n<td>3.84</td>\n</tr>\n<tr>\n<td>20</td>\n<td>620</td>\n<td>4479</td>\n<td>4620</td>\n<td>5113</td>\n<td>6152</td>\n<td>6435</td>\n<td>39</td>\n<td>6571</td>\n<td>0.00%</td>\n<td>4.42826</td>\n<td>3.88</td>\n</tr>\n<tr>\n<td>30</td>\n<td>930</td>\n<td>6652</td>\n<td>6899</td>\n<td>7488</td>\n<td>9552</td>\n<td>10051</td>\n<td>4</td>\n<td>10060</td>\n<td>0.00%</td>\n<td>4.46776</td>\n<td>3.91</td>\n</tr>\n</tbody></table>\n<p>Test results analysis chart</p>\n<p><img src=\"/2020/05/jmeter-performance-testing/response-chart.png\" alt=\"Response Chart\"> <img src=\"/2020/05/jmeter-performance-testing/permon-metrics.png\" alt=\"PerMon Metrics\"></p>\n","more":"<h2 id=\"Running-JMeter-Scripts-on-Jenkins\"><a href=\"#Running-JMeter-Scripts-on-Jenkins\" class=\"headerlink\" title=\"Running JMeter Scripts on Jenkins\"></a>Running JMeter Scripts on Jenkins</h2><h3 id=\"Need-Tools\"><a href=\"#Need-Tools\" class=\"headerlink\" title=\"Need Tools\"></a>Need Tools</h3><ol>\n<li>Jmeter - Web Request Load Testing</li>\n<li>Jmeter-plugins<ul>\n<li>ServerAgent-2.2.1 - PerfMon Agent to use with Standard Set</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Test-server\"><a href=\"#Test-server\" class=\"headerlink\" title=\"Test server\"></a>Test server</h3><p>Two virtual machines</p>\n<ul>\n<li>System under test</li>\n<li>Jmeter execution machine, this server is also Jenkins server</li>\n</ul>\n<h2 id=\"Implement\"><a href=\"#Implement\" class=\"headerlink\" title=\"Implement\"></a>Implement</h2><h3 id=\"Develop-test-script\"><a href=\"#Develop-test-script\" class=\"headerlink\" title=\"Develop test script\"></a>Develop test script</h3><p>Record Scripts - use JMeter’s HTTP(S) Test Script Recorder, please refer to this official document <a href=\"https://jmeter.apache.org/usermanual/jmeter_proxy_step_by_step.html\">https://jmeter.apache.org/usermanual/jmeter_proxy_step_by_step.html</a></p>\n<h3 id=\"Create-Jenkins-job-for-running-JMeter-scripts\"><a href=\"#Create-Jenkins-job-for-running-JMeter-scripts\" class=\"headerlink\" title=\"Create Jenkins job for running JMeter scripts\"></a>Create Jenkins job for running JMeter scripts</h3><ol>\n<li><p>Create a new item-&gt;select Freestyle project</p>\n</li>\n<li><p>Add build step-&gt;Execute Windows batch command</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//access to jenkins <span class=\"built_in\">jobs</span> workspace, empty the last <span class=\"built_in\">test</span> results</span><br><span class=\"line\">cmd</span><br><span class=\"line\"><span class=\"built_in\">cd</span> C:\\Users\\peter\\.jenkins\\<span class=\"built_in\">jobs</span>\\TEST-122 Upload large data\\workspace</span><br><span class=\"line\">del /Q <span class=\"string\">&quot;jtl&quot;</span>\\*</span><br><span class=\"line\">del /Q <span class=\"string\">&quot;PerfMon Metrics Collector&quot;</span>\\*</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Add build step-&gt;Execute Windows batch command</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//add first run jmeter script <span class=\"built_in\">command</span>, <span class=\"keyword\">if</span> you want run others script you can <span class=\"built_in\">continue</span> to add <span class=\"string\">&quot;Execute Windows batch command&quot;</span></span><br><span class=\"line\">jmeter -n -t script/UploadLargeData-1.jmx -l jtl/UploadLargeData-1.jtl</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Configure build email - Configure System</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//Configure System, Extended E-mail Notification</span><br><span class=\"line\">SMTP server: smtp.gmail.com</span><br><span class=\"line\"></span><br><span class=\"line\">//Job Configure, Enable <span class=\"string\">&quot;Editable Email Notification&quot;</span></span><br><span class=\"line\">Project Recipient List: xianpeng.shen@gmail.com</span><br><span class=\"line\">Project Reply-To List: <span class=\"variable\">$DEFAULT_REPLYTO</span></span><br><span class=\"line\">Content Type: HTML (text/html)</span><br><span class=\"line\">Default Subject:<span class=\"variable\">$DEFAULT_SUBJECT</span></span><br><span class=\"line\">Default Content: <span class=\"variable\">$&#123;SCRIPT, template=&quot;groovy-html.template&quot;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">//Advance setting</span><br><span class=\"line\">Triggers: Always</span><br><span class=\"line\">          Send to Recipient List</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"Generate-test-report\"><a href=\"#Generate-test-report\" class=\"headerlink\" title=\"Generate test report\"></a>Generate test report</h3><p>JMeter-&gt;Add listener-&gt;add jp@gc - PerfMon Metrics Collector, browse Test.jtl, click right key on graph Export to CSV</p>\n<h3 id=\"Analyze-test-results\"><a href=\"#Analyze-test-results\" class=\"headerlink\" title=\"Analyze test results\"></a>Analyze test results</h3><p>Introduction test scenarios</p>\n<p>Using 1, 5, 10, 20, 30, (50) users loading test, record every group user test results</p>\n<blockquote>\n<p>Glossary</p>\n<ul>\n<li>Sample(label) - This indicates the number of virtual users per request.</li>\n<li>Average - It is the average time taken by all the samples to execute specific label</li>\n<li>Median - is a number which divides the samples into two equal halves.</li>\n<li>%_line - is the value below which 90, 95, 99% of the samples fall.</li>\n<li>Min - The shortest time taken by a sample for specific label.</li>\n<li>Max - The longest time taken by a sample for specific label.</li>\n<li>Error% - percentage of failed tests.</li>\n<li>Throughput - how many requests per second does your server handle. Larger is better.</li>\n<li>KB&#x2F;Sec - it is the Throughput measured in Kilobytes per second.</li>\n</ul>\n</blockquote>\n<p>Example: Test results of each scenario shown in the following table</p>\n<table>\n<thead>\n<tr>\n<th>User</th>\n<th># Samples</th>\n<th>Average</th>\n<th>Median</th>\n<th>90% Line</th>\n<th>95% LIne</th>\n<th>Min</th>\n<th>Max</th>\n<th>Error %</th>\n<th>Throughput</th>\n<th>Received</th>\n<th>Send KB&#x2F;sec</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>31</td>\n<td>348</td>\n<td>345</td>\n<td>452</td>\n<td>517</td>\n<td>773</td>\n<td>5</td>\n<td>773</td>\n<td>0.00%</td>\n<td>2.85215</td>\n<td>2.5</td>\n</tr>\n<tr>\n<td>5</td>\n<td>155</td>\n<td>1166</td>\n<td>1164</td>\n<td>1414</td>\n<td>1602</td>\n<td>1639</td>\n<td>9</td>\n<td>1821</td>\n<td>0.00%</td>\n<td>4.26445</td>\n<td>3.73</td>\n</tr>\n<tr>\n<td>10</td>\n<td>310</td>\n<td>2275</td>\n<td>2299</td>\n<td>2687</td>\n<td>2954</td>\n<td>3671</td>\n<td>20</td>\n<td>4104</td>\n<td>0.00%</td>\n<td>4.38547</td>\n<td>3.84</td>\n</tr>\n<tr>\n<td>20</td>\n<td>620</td>\n<td>4479</td>\n<td>4620</td>\n<td>5113</td>\n<td>6152</td>\n<td>6435</td>\n<td>39</td>\n<td>6571</td>\n<td>0.00%</td>\n<td>4.42826</td>\n<td>3.88</td>\n</tr>\n<tr>\n<td>30</td>\n<td>930</td>\n<td>6652</td>\n<td>6899</td>\n<td>7488</td>\n<td>9552</td>\n<td>10051</td>\n<td>4</td>\n<td>10060</td>\n<td>0.00%</td>\n<td>4.46776</td>\n<td>3.91</td>\n</tr>\n</tbody></table>\n<p>Test results analysis chart</p>\n<p><img src=\"/2020/05/jmeter-performance-testing/response-chart.png\" alt=\"Response Chart\"> <img src=\"/2020/05/jmeter-performance-testing/permon-metrics.png\" alt=\"PerMon Metrics\"></p>","categories":[{"name":"Automation","path":"api/categories/Automation.json"}],"tags":[{"name":"JMeter","path":"api/tags/JMeter.json"}]}