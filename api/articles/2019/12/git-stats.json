{"title":"Git 历史统计信息生成器","slug":"2019/12/git-stats","date":"2019-12-17T14:43:04.000Z","updated":"2025-04-25T07:04:37.222Z","comments":true,"path":"api/articles/2019/12/git-stats.json","excerpt":"如果你是研发效能组的一员或者在从事 CI&#x2F;CD 或 DevOps，除了提供基础设施，指标和数据是也是一个很重要的一环，比如需要分析下某个 Git 仓库代码提交情况：这个仓库的代码谁提交的代码最多这个仓库的活跃度是什么样子的各个时段的提交分析数据每个版本的贡献排名每周&#x2F;每月&#x2F;每年的贡献排名等等几天前发现一个 Git 历史统计信息生成工具叫 GitStats (https://github.com/shenxianpeng/gitstats)","covers":["/2019/12/git-stats/git-stats-index.png","/2019/12/git-stats/git-stats-activity-1.png","/2019/12/git-stats/git-stats-activity-2.png","/2019/12/git-stats/git-stats-authors-1.png","/2019/12/git-stats/git-stats-authors-2.png","/2019/12/git-stats/git-stats-files.png","/2019/12/git-stats/git-stats-tags.png"],"content":"<p>如果你是研发效能组的一员或者在从事 CI&#x2F;CD 或 DevOps，除了提供基础设施，指标和数据是也是一个很重要的一环，比如需要分析下某个 Git 仓库代码提交情况：</p>\n<ul>\n<li>这个仓库的代码谁提交的代码最多</li>\n<li>这个仓库的活跃度是什么样子的</li>\n<li>各个时段的提交分析数据</li>\n<li>每个版本的贡献排名</li>\n<li>每周&#x2F;每月&#x2F;每年的贡献排名等等</li>\n</ul>\n<p>几天前发现一个 Git 历史统计信息生成工具叫 GitStats (<a href=\"https://github.com/shenxianpeng/gitstats\">https://github.com/shenxianpeng/gitstats</a>)</p>\n<span id=\"more\"></span>\n\n<p>这是一个用 python 写的，代码量很少，功能却非常强大的分析工具，也是我目前发现为数不多的可以生成漂亮的报告并且使用很方便的开源项目。</p>\n<p>gitstats 的报告也很强大 (<a href=\"https://shenxianpeng.github.io/gitstats/previews/main/index.html\">https://shenxianpeng.github.io/gitstats/previews/main/index.html</a>) 感兴趣的可以试试</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>需要的依赖：Git，Python3，Gnuplot。</p>\n<p>如果有 Linux，推荐在 Linux 上下载和安装。我曾尝试用 Windows 来准备环境，要配置 Cygwin，还要手动配置 Gnuplot （Gnuplot 是一个可移植的命令行驱动的图形工具），挺麻烦的。以下是我在 Linux 上来的安装和使用步骤。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 Gnuplot</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum -y install gnuplot</span><br><span class=\"line\"><span class=\"comment\"># 安装 gitstats</span></span><br><span class=\"line\">pip install gitstats</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载你要分析的代码仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/alibaba/fastjson.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行命令，生产报告</span></span><br><span class=\"line\">gitstats ../fastjson ../html/fastjson</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 经过 15 秒钟的执行，生成报告</span></span><br><span class=\"line\">Generating report...</span><br><span class=\"line\">[0.00393] &gt;&gt; git --git-dir=/workspace/gitstats/.git --work-tree=/workspace/gitstats rev-parse --short HEAD</span><br><span class=\"line\">[0.00236] &gt;&gt; git --version</span><br><span class=\"line\">[0.00716] &gt;&gt; gnuplot --version</span><br><span class=\"line\">Generating graphs...</span><br><span class=\"line\">[0.01676] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/day_of_week.plot&quot;</span></span><br><span class=\"line\">[0.01571] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/files_by_date.plot&quot;</span></span><br><span class=\"line\">[0.01281] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/month_of_year.plot&quot;</span></span><br><span class=\"line\">[0.09293] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/lines_of_code_by_author.plot&quot;</span></span><br><span class=\"line\">[0.01340] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/commits_by_year.plot&quot;</span></span><br><span class=\"line\">[0.01799] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/hour_of_day.plot&quot;</span></span><br><span class=\"line\">[0.01627] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/domains.plot&quot;</span></span><br><span class=\"line\">[0.01268] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/commits_by_year_month.plot&quot;</span></span><br><span class=\"line\">[0.09435] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/commits_by_author.plot&quot;</span></span><br><span class=\"line\">[0.01522] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/lines_of_code.plot&quot;</span></span><br><span class=\"line\">Execution <span class=\"keyword\">time</span> 15.16208 secs, 4.58247 secs (30.22 %) <span class=\"keyword\">in</span> external commands)</span><br><span class=\"line\">You may now run:</span><br><span class=\"line\"></span><br><span class=\"line\">   sensible-browser <span class=\"string\">&#x27;/workspace/html/fastjson/index.html&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"报告分析\"><a href=\"#报告分析\" class=\"headerlink\" title=\"报告分析\"></a>报告分析</h2><h3 id=\"常规统计\"><a href=\"#常规统计\" class=\"headerlink\" title=\"常规统计\"></a>常规统计</h3><p>可以看到这个项目叫 fastjson，从 2011 年 7 月 31 日开始提交第一次代码，距离当前已经 3060 天了，893 个活跃天。总共文件是 2960 个，一共的代码行数是 25 万行。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-index.png\" alt=\"常规统计\"></p>\n<h3 id=\"活跃度\"><a href=\"#活跃度\" class=\"headerlink\" title=\"活跃度\"></a>活跃度</h3><p>每天中的每小时的、每周中的每天、每周中的每小时，每年中的每月的、每年的提交数量。</p>\n<p>在过去的 32 周里，其中前 12 周到 17 周这段时间很活跃，提交很多。另外可以看到在白天 12 点到晚上 20 点这段时间提交很少，大部分程序员在这段时间都在应对公司里的工作，无法贡献开源项目。</p>\n<p>晚上 20 点之后提交开始增多，看来是一个非常努力的开发者。另外可以看到周一到周日都有提交，周六相对最少，应该是周六休息和放松一下。周日提交明显比周六多，看来还是花费了不少的个人宝贵周末时间。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-activity-1.png\" alt=\"活跃度-1\"></p>\n<p>还能看到该项目主要完成时间在 2016 年到 2017 年，完成的时区是在东八区，这个维度可对不同区域的开发者贡献数量进行分析。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-activity-2.png\" alt=\"活跃度-2\"></p>\n<h3 id=\"贡献者\"><a href=\"#贡献者\" class=\"headerlink\" title=\"贡献者\"></a>贡献者</h3><p>列举了所有的作者，提交数，第一次提交及最近一次提交。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-authors-1.png\" alt=\"贡献者-1\"></p>\n<p>这张图也是可以看到谁是该项目的创建者，以及这几年以来每年的谁的贡献最大。还有可以看到提交者所用的邮箱账户。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-authors-2.png\" alt=\"贡献者-2\"></p>\n<h3 id=\"文件及行数\"><a href=\"#文件及行数\" class=\"headerlink\" title=\"文件及行数\"></a>文件及行数</h3><p>文件总数是 2960 个，代码行数是 25 万行。</p>\n<p>另外还可以看到每年的文件增加趋势图以及这些文件类型数量的排名，可以看到 java 文件占了 96.08%，其次是 json。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-files.png\" alt=\"文件\"></p>\n<h3 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h3><p>Tags 对于团队是一个很重要分析指标（前提是所要分析的仓库在版本发布后创建了 Tag）可以看到每个版本的贡献度排名。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-tags.png\" alt=\"Tags\"></p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>如果感兴趣可以分析一下自己的项目或是去 GitHub 上找一个有意思、有影响力的项目拿来分析一下，比如 996.ICU 以及 vue 等，玩的开心。</p>\n","more":"<p>这是一个用 python 写的，代码量很少，功能却非常强大的分析工具，也是我目前发现为数不多的可以生成漂亮的报告并且使用很方便的开源项目。</p>\n<p>gitstats 的报告也很强大 (<a href=\"https://shenxianpeng.github.io/gitstats/previews/main/index.html\">https://shenxianpeng.github.io/gitstats/previews/main/index.html</a>) 感兴趣的可以试试</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>需要的依赖：Git，Python3，Gnuplot。</p>\n<p>如果有 Linux，推荐在 Linux 上下载和安装。我曾尝试用 Windows 来准备环境，要配置 Cygwin，还要手动配置 Gnuplot （Gnuplot 是一个可移植的命令行驱动的图形工具），挺麻烦的。以下是我在 Linux 上来的安装和使用步骤。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 Gnuplot</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> yum -y install gnuplot</span><br><span class=\"line\"><span class=\"comment\"># 安装 gitstats</span></span><br><span class=\"line\">pip install gitstats</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载你要分析的代码仓库</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/alibaba/fastjson.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行命令，生产报告</span></span><br><span class=\"line\">gitstats ../fastjson ../html/fastjson</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 经过 15 秒钟的执行，生成报告</span></span><br><span class=\"line\">Generating report...</span><br><span class=\"line\">[0.00393] &gt;&gt; git --git-dir=/workspace/gitstats/.git --work-tree=/workspace/gitstats rev-parse --short HEAD</span><br><span class=\"line\">[0.00236] &gt;&gt; git --version</span><br><span class=\"line\">[0.00716] &gt;&gt; gnuplot --version</span><br><span class=\"line\">Generating graphs...</span><br><span class=\"line\">[0.01676] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/day_of_week.plot&quot;</span></span><br><span class=\"line\">[0.01571] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/files_by_date.plot&quot;</span></span><br><span class=\"line\">[0.01281] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/month_of_year.plot&quot;</span></span><br><span class=\"line\">[0.09293] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/lines_of_code_by_author.plot&quot;</span></span><br><span class=\"line\">[0.01340] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/commits_by_year.plot&quot;</span></span><br><span class=\"line\">[0.01799] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/hour_of_day.plot&quot;</span></span><br><span class=\"line\">[0.01627] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/domains.plot&quot;</span></span><br><span class=\"line\">[0.01268] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/commits_by_year_month.plot&quot;</span></span><br><span class=\"line\">[0.09435] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/commits_by_author.plot&quot;</span></span><br><span class=\"line\">[0.01522] &gt;&gt; gnuplot <span class=\"string\">&quot;/workspace/html/fastjson/lines_of_code.plot&quot;</span></span><br><span class=\"line\">Execution <span class=\"keyword\">time</span> 15.16208 secs, 4.58247 secs (30.22 %) <span class=\"keyword\">in</span> external commands)</span><br><span class=\"line\">You may now run:</span><br><span class=\"line\"></span><br><span class=\"line\">   sensible-browser <span class=\"string\">&#x27;/workspace/html/fastjson/index.html&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"报告分析\"><a href=\"#报告分析\" class=\"headerlink\" title=\"报告分析\"></a>报告分析</h2><h3 id=\"常规统计\"><a href=\"#常规统计\" class=\"headerlink\" title=\"常规统计\"></a>常规统计</h3><p>可以看到这个项目叫 fastjson，从 2011 年 7 月 31 日开始提交第一次代码，距离当前已经 3060 天了，893 个活跃天。总共文件是 2960 个，一共的代码行数是 25 万行。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-index.png\" alt=\"常规统计\"></p>\n<h3 id=\"活跃度\"><a href=\"#活跃度\" class=\"headerlink\" title=\"活跃度\"></a>活跃度</h3><p>每天中的每小时的、每周中的每天、每周中的每小时，每年中的每月的、每年的提交数量。</p>\n<p>在过去的 32 周里，其中前 12 周到 17 周这段时间很活跃，提交很多。另外可以看到在白天 12 点到晚上 20 点这段时间提交很少，大部分程序员在这段时间都在应对公司里的工作，无法贡献开源项目。</p>\n<p>晚上 20 点之后提交开始增多，看来是一个非常努力的开发者。另外可以看到周一到周日都有提交，周六相对最少，应该是周六休息和放松一下。周日提交明显比周六多，看来还是花费了不少的个人宝贵周末时间。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-activity-1.png\" alt=\"活跃度-1\"></p>\n<p>还能看到该项目主要完成时间在 2016 年到 2017 年，完成的时区是在东八区，这个维度可对不同区域的开发者贡献数量进行分析。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-activity-2.png\" alt=\"活跃度-2\"></p>\n<h3 id=\"贡献者\"><a href=\"#贡献者\" class=\"headerlink\" title=\"贡献者\"></a>贡献者</h3><p>列举了所有的作者，提交数，第一次提交及最近一次提交。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-authors-1.png\" alt=\"贡献者-1\"></p>\n<p>这张图也是可以看到谁是该项目的创建者，以及这几年以来每年的谁的贡献最大。还有可以看到提交者所用的邮箱账户。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-authors-2.png\" alt=\"贡献者-2\"></p>\n<h3 id=\"文件及行数\"><a href=\"#文件及行数\" class=\"headerlink\" title=\"文件及行数\"></a>文件及行数</h3><p>文件总数是 2960 个，代码行数是 25 万行。</p>\n<p>另外还可以看到每年的文件增加趋势图以及这些文件类型数量的排名，可以看到 java 文件占了 96.08%，其次是 json。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-files.png\" alt=\"文件\"></p>\n<h3 id=\"Tags\"><a href=\"#Tags\" class=\"headerlink\" title=\"Tags\"></a>Tags</h3><p>Tags 对于团队是一个很重要分析指标（前提是所要分析的仓库在版本发布后创建了 Tag）可以看到每个版本的贡献度排名。</p>\n<p><img src=\"/2019/12/git-stats/git-stats-tags.png\" alt=\"Tags\"></p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>如果感兴趣可以分析一下自己的项目或是去 GitHub 上找一个有意思、有影响力的项目拿来分析一下，比如 996.ICU 以及 vue 等，玩的开心。</p>","categories":[{"name":"Git","path":"api/categories/Git.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"},{"name":"Stats","path":"api/tags/Stats.json"}]}