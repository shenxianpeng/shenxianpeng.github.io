{"title":"Jenkinsfile example - 实现交互、clone 多个仓库以及 git push","slug":"2019/07/Jenkinsfile-example","date":"2019-07-07T10:45:53.000Z","updated":"2023-04-12T14:28:21.311Z","comments":true,"path":"api/articles/2019/07/Jenkinsfile-example.json","excerpt":"这个pipeline里包含了如下几个技术：如何使用其他机器，agent如何使用环境变量，environment如何在build前通过参数化输入，parameters如何使用交互，input如何同时clone多个repos如何进行条件判断，anyOf","covers":null,"content":"<p>这个pipeline里包含了如下几个技术：</p>\n<ul>\n<li>如何使用其他机器，agent</li>\n<li>如何使用环境变量，environment</li>\n<li>如何在build前通过参数化输入，parameters</li>\n<li>如何使用交互，input</li>\n<li>如何同时clone多个repos</li>\n<li>如何进行条件判断，anyOf</li>\n</ul>\n<span id=\"more\"></span>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">    agent &#123;</span><br><span class=\"line\">        node &#123;</span><br><span class=\"line\">            label <span class=\"string\">&#x27;windows-agent&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    environment &#123;</span><br><span class=\"line\">        MY_CRE = credentials(<span class=\"string\">&quot;2aee7e0c-a728-4d9c-b25b-ad5451a12d&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    parameters &#123;</span><br><span class=\"line\">        // Jenkins parameter</span><br><span class=\"line\">        choice(</span><br><span class=\"line\">            name: <span class=\"string\">&#x27;REPO&#x27;</span>,</span><br><span class=\"line\">            choices: [<span class=\"string\">&#x27;repo1&#x27;</span>, <span class=\"string\">&#x27;repo2&#x27;</span>, <span class=\"string\">&#x27;repo3&#x27;</span>, <span class=\"string\">&#x27;repo4&#x27;</span>],</span><br><span class=\"line\">            description: <span class=\"string\">&#x27;Required: pick a repo you want to build&#x27;</span>)</span><br><span class=\"line\">        string(</span><br><span class=\"line\">            name: <span class=\"string\">&#x27;BRANCH&#x27;</span>,</span><br><span class=\"line\">            defaultValue: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            description: <span class=\"string\">&#x27;Required: chose a branch you want to checkout&#x27;</span>)</span><br><span class=\"line\">        string(</span><br><span class=\"line\">            name: <span class=\"string\">&#x27;BUILD_NO&#x27;</span>,</span><br><span class=\"line\">            defaultValue: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            description: <span class=\"string\">&#x27;Required: input build number&#x27;</span>)</span><br><span class=\"line\">        string(</span><br><span class=\"line\">            name: <span class=\"string\">&#x27;JIRA_NO&#x27;</span>,</span><br><span class=\"line\">            defaultValue: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            description: <span class=\"string\">&#x27;Optional: input jira ticket number for commit message&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stages &#123;</span><br><span class=\"line\">        stage(<span class=\"string\">&quot;Are you sure?&quot;</span>)&#123;</span><br><span class=\"line\">            steps&#123;</span><br><span class=\"line\">                // make sure you want to start this build</span><br><span class=\"line\">                input message: <span class=\"string\">&quot;<span class=\"variable\">$&#123;REPO&#125;</span>/<span class=\"variable\">$&#123;BRANCH&#125;</span>:<span class=\"variable\">$&#123;BUILD_NO&#125;</span>, are you sure?&quot;</span></span><br><span class=\"line\">                <span class=\"built_in\">echo</span> <span class=\"string\">&quot;I&#x27;m sure!&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage(<span class=\"string\">&#x27;Git clone repos&#x27;</span>) &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                // git <span class=\"built_in\">clone</span> one repo <span class=\"built_in\">source</span> code</span><br><span class=\"line\">                checkout([</span><br><span class=\"line\">                    <span class=\"variable\">$class</span>: <span class=\"string\">&#x27;GitSCM&#x27;</span>, branches: [[name: <span class=\"string\">&#x27;refs/heads/$&#123;BRANCH&#125;&#x27;</span>]], browser: [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;GitHub&#x27;</span>, repoUrl: <span class=\"string\">&#x27;https://github.com/$&#123;REPO&#125;&#x27;</span>], doGenerateSubmoduleConfigurations: <span class=\"literal\">false</span>, extensions: [[<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;CleanBeforeCheckout&#x27;</span>], [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;LocalBranch&#x27;</span>, localBranch: <span class=\"string\">&#x27;**&#x27;</span>], [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;RelativeTargetDirectory&#x27;</span>, relativeTargetDir: <span class=\"string\">&#x27;../$&#123;REPO&#125;&#x27;</span>]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: <span class=\"string\">&#x27;2aee7e0c-a728-4d9c-b25b&#x27;</span>, url: <span class=\"string\">&#x27;https://github.com/$&#123;REPO&#125;.git&#x27;</span>]]])</span><br><span class=\"line\"></span><br><span class=\"line\">                // git <span class=\"built_in\">clone</span> another repo <span class=\"built_in\">source</span> code</span><br><span class=\"line\">                checkout([</span><br><span class=\"line\">                    <span class=\"variable\">$class</span>: <span class=\"string\">&#x27;GitSCM&#x27;</span>, branches: [[name: <span class=\"string\">&#x27;refs/heads/$&#123;BRANCH&#125;&#x27;</span>]], browser: [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;GitHub&#x27;</span>, repoUrl: <span class=\"string\">&#x27;https://github.com/$&#123;REPO&#125;&#x27;</span>], doGenerateSubmoduleConfigurations: <span class=\"literal\">false</span>, extensions: [[<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;CleanBeforeCheckout&#x27;</span>], [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;LocalBranch&#x27;</span>, localBranch: <span class=\"string\">&#x27;**&#x27;</span>], [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;RelativeTargetDirectory&#x27;</span>, relativeTargetDir: <span class=\"string\">&#x27;../$&#123;REPO&#125;&#x27;</span>]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: <span class=\"string\">&#x27;2aee7e0c-a728-4d9c-b25b&#x27;</span>, url: <span class=\"string\">&#x27;https://github.com/$&#123;REPO&#125;.git&#x27;</span>]]])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage(<span class=\"string\">&#x27;Build repo1 and repo2&#x27;</span>) &#123;</span><br><span class=\"line\">            when &#123;</span><br><span class=\"line\">                // <span class=\"keyword\">if</span> REPO=repo1 or REPO=repo2, execute build_repo12.sh</span><br><span class=\"line\">                anyOf &#123;</span><br><span class=\"line\">                    environment name: <span class=\"string\">&#x27;REPO&#x27;</span>, value: <span class=\"string\">&#x27;repo1&#x27;</span></span><br><span class=\"line\">                    environment name: <span class=\"string\">&#x27;REPO&#x27;</span>, value: <span class=\"string\">&#x27;repo2&#x27;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                sh label: <span class=\"string\">&#x27;&#x27;</span>, script: <span class=\"string\">&#x27;$&#123;REPO&#125;/build_repo12.sh $&#123;REPO&#125; $&#123;BUILD_NO&#125; $&#123;JIRA_NO&#125;&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage(<span class=\"string\">&#x27;Build repo3 and repo4&#x27;</span>) &#123;</span><br><span class=\"line\">            when &#123;</span><br><span class=\"line\">                // <span class=\"keyword\">if</span> REPO=repo3 or REPO=repo4, execute build_repo34.sh</span><br><span class=\"line\">                anyOf &#123;</span><br><span class=\"line\">                    environment name: <span class=\"string\">&#x27;REPO&#x27;</span>, value: <span class=\"string\">&#x27;repo3&#x27;</span></span><br><span class=\"line\">                    environment name: <span class=\"string\">&#x27;REPO&#x27;</span>, value: <span class=\"string\">&#x27;repo4&#x27;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                sh label: <span class=\"string\">&#x27;&#x27;</span>, script: <span class=\"string\">&#x27;$&#123;REPO&#125;/build_repo34.sh $&#123;REPO&#125; $&#123;BUILD_NO&#125; $&#123;JIRA_NO&#125;&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        stage(<span class=\"string\">&#x27;Git push to remote repo&#x27;</span>) &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                // commit code to remote repo</span><br><span class=\"line\">                sshagent([<span class=\"string\">&#x27;2aee7e0c-a728-4d9c-b25b&#x27;</span>]) &#123;</span><br><span class=\"line\">                    sh <span class=\"string\">&quot;git push https://%MY_CRE_USR%:%MY_CRE_PSW%@github.com/<span class=\"variable\">$&#123;REPO&#125;</span>.git&quot;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","more":"<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">    agent &#123;</span><br><span class=\"line\">        node &#123;</span><br><span class=\"line\">            label <span class=\"string\">&#x27;windows-agent&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    environment &#123;</span><br><span class=\"line\">        MY_CRE = credentials(<span class=\"string\">&quot;2aee7e0c-a728-4d9c-b25b-ad5451a12d&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    parameters &#123;</span><br><span class=\"line\">        // Jenkins parameter</span><br><span class=\"line\">        choice(</span><br><span class=\"line\">            name: <span class=\"string\">&#x27;REPO&#x27;</span>,</span><br><span class=\"line\">            choices: [<span class=\"string\">&#x27;repo1&#x27;</span>, <span class=\"string\">&#x27;repo2&#x27;</span>, <span class=\"string\">&#x27;repo3&#x27;</span>, <span class=\"string\">&#x27;repo4&#x27;</span>],</span><br><span class=\"line\">            description: <span class=\"string\">&#x27;Required: pick a repo you want to build&#x27;</span>)</span><br><span class=\"line\">        string(</span><br><span class=\"line\">            name: <span class=\"string\">&#x27;BRANCH&#x27;</span>,</span><br><span class=\"line\">            defaultValue: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            description: <span class=\"string\">&#x27;Required: chose a branch you want to checkout&#x27;</span>)</span><br><span class=\"line\">        string(</span><br><span class=\"line\">            name: <span class=\"string\">&#x27;BUILD_NO&#x27;</span>,</span><br><span class=\"line\">            defaultValue: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            description: <span class=\"string\">&#x27;Required: input build number&#x27;</span>)</span><br><span class=\"line\">        string(</span><br><span class=\"line\">            name: <span class=\"string\">&#x27;JIRA_NO&#x27;</span>,</span><br><span class=\"line\">            defaultValue: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">            description: <span class=\"string\">&#x27;Optional: input jira ticket number for commit message&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stages &#123;</span><br><span class=\"line\">        stage(<span class=\"string\">&quot;Are you sure?&quot;</span>)&#123;</span><br><span class=\"line\">            steps&#123;</span><br><span class=\"line\">                // make sure you want to start this build</span><br><span class=\"line\">                input message: <span class=\"string\">&quot;<span class=\"variable\">$&#123;REPO&#125;</span>/<span class=\"variable\">$&#123;BRANCH&#125;</span>:<span class=\"variable\">$&#123;BUILD_NO&#125;</span>, are you sure?&quot;</span></span><br><span class=\"line\">                <span class=\"built_in\">echo</span> <span class=\"string\">&quot;I&#x27;m sure!&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage(<span class=\"string\">&#x27;Git clone repos&#x27;</span>) &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                // git <span class=\"built_in\">clone</span> one repo <span class=\"built_in\">source</span> code</span><br><span class=\"line\">                checkout([</span><br><span class=\"line\">                    <span class=\"variable\">$class</span>: <span class=\"string\">&#x27;GitSCM&#x27;</span>, branches: [[name: <span class=\"string\">&#x27;refs/heads/$&#123;BRANCH&#125;&#x27;</span>]], browser: [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;GitHub&#x27;</span>, repoUrl: <span class=\"string\">&#x27;https://github.com/$&#123;REPO&#125;&#x27;</span>], doGenerateSubmoduleConfigurations: <span class=\"literal\">false</span>, extensions: [[<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;CleanBeforeCheckout&#x27;</span>], [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;LocalBranch&#x27;</span>, localBranch: <span class=\"string\">&#x27;**&#x27;</span>], [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;RelativeTargetDirectory&#x27;</span>, relativeTargetDir: <span class=\"string\">&#x27;../$&#123;REPO&#125;&#x27;</span>]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: <span class=\"string\">&#x27;2aee7e0c-a728-4d9c-b25b&#x27;</span>, url: <span class=\"string\">&#x27;https://github.com/$&#123;REPO&#125;.git&#x27;</span>]]])</span><br><span class=\"line\"></span><br><span class=\"line\">                // git <span class=\"built_in\">clone</span> another repo <span class=\"built_in\">source</span> code</span><br><span class=\"line\">                checkout([</span><br><span class=\"line\">                    <span class=\"variable\">$class</span>: <span class=\"string\">&#x27;GitSCM&#x27;</span>, branches: [[name: <span class=\"string\">&#x27;refs/heads/$&#123;BRANCH&#125;&#x27;</span>]], browser: [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;GitHub&#x27;</span>, repoUrl: <span class=\"string\">&#x27;https://github.com/$&#123;REPO&#125;&#x27;</span>], doGenerateSubmoduleConfigurations: <span class=\"literal\">false</span>, extensions: [[<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;CleanBeforeCheckout&#x27;</span>], [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;LocalBranch&#x27;</span>, localBranch: <span class=\"string\">&#x27;**&#x27;</span>], [<span class=\"variable\">$class</span>: <span class=\"string\">&#x27;RelativeTargetDirectory&#x27;</span>, relativeTargetDir: <span class=\"string\">&#x27;../$&#123;REPO&#125;&#x27;</span>]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: <span class=\"string\">&#x27;2aee7e0c-a728-4d9c-b25b&#x27;</span>, url: <span class=\"string\">&#x27;https://github.com/$&#123;REPO&#125;.git&#x27;</span>]]])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage(<span class=\"string\">&#x27;Build repo1 and repo2&#x27;</span>) &#123;</span><br><span class=\"line\">            when &#123;</span><br><span class=\"line\">                // <span class=\"keyword\">if</span> REPO=repo1 or REPO=repo2, execute build_repo12.sh</span><br><span class=\"line\">                anyOf &#123;</span><br><span class=\"line\">                    environment name: <span class=\"string\">&#x27;REPO&#x27;</span>, value: <span class=\"string\">&#x27;repo1&#x27;</span></span><br><span class=\"line\">                    environment name: <span class=\"string\">&#x27;REPO&#x27;</span>, value: <span class=\"string\">&#x27;repo2&#x27;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                sh label: <span class=\"string\">&#x27;&#x27;</span>, script: <span class=\"string\">&#x27;$&#123;REPO&#125;/build_repo12.sh $&#123;REPO&#125; $&#123;BUILD_NO&#125; $&#123;JIRA_NO&#125;&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage(<span class=\"string\">&#x27;Build repo3 and repo4&#x27;</span>) &#123;</span><br><span class=\"line\">            when &#123;</span><br><span class=\"line\">                // <span class=\"keyword\">if</span> REPO=repo3 or REPO=repo4, execute build_repo34.sh</span><br><span class=\"line\">                anyOf &#123;</span><br><span class=\"line\">                    environment name: <span class=\"string\">&#x27;REPO&#x27;</span>, value: <span class=\"string\">&#x27;repo3&#x27;</span></span><br><span class=\"line\">                    environment name: <span class=\"string\">&#x27;REPO&#x27;</span>, value: <span class=\"string\">&#x27;repo4&#x27;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                sh label: <span class=\"string\">&#x27;&#x27;</span>, script: <span class=\"string\">&#x27;$&#123;REPO&#125;/build_repo34.sh $&#123;REPO&#125; $&#123;BUILD_NO&#125; $&#123;JIRA_NO&#125;&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        stage(<span class=\"string\">&#x27;Git push to remote repo&#x27;</span>) &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                // commit code to remote repo</span><br><span class=\"line\">                sshagent([<span class=\"string\">&#x27;2aee7e0c-a728-4d9c-b25b&#x27;</span>]) &#123;</span><br><span class=\"line\">                    sh <span class=\"string\">&quot;git push https://%MY_CRE_USR%:%MY_CRE_PSW%@github.com/<span class=\"variable\">$&#123;REPO&#125;</span>.git&quot;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[{"name":"Jenkins","path":"api/categories/Jenkins.json"}],"tags":[{"name":"Jenkins","path":"api/tags/Jenkins.json"},{"name":"Pipeline","path":"api/tags/Pipeline.json"}]}