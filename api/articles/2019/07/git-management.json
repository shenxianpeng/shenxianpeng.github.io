{"title":"Git 管理","slug":"2019/07/git-management","date":"2019-07-07T09:55:18.000Z","updated":"2020-05-12T08:18:10.233Z","comments":true,"path":"api/articles/2019/07/git-management.json","excerpt":null,"covers":null,"content":"<h2 id=\"查找是否有遗漏提交\"><a href=\"#查找是否有遗漏提交\" class=\"headerlink\" title=\"查找是否有遗漏提交\"></a>查找是否有遗漏提交</h2><p>从一个分支找到所有的 commit 和 ticket 号，然后去另外一个分支去查找这些提交是否也在这个分支里。</p>\n<p>找一个分支的所有 commit 和 ticket 号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从 develop 分支上获取所有的 commit 和 ticket 号，然后根据 ticket 号进行排序</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> origin/develop --pretty=oneline --abbrev-commit | cut -d<span class=\"string\">' '</span> -f2,1 | sort -t <span class=\"string\">' '</span> -k 2 &gt;&gt; develop_involve_tickets.txt</span><br><span class=\"line\"></span><br><span class=\"line\">--pretty=oneline    <span class=\"comment\"># 显示为一行</span></span><br><span class=\"line\">--abbrev-commit     <span class=\"comment\"># 显示短的提交号</span></span><br><span class=\"line\"></span><br><span class=\"line\">cut --<span class=\"built_in\">help</span>          <span class=\"comment\"># 切出来所需要的字段</span></span><br><span class=\"line\">-d                  <span class=\"comment\"># 字段分隔符, ' '分隔空格</span></span><br><span class=\"line\">-f                  <span class=\"comment\"># 只选择某些字段</span></span><br><span class=\"line\"></span><br><span class=\"line\">sort --<span class=\"built_in\">help</span>         <span class=\"comment\"># 利用 sort 将剪出来的字段进行排序</span></span><br><span class=\"line\">-t                  <span class=\"comment\"># 字段分隔， ' '分隔空格</span></span><br><span class=\"line\">-k                  <span class=\"comment\"># 通过键进行键定义排序;KEYDEF 给出位置和类型</span></span><br></pre></td></tr></table></figure>\n\n<p>然后去另外一个分支去找是否有次提交</p>\n<p>由于在 SVN 时代时，每次修改都会在描述里添加 ticket 号，所以切换到 master 分支后，直接搜索所有 ticket 号是否存在就好了.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">filename=<span class=\"string\">'C:\\develop_involve_tickets.txt'</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$line</span></span><br><span class=\"line\">    var=`grep -ir <span class=\"variable\">$line</span> src`</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ -z <span class=\"variable\">$var</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"not found\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$line</span> &gt;&gt; ../not_found_in_master.txt</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"found\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$line</span> &gt;&gt; ../found_in_master.txt</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; <span class=\"string\">\"<span class=\"variable\">$filename</span>\"</span></span><br></pre></td></tr></table></figure>\n","more":"<h2 id=\"查找是否有遗漏提交\"><a href=\"#查找是否有遗漏提交\" class=\"headerlink\" title=\"查找是否有遗漏提交\"></a>查找是否有遗漏提交</h2><p>从一个分支找到所有的 commit 和 ticket 号，然后去另外一个分支去查找这些提交是否也在这个分支里。</p>\n<p>找一个分支的所有 commit 和 ticket 号</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从 develop 分支上获取所有的 commit 和 ticket 号，然后根据 ticket 号进行排序</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> origin/develop --pretty=oneline --abbrev-commit | cut -d<span class=\"string\">' '</span> -f2,1 | sort -t <span class=\"string\">' '</span> -k 2 &gt;&gt; develop_involve_tickets.txt</span><br><span class=\"line\"></span><br><span class=\"line\">--pretty=oneline    <span class=\"comment\"># 显示为一行</span></span><br><span class=\"line\">--abbrev-commit     <span class=\"comment\"># 显示短的提交号</span></span><br><span class=\"line\"></span><br><span class=\"line\">cut --<span class=\"built_in\">help</span>          <span class=\"comment\"># 切出来所需要的字段</span></span><br><span class=\"line\">-d                  <span class=\"comment\"># 字段分隔符, ' '分隔空格</span></span><br><span class=\"line\">-f                  <span class=\"comment\"># 只选择某些字段</span></span><br><span class=\"line\"></span><br><span class=\"line\">sort --<span class=\"built_in\">help</span>         <span class=\"comment\"># 利用 sort 将剪出来的字段进行排序</span></span><br><span class=\"line\">-t                  <span class=\"comment\"># 字段分隔， ' '分隔空格</span></span><br><span class=\"line\">-k                  <span class=\"comment\"># 通过键进行键定义排序;KEYDEF 给出位置和类型</span></span><br></pre></td></tr></table></figure>\n\n<p>然后去另外一个分支去找是否有次提交</p>\n<p>由于在 SVN 时代时，每次修改都会在描述里添加 ticket 号，所以切换到 master 分支后，直接搜索所有 ticket 号是否存在就好了.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">filename=<span class=\"string\">'C:\\develop_involve_tickets.txt'</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$line</span></span><br><span class=\"line\">    var=`grep -ir <span class=\"variable\">$line</span> src`</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ -z <span class=\"variable\">$var</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"not found\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$line</span> &gt;&gt; ../not_found_in_master.txt</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"found\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$line</span> &gt;&gt; ../found_in_master.txt</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; <span class=\"string\">\"<span class=\"variable\">$filename</span>\"</span></span><br></pre></td></tr></table></figure>\n","categories":[{"name":"Git","path":"api/categories/Git.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}