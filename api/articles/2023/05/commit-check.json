{"title":"程序员自我修养之Git提交信息和分支创建规范（工具篇）","slug":"2023/05/commit-check","date":"2023-05-09T11:00:00.000Z","updated":"2025-04-06T17:46:41.797Z","comments":true,"path":"api/articles/2023/05/commit-check.json","excerpt":"Git 提交信息和 Git 分支命名规范是团队协作中非常重要的一部分，它们能够使代码库更加规范、易于维护和理解。我们需要通过工具来帮助实现Git提交信息和分支创建规范，本篇将介绍如何使用 Commit Check 这个工具来验证提交信息、分支命名、提交用户名字、提交用户邮箱等是否符合规范。更多关于Git提交信息和分支创建规范可以参看我之前发布的文章《程序员自我修养之Git提交信息和分支创建规范》，这里不再赘述。","covers":null,"content":"<p>Git 提交信息和 Git 分支命名规范是团队协作中非常重要的一部分，它们能够使代码库更加规范、易于维护和理解。</p>\n<p>我们需要通过工具来帮助实现Git提交信息和分支创建规范，本篇将介绍如何使用 <a href=\"https://github.com/commit-check/commit-check\">Commit Check</a> 这个工具来验证提交信息、分支命名、提交用户名字、提交用户邮箱等是否符合规范。</p>\n<p>更多关于Git提交信息和分支创建规范可以参看我之前发布的文章<a href=\"https://shenxianpeng.github.io/2020/09/commit-messages-specification/\">《程序员自我修养之Git提交信息和分支创建规范》</a>，这里不再赘述。</p>\n<span id=\"more\"></span>\n<h2 id=\"Commit-Check-简介\"><a href=\"#Commit-Check-简介\" class=\"headerlink\" title=\"Commit Check 简介\"></a>Commit Check 简介</h2><p>Commit Check 是一个可以检查 Git 提交信息，分支命名、提交者用户名、提交者邮箱等等。它是 <a href=\"https://docs.mohami.io/yet-another-commit-checker-yacc/\">Yet Another Commit Checker</a> 的开源平替版。</p>\n<h2 id=\"Commit-Check-的配置\"><a href=\"#Commit-Check-的配置\" class=\"headerlink\" title=\"Commit Check 的配置\"></a>Commit Check 的配置</h2><h3 id=\"使用默认设置\"><a href=\"#使用默认设置\" class=\"headerlink\" title=\"使用默认设置\"></a>使用默认设置</h3><p>如果没有进行自定义设置，Commit Check 会使用默认设置。具体设置<a href=\"https://github.com/commit-check/commit-check/blob/main/commit_check/__init__.py\">在此</a></p>\n<p>默认设置中，提交信息遵循<a href=\"https://www.conventionalcommits.org/zh-hans/v1.0.0/\">约定式提交</a>，分支命名见<a href=\"https://support.atlassian.com/bitbucket-cloud/docs/configure-a-projects-branching-model/\">分支模型详细信息</a></p>\n<h3 id=\"使用自定义配置\"><a href=\"#使用自定义配置\" class=\"headerlink\" title=\"使用自定义配置\"></a>使用自定义配置</h3><p>你可以在你的 Git 仓库下创建一个配置文件 <code>.commit-check.yml</code> 来自定义设置，例如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">checks:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">check:</span> <span class=\"string\">message</span></span><br><span class=\"line\">    <span class=\"attr\">regex:</span> <span class=\"string\">&#x27;^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)&#123;1&#125;(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)|(Merge).*|(fixup!.*)&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">error:</span> <span class=\"string\">&quot;The commit message should be structured as follows:\\n\\n</span></span><br><span class=\"line\"><span class=\"string\">    &lt;type&gt;[optional scope]: &lt;description&gt;\\n</span></span><br><span class=\"line\"><span class=\"string\">    [optional body]\\n</span></span><br><span class=\"line\"><span class=\"string\">    [optional footer(s)]\\n\\n</span></span><br><span class=\"line\"><span class=\"string\">    More details please refer to https://www.conventionalcommits.org&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">suggest:</span> <span class=\"string\">please</span> <span class=\"string\">check</span> <span class=\"string\">your</span> <span class=\"string\">commit</span> <span class=\"string\">message</span> <span class=\"string\">whether</span> <span class=\"string\">matches</span> <span class=\"string\">above</span> <span class=\"string\">regex</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">check:</span> <span class=\"string\">branch</span></span><br><span class=\"line\">    <span class=\"attr\">regex:</span> <span class=\"string\">^(bugfix|feature|release|hotfix|task)\\/.+|(master)|(main)|(HEAD)|(PR-.+)</span></span><br><span class=\"line\">    <span class=\"attr\">error:</span> <span class=\"string\">&quot;Branches must begin with these types: bugfix/ feature/ release/ hotfix/ task/&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">suggest:</span> <span class=\"string\">run</span> <span class=\"string\">command</span> <span class=\"string\">`git</span> <span class=\"string\">checkout</span> <span class=\"string\">-b</span> <span class=\"string\">type/branch_name`</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">check:</span> <span class=\"string\">author_name</span></span><br><span class=\"line\">    <span class=\"attr\">regex:</span> <span class=\"string\">^[A-Za-z</span> <span class=\"string\">,.\\&#x27;-]+$|.*(\\[bot])</span></span><br><span class=\"line\">    <span class=\"attr\">error:</span> <span class=\"string\">The</span> <span class=\"string\">committer</span> <span class=\"string\">name</span> <span class=\"string\">seems</span> <span class=\"string\">invalid</span></span><br><span class=\"line\">    <span class=\"attr\">suggest:</span> <span class=\"string\">run</span> <span class=\"string\">command</span> <span class=\"string\">`git</span> <span class=\"string\">config</span> <span class=\"string\">user.name</span> <span class=\"string\">&quot;Your Name&quot;</span><span class=\"string\">`</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">check:</span> <span class=\"string\">author_email</span></span><br><span class=\"line\">    <span class=\"attr\">regex:</span> <span class=\"string\">^\\S+@\\S+\\.\\S+$</span></span><br><span class=\"line\">    <span class=\"attr\">error:</span> <span class=\"string\">The</span> <span class=\"string\">committer</span> <span class=\"string\">email</span> <span class=\"string\">seems</span> <span class=\"string\">invalid</span></span><br><span class=\"line\">    <span class=\"attr\">suggest:</span> <span class=\"string\">run</span> <span class=\"string\">command</span> <span class=\"string\">`git</span> <span class=\"string\">config</span> <span class=\"string\">user.email</span> <span class=\"string\">yourname@example.com`</span></span><br></pre></td></tr></table></figure>\n\n<p>你可以根据自己的需要来修改 <code>regex</code>, <code>error</code>, <code>suggest</code> 的值。</p>\n<h2 id=\"Commit-Check-使用\"><a href=\"#Commit-Check-使用\" class=\"headerlink\" title=\"Commit Check 使用\"></a>Commit Check 使用</h2><p>Commit Check 支持多种使用方式</p>\n<h3 id=\"以-GitHub-Action-来运行\"><a href=\"#以-GitHub-Action-来运行\" class=\"headerlink\" title=\"以 GitHub Action 来运行\"></a>以 GitHub Action 来运行</h3><p>例如创建一个 GitHub Action workflow 文件 <code>.github/workflows/commit-check.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Commit</span> <span class=\"string\">Check</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">  <span class=\"attr\">pull_request:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> <span class=\"string\">&#x27;main&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">commit-check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v3</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">commit-check/commit-check-action@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">message:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">branch:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">author-name:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">author-email:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">dry-run:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">job-summary:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>详细请参考 <a href=\"https://github.com/commit-check/commit-check-action\">https://github.com/commit-check/commit-check-action</a></p>\n<h3 id=\"以-pre-commit-hook-运行\"><a href=\"#以-pre-commit-hook-运行\" class=\"headerlink\" title=\"以 pre-commit hook 运行\"></a>以 pre-commit hook 运行</h3><p>首选需要安装了 <a href=\"https://pre-commit.com/#install\">pre-commit</a></p>\n<p>然后将如下设置添加到你的 <code>.pre-commit-config.yaml</code> 文件中。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span>   <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/commit-check/commit-check</span></span><br><span class=\"line\">    <span class=\"attr\">rev:</span> <span class=\"string\">the</span> <span class=\"string\">tag</span> <span class=\"string\">or</span> <span class=\"string\">revision</span></span><br><span class=\"line\">    <span class=\"attr\">hooks:</span> <span class=\"comment\"># support hooks</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">id:</span> <span class=\"string\">check-message</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">id:</span> <span class=\"string\">check-branch</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">id:</span> <span class=\"string\">check-author-name</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">id:</span> <span class=\"string\">check-author-email</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"以命令行来运行\"><a href=\"#以命令行来运行\" class=\"headerlink\" title=\"以命令行来运行\"></a>以命令行来运行</h3><p>可以通过 pip 先安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install commit-check</span><br></pre></td></tr></table></figure>\n<p>然后运行 <code>commit-check --help</code> 命令就可以查看如何使用了，具体可以参见<a href=\"https://commit-check.github.io/commit-check/cli_args.html\">文档</a></p>\n<h3 id=\"以-Git-Hooks-来运行\"><a href=\"#以-Git-Hooks-来运行\" class=\"headerlink\" title=\"以 Git Hooks 来运行\"></a>以 Git Hooks 来运行</h3><p>要配置 Git Hooks ，你需要在 Git 存储库的 <code>.git/hooks/</code> 目录中创建一个新的脚本文件。</p>\n<p>例如 <code>.git/hooks/pre-push</code>，文件内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">commit-check --message --branch --author-name --author-email</span><br></pre></td></tr></table></figure>\n<p>并修改为可执行权限 <code>chmod +x .git/hooks/pre-push</code>，然后当你运行 <code>git push</code> 命令时，这个 push hook 会自动执行。</p>\n<h2 id=\"Commit-Check-执行失败示例\"><a href=\"#Commit-Check-执行失败示例\" class=\"headerlink\" title=\"Commit Check 执行失败示例\"></a>Commit Check 执行失败示例</h2><p>检查提交信息失败</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Commit rejected by Commit-Check.</span><br><span class=\"line\"></span><br><span class=\"line\">  (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)</span><br><span class=\"line\">   / ._. \\      / ._. \\      / ._. \\      / ._. \\      / ._. \\</span><br><span class=\"line\"> __\\( C )/__  __\\( H )/__  __\\( E )/__  __\\( C )/__  __\\( K )/__</span><br><span class=\"line\">(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)</span><br><span class=\"line\">   || E ||      || R ||      || R ||      || O ||      || R ||</span><br><span class=\"line\"> _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._</span><br><span class=\"line\">(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)</span><br><span class=\"line\"> `-´     `-´  `-´     `-´  `-´     `-´  `-´     `-´  `-´     `-´</span><br><span class=\"line\"></span><br><span class=\"line\">Invalid commit message =&gt; <span class=\"built_in\">test</span></span><br><span class=\"line\">It doesn<span class=\"string\">&#x27;t match regex: ^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)&#123;1&#125;(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">The commit message should be structured as follows:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;type&gt;[optional scope]: &lt;description&gt;</span></span><br><span class=\"line\"><span class=\"string\">[optional body]</span></span><br><span class=\"line\"><span class=\"string\">[optional footer(s)]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">More details please refer to https://www.conventionalcommits.org</span></span><br><span class=\"line\"><span class=\"string\">Suggest: please check your commit message whether matches above regex</span></span><br></pre></td></tr></table></figure>\n\n<p>检查分支命名失败</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Commit rejected by Commit-Check.</span><br><span class=\"line\"></span><br><span class=\"line\">  (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)</span><br><span class=\"line\">   / ._. \\      / ._. \\      / ._. \\      / ._. \\      / ._. \\</span><br><span class=\"line\"> __\\( C )/__  __\\( H )/__  __\\( E )/__  __\\( C )/__  __\\( K )/__</span><br><span class=\"line\">(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)</span><br><span class=\"line\">   || E ||      || R ||      || R ||      || O ||      || R ||</span><br><span class=\"line\"> _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._</span><br><span class=\"line\">(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)</span><br><span class=\"line\"> `-´     `-´  `-´     `-´  `-´     `-´  `-´     `-´  `-´     `-´</span><br><span class=\"line\"></span><br><span class=\"line\">Commit rejected.</span><br><span class=\"line\"></span><br><span class=\"line\">Invalid branch name =&gt; <span class=\"built_in\">test</span></span><br><span class=\"line\">It doesn<span class=\"string\">&#x27;t match regex: ^(bugfix|feature|release|hotfix|task)\\/.+|(master)|(main)|(HEAD)|(PR-.+)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Branches must begin with these types: bugfix/ feature/ release/ hotfix/ task/</span></span><br><span class=\"line\"><span class=\"string\">Suggest: run command `git checkout -b type/branch_name`</span></span><br></pre></td></tr></table></figure>\n\n\n<p>以上就是 Commit Check 的使用介绍了，更多新信息请参考 <a href=\"https://github.com/commit-check/commit-check\">https://github.com/commit-check/commit-check</a></p>\n<hr>\n<p>转载本站文章请注明作者和出处，请勿用于任何商业用途。欢迎关注公众号「DevOps攻城狮」</p>\n","more":"<h2 id=\"Commit-Check-简介\"><a href=\"#Commit-Check-简介\" class=\"headerlink\" title=\"Commit Check 简介\"></a>Commit Check 简介</h2><p>Commit Check 是一个可以检查 Git 提交信息，分支命名、提交者用户名、提交者邮箱等等。它是 <a href=\"https://docs.mohami.io/yet-another-commit-checker-yacc/\">Yet Another Commit Checker</a> 的开源平替版。</p>\n<h2 id=\"Commit-Check-的配置\"><a href=\"#Commit-Check-的配置\" class=\"headerlink\" title=\"Commit Check 的配置\"></a>Commit Check 的配置</h2><h3 id=\"使用默认设置\"><a href=\"#使用默认设置\" class=\"headerlink\" title=\"使用默认设置\"></a>使用默认设置</h3><p>如果没有进行自定义设置，Commit Check 会使用默认设置。具体设置<a href=\"https://github.com/commit-check/commit-check/blob/main/commit_check/__init__.py\">在此</a></p>\n<p>默认设置中，提交信息遵循<a href=\"https://www.conventionalcommits.org/zh-hans/v1.0.0/\">约定式提交</a>，分支命名见<a href=\"https://support.atlassian.com/bitbucket-cloud/docs/configure-a-projects-branching-model/\">分支模型详细信息</a></p>\n<h3 id=\"使用自定义配置\"><a href=\"#使用自定义配置\" class=\"headerlink\" title=\"使用自定义配置\"></a>使用自定义配置</h3><p>你可以在你的 Git 仓库下创建一个配置文件 <code>.commit-check.yml</code> 来自定义设置，例如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">checks:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">check:</span> <span class=\"string\">message</span></span><br><span class=\"line\">    <span class=\"attr\">regex:</span> <span class=\"string\">&#x27;^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)&#123;1&#125;(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)|(Merge).*|(fixup!.*)&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">error:</span> <span class=\"string\">&quot;The commit message should be structured as follows:\\n\\n</span></span><br><span class=\"line\"><span class=\"string\">    &lt;type&gt;[optional scope]: &lt;description&gt;\\n</span></span><br><span class=\"line\"><span class=\"string\">    [optional body]\\n</span></span><br><span class=\"line\"><span class=\"string\">    [optional footer(s)]\\n\\n</span></span><br><span class=\"line\"><span class=\"string\">    More details please refer to https://www.conventionalcommits.org&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">suggest:</span> <span class=\"string\">please</span> <span class=\"string\">check</span> <span class=\"string\">your</span> <span class=\"string\">commit</span> <span class=\"string\">message</span> <span class=\"string\">whether</span> <span class=\"string\">matches</span> <span class=\"string\">above</span> <span class=\"string\">regex</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">check:</span> <span class=\"string\">branch</span></span><br><span class=\"line\">    <span class=\"attr\">regex:</span> <span class=\"string\">^(bugfix|feature|release|hotfix|task)\\/.+|(master)|(main)|(HEAD)|(PR-.+)</span></span><br><span class=\"line\">    <span class=\"attr\">error:</span> <span class=\"string\">&quot;Branches must begin with these types: bugfix/ feature/ release/ hotfix/ task/&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">suggest:</span> <span class=\"string\">run</span> <span class=\"string\">command</span> <span class=\"string\">`git</span> <span class=\"string\">checkout</span> <span class=\"string\">-b</span> <span class=\"string\">type/branch_name`</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">check:</span> <span class=\"string\">author_name</span></span><br><span class=\"line\">    <span class=\"attr\">regex:</span> <span class=\"string\">^[A-Za-z</span> <span class=\"string\">,.\\&#x27;-]+$|.*(\\[bot])</span></span><br><span class=\"line\">    <span class=\"attr\">error:</span> <span class=\"string\">The</span> <span class=\"string\">committer</span> <span class=\"string\">name</span> <span class=\"string\">seems</span> <span class=\"string\">invalid</span></span><br><span class=\"line\">    <span class=\"attr\">suggest:</span> <span class=\"string\">run</span> <span class=\"string\">command</span> <span class=\"string\">`git</span> <span class=\"string\">config</span> <span class=\"string\">user.name</span> <span class=\"string\">&quot;Your Name&quot;</span><span class=\"string\">`</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">check:</span> <span class=\"string\">author_email</span></span><br><span class=\"line\">    <span class=\"attr\">regex:</span> <span class=\"string\">^\\S+@\\S+\\.\\S+$</span></span><br><span class=\"line\">    <span class=\"attr\">error:</span> <span class=\"string\">The</span> <span class=\"string\">committer</span> <span class=\"string\">email</span> <span class=\"string\">seems</span> <span class=\"string\">invalid</span></span><br><span class=\"line\">    <span class=\"attr\">suggest:</span> <span class=\"string\">run</span> <span class=\"string\">command</span> <span class=\"string\">`git</span> <span class=\"string\">config</span> <span class=\"string\">user.email</span> <span class=\"string\">yourname@example.com`</span></span><br></pre></td></tr></table></figure>\n\n<p>你可以根据自己的需要来修改 <code>regex</code>, <code>error</code>, <code>suggest</code> 的值。</p>\n<h2 id=\"Commit-Check-使用\"><a href=\"#Commit-Check-使用\" class=\"headerlink\" title=\"Commit Check 使用\"></a>Commit Check 使用</h2><p>Commit Check 支持多种使用方式</p>\n<h3 id=\"以-GitHub-Action-来运行\"><a href=\"#以-GitHub-Action-来运行\" class=\"headerlink\" title=\"以 GitHub Action 来运行\"></a>以 GitHub Action 来运行</h3><p>例如创建一个 GitHub Action workflow 文件 <code>.github/workflows/commit-check.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Commit</span> <span class=\"string\">Check</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">  <span class=\"attr\">pull_request:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> <span class=\"string\">&#x27;main&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">commit-check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v3</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">commit-check/commit-check-action@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">message:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">branch:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">author-name:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">author-email:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">dry-run:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"attr\">job-summary:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>详细请参考 <a href=\"https://github.com/commit-check/commit-check-action\">https://github.com/commit-check/commit-check-action</a></p>\n<h3 id=\"以-pre-commit-hook-运行\"><a href=\"#以-pre-commit-hook-运行\" class=\"headerlink\" title=\"以 pre-commit hook 运行\"></a>以 pre-commit hook 运行</h3><p>首选需要安装了 <a href=\"https://pre-commit.com/#install\">pre-commit</a></p>\n<p>然后将如下设置添加到你的 <code>.pre-commit-config.yaml</code> 文件中。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span>   <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/commit-check/commit-check</span></span><br><span class=\"line\">    <span class=\"attr\">rev:</span> <span class=\"string\">the</span> <span class=\"string\">tag</span> <span class=\"string\">or</span> <span class=\"string\">revision</span></span><br><span class=\"line\">    <span class=\"attr\">hooks:</span> <span class=\"comment\"># support hooks</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">id:</span> <span class=\"string\">check-message</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">id:</span> <span class=\"string\">check-branch</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">id:</span> <span class=\"string\">check-author-name</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">id:</span> <span class=\"string\">check-author-email</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"以命令行来运行\"><a href=\"#以命令行来运行\" class=\"headerlink\" title=\"以命令行来运行\"></a>以命令行来运行</h3><p>可以通过 pip 先安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install commit-check</span><br></pre></td></tr></table></figure>\n<p>然后运行 <code>commit-check --help</code> 命令就可以查看如何使用了，具体可以参见<a href=\"https://commit-check.github.io/commit-check/cli_args.html\">文档</a></p>\n<h3 id=\"以-Git-Hooks-来运行\"><a href=\"#以-Git-Hooks-来运行\" class=\"headerlink\" title=\"以 Git Hooks 来运行\"></a>以 Git Hooks 来运行</h3><p>要配置 Git Hooks ，你需要在 Git 存储库的 <code>.git/hooks/</code> 目录中创建一个新的脚本文件。</p>\n<p>例如 <code>.git/hooks/pre-push</code>，文件内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">commit-check --message --branch --author-name --author-email</span><br></pre></td></tr></table></figure>\n<p>并修改为可执行权限 <code>chmod +x .git/hooks/pre-push</code>，然后当你运行 <code>git push</code> 命令时，这个 push hook 会自动执行。</p>\n<h2 id=\"Commit-Check-执行失败示例\"><a href=\"#Commit-Check-执行失败示例\" class=\"headerlink\" title=\"Commit Check 执行失败示例\"></a>Commit Check 执行失败示例</h2><p>检查提交信息失败</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Commit rejected by Commit-Check.</span><br><span class=\"line\"></span><br><span class=\"line\">  (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)</span><br><span class=\"line\">   / ._. \\      / ._. \\      / ._. \\      / ._. \\      / ._. \\</span><br><span class=\"line\"> __\\( C )/__  __\\( H )/__  __\\( E )/__  __\\( C )/__  __\\( K )/__</span><br><span class=\"line\">(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)</span><br><span class=\"line\">   || E ||      || R ||      || R ||      || O ||      || R ||</span><br><span class=\"line\"> _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._</span><br><span class=\"line\">(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)</span><br><span class=\"line\"> `-´     `-´  `-´     `-´  `-´     `-´  `-´     `-´  `-´     `-´</span><br><span class=\"line\"></span><br><span class=\"line\">Invalid commit message =&gt; <span class=\"built_in\">test</span></span><br><span class=\"line\">It doesn<span class=\"string\">&#x27;t match regex: ^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)&#123;1&#125;(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">The commit message should be structured as follows:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;type&gt;[optional scope]: &lt;description&gt;</span></span><br><span class=\"line\"><span class=\"string\">[optional body]</span></span><br><span class=\"line\"><span class=\"string\">[optional footer(s)]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">More details please refer to https://www.conventionalcommits.org</span></span><br><span class=\"line\"><span class=\"string\">Suggest: please check your commit message whether matches above regex</span></span><br></pre></td></tr></table></figure>\n\n<p>检查分支命名失败</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Commit rejected by Commit-Check.</span><br><span class=\"line\"></span><br><span class=\"line\">  (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)</span><br><span class=\"line\">   / ._. \\      / ._. \\      / ._. \\      / ._. \\      / ._. \\</span><br><span class=\"line\"> __\\( C )/__  __\\( H )/__  __\\( E )/__  __\\( C )/__  __\\( K )/__</span><br><span class=\"line\">(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)(_.-/<span class=\"string\">&#x27;-&#x27;</span>\\-._)</span><br><span class=\"line\">   || E ||      || R ||      || R ||      || O ||      || R ||</span><br><span class=\"line\"> _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._  _.<span class=\"string\">&#x27; &#x27;</span>-<span class=\"string\">&#x27; &#x27;</span>._</span><br><span class=\"line\">(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)(.-./`-´\\.-.)</span><br><span class=\"line\"> `-´     `-´  `-´     `-´  `-´     `-´  `-´     `-´  `-´     `-´</span><br><span class=\"line\"></span><br><span class=\"line\">Commit rejected.</span><br><span class=\"line\"></span><br><span class=\"line\">Invalid branch name =&gt; <span class=\"built_in\">test</span></span><br><span class=\"line\">It doesn<span class=\"string\">&#x27;t match regex: ^(bugfix|feature|release|hotfix|task)\\/.+|(master)|(main)|(HEAD)|(PR-.+)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Branches must begin with these types: bugfix/ feature/ release/ hotfix/ task/</span></span><br><span class=\"line\"><span class=\"string\">Suggest: run command `git checkout -b type/branch_name`</span></span><br></pre></td></tr></table></figure>\n\n\n<p>以上就是 Commit Check 的使用介绍了，更多新信息请参考 <a href=\"https://github.com/commit-check/commit-check\">https://github.com/commit-check/commit-check</a></p>\n<hr>\n<p>转载本站文章请注明作者和出处，请勿用于任何商业用途。欢迎关注公众号「DevOps攻城狮」</p>","categories":[{"name":"Git","path":"api/categories/Git.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}