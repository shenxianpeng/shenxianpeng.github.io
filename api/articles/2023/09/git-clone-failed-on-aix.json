{"title":"解决在 AIX 通过 Jenkins agent git clone 失败的问题","slug":"2023/09/git-clone-failed-on-aix","date":"2023-09-07T10:53:26.000Z","updated":"2024-06-13T15:39:13.483Z","comments":true,"path":"api/articles/2023/09/git-clone-failed-on-aix.json","excerpt":null,"covers":null,"content":"<p>最近又遇到了在 AIX 上通过 Jenkins agent 无法下载代码的情况，报了如下错误：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">16:42:47  Caused by: hudson.plugins.git.GitException: Command <span class=\"string\">&quot;git init /disk1/agent/workspace/e_feature-aix-ci-build&quot;</span> returned status code 255:</span><br><span class=\"line\">16:42:47  stdout:</span><br><span class=\"line\">16:42:47  stderr: <span class=\"built_in\">exec</span>(): 0509-036 Cannot load program git because of the following errors:</span><br><span class=\"line\">16:42:47  \t0509-150   Dependent module /usr/lib/libiconv.a(libiconv.so.2) could not be loaded.</span><br><span class=\"line\">16:42:47  \t0509-152   Member libiconv.so.2 is not found <span class=\"keyword\">in</span> archive</span><br><span class=\"line\">16:42:47</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2734)</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2660)</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2656)</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommand(CliGitAPIImpl.java:1981)</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl<span class=\"variable\">$5</span>.execute(CliGitAPIImpl.java:1047)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>上次遇到在 AIX 遇到的 git clone 问题总结在这里 <a href=\"https://shenxianpeng.github.io/2021/06/git-clone-failed-on-aix/\">https://shenxianpeng.github.io/2021/06/git-clone-failed-on-aix/</a></p>\n</blockquote>\n<p>而我在 AIX 机器上手动执行 git clone 命令却没有这个错误发生，从失败的 log 和 <code>ldd /usr/bin/git</code> 发现 <code>libiconv.a</code> 的路径不同，推测问题应该出在 <code>LIBPATH</code> 环境变量上。</p>\n<p>因为在本地（AIX）执行 git 命令的时候 <code>LIBPATH</code> 是为空，如果设置了 <code>LIBPATH</code> 路径为 &#x2F;usr&#x2F;lib&#x2F; 会出上面一样的错误。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ldd /usr/bin/git</span><br><span class=\"line\">/usr/bin/git needs:</span><br><span class=\"line\">         /usr/lib/libc.a(shr_64.o)</span><br><span class=\"line\">         /usr/lib/libpthreads.a(shr_xpg5_64.o)</span><br><span class=\"line\">         /opt/freeware/lib/libintl.a(libintl.so.8)</span><br><span class=\"line\">         /opt/freeware/lib/libiconv.a(libiconv.so.2)</span><br><span class=\"line\">         /opt/freeware/lib/libz.a(libz.so.1)</span><br><span class=\"line\">         /unix</span><br><span class=\"line\">         /usr/lib/libcrypt.a(shr_64.o)</span><br><span class=\"line\">         /opt/freeware/lib64/libgcc_s.a(shr.o)</span><br><span class=\"line\">$</span><br></pre></td></tr></table></figure>\n\n<p>但 Jenkins agent 在执行的时候有默认的 <code>LIBPATH</code>，查看这个变量可以通过 Jenkins Agent 上的 Script Console 执行如下命令打印出来</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"code\"><pre><span class=\"line\">println System.getenv(<span class=\"string\">&quot;LIBPATH&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 返回的结果</span></span><br><span class=\"line\">/usr/java8_64/jre/lib/ppc64/j9vm:/usr/java8_64/jre/lib/ppc64:/usr/java8_64/jre/../lib/ppc64:/usr/java8_64/jre/lib/icc:/usr/lib</span><br></pre></td></tr></table></figure>\n\n<p>其中果然有 <code>/usr/lib</code>，这导致了 git 是去找 <code>/usr/lib/libiconv.a</code> 而不是 <code>/opt/freeware/lib/libiconv.a</code>。</p>\n<p>我尝试过很多种办法但最终还是无法在 Jenkins agent 在 git clone 的时候 <code>unset LIBPATH</code>，包括:</p>\n<ol>\n<li>重新 link，将 <code>/usr/lib/libiconv.a</code> 链接到 <code>/opt/freeware/lib/libiconv.a</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /usr/lib/libiconv.a /usr/lib/libiconv.a.bak</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /opt/freeware/lib/libiconv.a /usr/lib/libiconv.a</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在 pipeline 中使用 <code>withEnv</code> 设置 <code>LIBPATH</code> 为空</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">withEnv([<span class=\"string\">&#x27;LIBPATH=\\&#x27;</span>\\&#x27;<span class=\"string\">&#x27;]) &#123;</span></span><br><span class=\"line\"><span class=\"string\">  checkout scm</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>在 Agent 配置页面上尝试通过 Environment variables 来修改 <code>LIBPATH</code>（这个看起来像是 Jenkins 的一个 bug <a href=\"https://issues.jenkins.io/browse/JENKINS-69821\">JENKINS-69821</a>)</p>\n</li>\n<li><p>在配置 Jenkins agent 页面通过添加 <code>export LIBPATH=&quot;&quot; &amp;&amp;</code> 到 Prefix Start Agent Command 均不起作用。</p>\n</li>\n</ol>\n<p>最后是通过在 AIX 更新 Git 从版本 <code>2.39.3</code> 升级到 <code>2.40.0</code> 解决了这个错误，这有点巧合并没有真正把 Jenkins agent 的覆盖默认环境变量的问题给解决，但好在这个问题已经没有了。</p>\n<p>仅此记录一下，防止以后遇到同样的错误不至于从头开始尝试，也希望这个记录也可能帮助到你。</p>\n<hr>\n<p>转载本站文章请注明作者和出处，请勿用于任何商业用途。欢迎关注公众号「DevOps攻城狮」</p>\n","more":"<p>最近又遇到了在 AIX 上通过 Jenkins agent 无法下载代码的情况，报了如下错误：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">16:42:47  Caused by: hudson.plugins.git.GitException: Command <span class=\"string\">&quot;git init /disk1/agent/workspace/e_feature-aix-ci-build&quot;</span> returned status code 255:</span><br><span class=\"line\">16:42:47  stdout:</span><br><span class=\"line\">16:42:47  stderr: <span class=\"built_in\">exec</span>(): 0509-036 Cannot load program git because of the following errors:</span><br><span class=\"line\">16:42:47  \t0509-150   Dependent module /usr/lib/libiconv.a(libiconv.so.2) could not be loaded.</span><br><span class=\"line\">16:42:47  \t0509-152   Member libiconv.so.2 is not found <span class=\"keyword\">in</span> archive</span><br><span class=\"line\">16:42:47</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2734)</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2660)</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:2656)</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommand(CliGitAPIImpl.java:1981)</span><br><span class=\"line\">16:42:47  \tat org.jenkinsci.plugins.gitclient.CliGitAPIImpl<span class=\"variable\">$5</span>.execute(CliGitAPIImpl.java:1047)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>上次遇到在 AIX 遇到的 git clone 问题总结在这里 <a href=\"https://shenxianpeng.github.io/2021/06/git-clone-failed-on-aix/\">https://shenxianpeng.github.io/2021/06/git-clone-failed-on-aix/</a></p>\n</blockquote>\n<p>而我在 AIX 机器上手动执行 git clone 命令却没有这个错误发生，从失败的 log 和 <code>ldd /usr/bin/git</code> 发现 <code>libiconv.a</code> 的路径不同，推测问题应该出在 <code>LIBPATH</code> 环境变量上。</p>\n<p>因为在本地（AIX）执行 git 命令的时候 <code>LIBPATH</code> 是为空，如果设置了 <code>LIBPATH</code> 路径为 &#x2F;usr&#x2F;lib&#x2F; 会出上面一样的错误。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ldd /usr/bin/git</span><br><span class=\"line\">/usr/bin/git needs:</span><br><span class=\"line\">         /usr/lib/libc.a(shr_64.o)</span><br><span class=\"line\">         /usr/lib/libpthreads.a(shr_xpg5_64.o)</span><br><span class=\"line\">         /opt/freeware/lib/libintl.a(libintl.so.8)</span><br><span class=\"line\">         /opt/freeware/lib/libiconv.a(libiconv.so.2)</span><br><span class=\"line\">         /opt/freeware/lib/libz.a(libz.so.1)</span><br><span class=\"line\">         /unix</span><br><span class=\"line\">         /usr/lib/libcrypt.a(shr_64.o)</span><br><span class=\"line\">         /opt/freeware/lib64/libgcc_s.a(shr.o)</span><br><span class=\"line\">$</span><br></pre></td></tr></table></figure>\n\n<p>但 Jenkins agent 在执行的时候有默认的 <code>LIBPATH</code>，查看这个变量可以通过 Jenkins Agent 上的 Script Console 执行如下命令打印出来</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"code\"><pre><span class=\"line\">println System.getenv(<span class=\"string\">&quot;LIBPATH&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 返回的结果</span></span><br><span class=\"line\">/usr/java8_64/jre/lib/ppc64/j9vm:/usr/java8_64/jre/lib/ppc64:/usr/java8_64/jre/../lib/ppc64:/usr/java8_64/jre/lib/icc:/usr/lib</span><br></pre></td></tr></table></figure>\n\n<p>其中果然有 <code>/usr/lib</code>，这导致了 git 是去找 <code>/usr/lib/libiconv.a</code> 而不是 <code>/opt/freeware/lib/libiconv.a</code>。</p>\n<p>我尝试过很多种办法但最终还是无法在 Jenkins agent 在 git clone 的时候 <code>unset LIBPATH</code>，包括:</p>\n<ol>\n<li>重新 link，将 <code>/usr/lib/libiconv.a</code> 链接到 <code>/opt/freeware/lib/libiconv.a</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /usr/lib/libiconv.a /usr/lib/libiconv.a.bak</span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /opt/freeware/lib/libiconv.a /usr/lib/libiconv.a</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在 pipeline 中使用 <code>withEnv</code> 设置 <code>LIBPATH</code> 为空</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">withEnv([<span class=\"string\">&#x27;LIBPATH=\\&#x27;</span>\\&#x27;<span class=\"string\">&#x27;]) &#123;</span></span><br><span class=\"line\"><span class=\"string\">  checkout scm</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li><p>在 Agent 配置页面上尝试通过 Environment variables 来修改 <code>LIBPATH</code>（这个看起来像是 Jenkins 的一个 bug <a href=\"https://issues.jenkins.io/browse/JENKINS-69821\">JENKINS-69821</a>)</p>\n</li>\n<li><p>在配置 Jenkins agent 页面通过添加 <code>export LIBPATH=&quot;&quot; &amp;&amp;</code> 到 Prefix Start Agent Command 均不起作用。</p>\n</li>\n</ol>\n<p>最后是通过在 AIX 更新 Git 从版本 <code>2.39.3</code> 升级到 <code>2.40.0</code> 解决了这个错误，这有点巧合并没有真正把 Jenkins agent 的覆盖默认环境变量的问题给解决，但好在这个问题已经没有了。</p>\n<p>仅此记录一下，防止以后遇到同样的错误不至于从头开始尝试，也希望这个记录也可能帮助到你。</p>\n<hr>\n<p>转载本站文章请注明作者和出处，请勿用于任何商业用途。欢迎关注公众号「DevOps攻城狮」</p>\n","categories":[{"name":"AIX","path":"api/categories/AIX.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"},{"name":"Jenkins","path":"api/tags/Jenkins.json"},{"name":"AIX","path":"api/tags/AIX.json"}]}