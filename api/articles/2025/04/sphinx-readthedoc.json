{"title":"从零配置 Sphinx + ReadTheDocs：快速部署自动化文档","slug":"2025/04/sphinx-readthedoc","date":"2025-04-12T15:00:00.000Z","updated":"2025-04-14T22:23:43.270Z","comments":true,"path":"api/articles/2025/04/sphinx-readthedoc.json","excerpt":"在日常的开源项目或团队协作中，我们经常会需要一个易于维护、可自动部署的文档系统。最近在维护自己的开源项目时，我尝试用 Sphinx 来生成文档，并通过 ReadTheDocs 实现了自动构建和托管，整体体验还不错。记录一下配置过程，希望能帮到有类似需求的朋友。为什么选择 Sphinx 和 ReadTheDocsSphinx 是一个用 Python 编写的文档生成工具，最初为 Python 官方文档设计，支持 reStructuredText 和 Markdown（通过插件）。ReadTheDocs 是一个文档托管平台，可以自动从你的 Git 仓库拉取代码、构建并发布文档，支持 webhook 自动触发。这两个工具的组合非常适合持续维护和更新文档，而且社区成熟、资料丰富。","covers":["/2025/04/sphinx-readthedoc/example.png"],"content":"<p>在日常的开源项目或团队协作中，我们经常会需要一个易于维护、可自动部署的文档系统。</p>\n<p>最近在维护自己的开源项目时，我尝试用 <a href=\"https://www.sphinx-doc.org/\">Sphinx</a> 来生成文档，并通过 <a href=\"https://readthedocs.org/\">ReadTheDocs</a> 实现了自动构建和托管，整体体验还不错。</p>\n<p>记录一下配置过程，希望能帮到有类似需求的朋友。</p>\n<h2 id=\"为什么选择-Sphinx-和-ReadTheDocs\"><a href=\"#为什么选择-Sphinx-和-ReadTheDocs\" class=\"headerlink\" title=\"为什么选择 Sphinx 和 ReadTheDocs\"></a>为什么选择 Sphinx 和 ReadTheDocs</h2><ul>\n<li><strong>Sphinx</strong> 是一个用 Python 编写的文档生成工具，最初为 Python 官方文档设计，支持 reStructuredText 和 Markdown（通过插件）。</li>\n<li><strong>ReadTheDocs</strong> 是一个文档托管平台，可以自动从你的 Git 仓库拉取代码、构建并发布文档，支持 webhook 自动触发。</li>\n</ul>\n<p>这两个工具的组合非常适合持续维护和更新文档，而且社区成熟、资料丰富。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"基础配置步骤\"><a href=\"#基础配置步骤\" class=\"headerlink\" title=\"基础配置步骤\"></a>基础配置步骤</h2><p>以下是一个实际项目中配置的完整流程。</p>\n<h3 id=\"1-安装-Sphinx-和相关依赖\"><a href=\"#1-安装-Sphinx-和相关依赖\" class=\"headerlink\" title=\"1. 安装 Sphinx 和相关依赖\"></a>1. 安装 Sphinx 和相关依赖</h3><p>推荐使用虚拟环境，然后安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docs/requirements.txt</span></span><br><span class=\"line\">sphinx==5.3.0</span><br><span class=\"line\">sphinx_rtd_theme==1.1.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果你需要支持 Markdown，可以添加:</span></span><br><span class=\"line\">myst_parser==0.18.1</span><br></pre></td></tr></table></figure>\n\n<p>安装依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install -r docs/requirements.txt</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>sphinx-rtd-theme</code> 是 ReadTheDocs 使用的默认主题</li>\n<li><code>myst-parser</code> 用于支持 Markdown</li>\n</ul>\n<h3 id=\"2-初始化文档项目结构\"><a href=\"#2-初始化文档项目结构\" class=\"headerlink\" title=\"2. 初始化文档项目结构\"></a>2. 初始化文档项目结构</h3><p>在项目根目录执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sphinx-quickstart docs</span><br></pre></td></tr></table></figure>\n\n<p>建议将 <code>source</code> 和 <code>build</code> 目录分开</p>\n<p>执行完后，<code>docs</code> 目录下会生成 <code>conf.py</code> 和 <code>index.rst</code> 等文件。</p>\n<h3 id=\"3-修改-conf-py-配置文件\"><a href=\"#3-修改-conf-py-配置文件\" class=\"headerlink\" title=\"3. 修改 conf.py 配置文件\"></a>3. 修改 <code>conf.py</code> 配置文件</h3><p>几个关键设置如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Read the Docs configuration file</span></span><br><span class=\"line\"><span class=\"comment\"># See https://docs.readthedocs.io/en/stable/config-file/v2.html for details</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\">project = <span class=\"string\">&quot;GitStats&quot;</span></span><br><span class=\"line\">author = <span class=\"string\">&quot;Xianpeng Shen&quot;</span></span><br><span class=\"line\">copyright = <span class=\"string\">f&quot;<span class=\"subst\">&#123;datetime.now().year&#125;</span>, <span class=\"subst\">&#123;author&#125;</span>&quot;</span></span><br><span class=\"line\">html_theme = <span class=\"string\">&quot;sphinx_rtd_theme&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你需要支持 Markdown，需要在 <code>conf.py</code> 中添加:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">extensions = [</span><br><span class=\"line\">    <span class=\"string\">&#x27;myst_parser&#x27;</span>,  <span class=\"comment\"># 支持 Markdown</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置-ReadTheDocs-自动构建\"><a href=\"#配置-ReadTheDocs-自动构建\" class=\"headerlink\" title=\"配置 ReadTheDocs 自动构建\"></a>配置 ReadTheDocs 自动构建</h2><p>只要项目结构清晰，ReadTheDocs 基本可以一键跑通。</p>\n<h3 id=\"1-导入项目到-ReadTheDocs\"><a href=\"#1-导入项目到-ReadTheDocs\" class=\"headerlink\" title=\"1. 导入项目到 ReadTheDocs\"></a>1. 导入项目到 ReadTheDocs</h3><ul>\n<li>登录 <a href=\"https://readthedocs.org/\">https://readthedocs.org/</a></li>\n<li>点击 “Import a Project”，选择你的 GitHub 或 GitLab 仓库</li>\n<li>确保仓库中包含 <code>docs/conf.py</code>，系统会自动识别</li>\n</ul>\n<h3 id=\"2-添加-readthedocs-yml-配置文件\"><a href=\"#2-添加-readthedocs-yml-配置文件\" class=\"headerlink\" title=\"2. 添加 .readthedocs.yml 配置文件\"></a>2. 添加 <code>.readthedocs.yml</code> 配置文件</h3><p>为了更好地控制构建过程，建议在项目根目录添加 <code>.readthedocs.yml</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Read the Docs configuration file</span></span><br><span class=\"line\"><span class=\"comment\"># See https://docs.readthedocs.io/en/stable/config-file/v2.html for details</span></span><br><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">build:</span></span><br><span class=\"line\">  <span class=\"attr\">os:</span> <span class=\"string\">ubuntu-24.04</span></span><br><span class=\"line\">  <span class=\"attr\">tools:</span></span><br><span class=\"line\">    <span class=\"attr\">python:</span> <span class=\"string\">&quot;3.12&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">sphinx:</span></span><br><span class=\"line\">   <span class=\"attr\">configuration:</span> <span class=\"string\">docs/source/conf.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">python:</span></span><br><span class=\"line\">   <span class=\"attr\">install:</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">requirements:</span> <span class=\"string\">docs/requirements.txt</span></span><br></pre></td></tr></table></figure>\n\n<p>配置完成后，每次提交 Pull Request 时，ReadTheDocs 都会自动拉取并构建最新文档供你预览，确保文档如你所期望的那样。</p>\n<h2 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h2><p>构建完成后，ReadTheDocs 会提供一个类似 <code>https://your-project.readthedocs.io/</code> 的文档地址，方便团队协作和用户查阅。</p>\n<p>我目前的开源项目也采用了这套方案，例如：<a href=\"https://gitstats.readthedocs.io/en/latest/\">GitStats 文档</a></p>\n<p><img src=\"/2025/04/sphinx-readthedoc/example.png\" alt=\"GitStats 文档\"></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>只要做好上述的配置，几乎可以实现“写完文档，提交即上线”，大大提高了文档维护的效率。</p>\n<p>如果你正在写开源项目文档，或者想给团队项目（尤其是 Python 项目）补上文档系统，不妨试一试 Sphinx + ReadTheDocs。</p>\n<hr>\n<p>转载本站文章请注明作者和出处，请勿用于任何商业用途。欢迎关注公众号「DevOps攻城狮」</p>\n","more":"<h2 id=\"基础配置步骤\"><a href=\"#基础配置步骤\" class=\"headerlink\" title=\"基础配置步骤\"></a>基础配置步骤</h2><p>以下是一个实际项目中配置的完整流程。</p>\n<h3 id=\"1-安装-Sphinx-和相关依赖\"><a href=\"#1-安装-Sphinx-和相关依赖\" class=\"headerlink\" title=\"1. 安装 Sphinx 和相关依赖\"></a>1. 安装 Sphinx 和相关依赖</h3><p>推荐使用虚拟环境，然后安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docs/requirements.txt</span></span><br><span class=\"line\">sphinx==5.3.0</span><br><span class=\"line\">sphinx_rtd_theme==1.1.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果你需要支持 Markdown，可以添加:</span></span><br><span class=\"line\">myst_parser==0.18.1</span><br></pre></td></tr></table></figure>\n\n<p>安装依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install -r docs/requirements.txt</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ul>\n<li><code>sphinx-rtd-theme</code> 是 ReadTheDocs 使用的默认主题</li>\n<li><code>myst-parser</code> 用于支持 Markdown</li>\n</ul>\n<h3 id=\"2-初始化文档项目结构\"><a href=\"#2-初始化文档项目结构\" class=\"headerlink\" title=\"2. 初始化文档项目结构\"></a>2. 初始化文档项目结构</h3><p>在项目根目录执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sphinx-quickstart docs</span><br></pre></td></tr></table></figure>\n\n<p>建议将 <code>source</code> 和 <code>build</code> 目录分开</p>\n<p>执行完后，<code>docs</code> 目录下会生成 <code>conf.py</code> 和 <code>index.rst</code> 等文件。</p>\n<h3 id=\"3-修改-conf-py-配置文件\"><a href=\"#3-修改-conf-py-配置文件\" class=\"headerlink\" title=\"3. 修改 conf.py 配置文件\"></a>3. 修改 <code>conf.py</code> 配置文件</h3><p>几个关键设置如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Read the Docs configuration file</span></span><br><span class=\"line\"><span class=\"comment\"># See https://docs.readthedocs.io/en/stable/config-file/v2.html for details</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\">project = <span class=\"string\">&quot;GitStats&quot;</span></span><br><span class=\"line\">author = <span class=\"string\">&quot;Xianpeng Shen&quot;</span></span><br><span class=\"line\">copyright = <span class=\"string\">f&quot;<span class=\"subst\">&#123;datetime.now().year&#125;</span>, <span class=\"subst\">&#123;author&#125;</span>&quot;</span></span><br><span class=\"line\">html_theme = <span class=\"string\">&quot;sphinx_rtd_theme&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你需要支持 Markdown，需要在 <code>conf.py</code> 中添加:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">extensions = [</span><br><span class=\"line\">    <span class=\"string\">&#x27;myst_parser&#x27;</span>,  <span class=\"comment\"># 支持 Markdown</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置-ReadTheDocs-自动构建\"><a href=\"#配置-ReadTheDocs-自动构建\" class=\"headerlink\" title=\"配置 ReadTheDocs 自动构建\"></a>配置 ReadTheDocs 自动构建</h2><p>只要项目结构清晰，ReadTheDocs 基本可以一键跑通。</p>\n<h3 id=\"1-导入项目到-ReadTheDocs\"><a href=\"#1-导入项目到-ReadTheDocs\" class=\"headerlink\" title=\"1. 导入项目到 ReadTheDocs\"></a>1. 导入项目到 ReadTheDocs</h3><ul>\n<li>登录 <a href=\"https://readthedocs.org/\">https://readthedocs.org/</a></li>\n<li>点击 “Import a Project”，选择你的 GitHub 或 GitLab 仓库</li>\n<li>确保仓库中包含 <code>docs/conf.py</code>，系统会自动识别</li>\n</ul>\n<h3 id=\"2-添加-readthedocs-yml-配置文件\"><a href=\"#2-添加-readthedocs-yml-配置文件\" class=\"headerlink\" title=\"2. 添加 .readthedocs.yml 配置文件\"></a>2. 添加 <code>.readthedocs.yml</code> 配置文件</h3><p>为了更好地控制构建过程，建议在项目根目录添加 <code>.readthedocs.yml</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Read the Docs configuration file</span></span><br><span class=\"line\"><span class=\"comment\"># See https://docs.readthedocs.io/en/stable/config-file/v2.html for details</span></span><br><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">build:</span></span><br><span class=\"line\">  <span class=\"attr\">os:</span> <span class=\"string\">ubuntu-24.04</span></span><br><span class=\"line\">  <span class=\"attr\">tools:</span></span><br><span class=\"line\">    <span class=\"attr\">python:</span> <span class=\"string\">&quot;3.12&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">sphinx:</span></span><br><span class=\"line\">   <span class=\"attr\">configuration:</span> <span class=\"string\">docs/source/conf.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">python:</span></span><br><span class=\"line\">   <span class=\"attr\">install:</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">requirements:</span> <span class=\"string\">docs/requirements.txt</span></span><br></pre></td></tr></table></figure>\n\n<p>配置完成后，每次提交 Pull Request 时，ReadTheDocs 都会自动拉取并构建最新文档供你预览，确保文档如你所期望的那样。</p>\n<h2 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h2><p>构建完成后，ReadTheDocs 会提供一个类似 <code>https://your-project.readthedocs.io/</code> 的文档地址，方便团队协作和用户查阅。</p>\n<p>我目前的开源项目也采用了这套方案，例如：<a href=\"https://gitstats.readthedocs.io/en/latest/\">GitStats 文档</a></p>\n<p><img src=\"/2025/04/sphinx-readthedoc/example.png\" alt=\"GitStats 文档\"></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>只要做好上述的配置，几乎可以实现“写完文档，提交即上线”，大大提高了文档维护的效率。</p>\n<p>如果你正在写开源项目文档，或者想给团队项目（尤其是 Python 项目）补上文档系统，不妨试一试 Sphinx + ReadTheDocs。</p>\n<hr>\n<p>转载本站文章请注明作者和出处，请勿用于任何商业用途。欢迎关注公众号「DevOps攻城狮」</p>","categories":[{"name":"Documentation","path":"api/categories/Documentation.json"}],"tags":[{"name":"RST","path":"api/tags/RST.json"},{"name":"Sphinx","path":"api/tags/Sphinx.json"},{"name":"ReadTheDocs","path":"api/tags/ReadTheDocs.json"}]}