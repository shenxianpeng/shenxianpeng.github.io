{"title":"如何将每次发布的博客文章自动同步到 GitHub 个人主页？","slug":"2021/11/special-repository","date":"2021-11-09T14:02:15.000Z","updated":"2021-11-22T16:11:06.270Z","comments":true,"path":"api/articles/2021/11/special-repository.json","excerpt":"如何将每次发布的博客文章自动同步到 GitHub 个人主页？就像这样，在个人主页展示自己最近发布的博客文章。 [Figure] 当然可以每次发布完一篇文章后到主页上这个特殊的仓库下面的 README.md 将标题和链接手动更新一下。但这也太麻烦了，DevOps 工程师不会这么干的 :)我想象中自动化工作流应该是这样的：通过 Workflow 自动获取最新的文章的标题和地址并更新 README.md只有当有新的文章发布的时候才触发上面的自动获取文章 Workflow如果你不了解为什么 GitHub 个人主页可以显示这些丰富的信息，这里做个简单介绍：这其实是 GitHub 早在 2020 年发布的一个新功能。即创建一个与你的 GitHub 账号同名的仓库，添加的 README.md 会在 GitHub 个人主页显示。","covers":["/2021/11/special-repository/final.png","/2021/11/special-repository/profile.png","/2021/11/special-repository/secrets.png"],"content":"<p>如何将每次发布的博客文章自动同步到 GitHub 个人主页？就像这样，在个人主页展示自己最近发布的博客文章。</p>\n<p><img src=\"/2021/11/special-repository/final.png\" alt></p>\n<p>当然可以每次发布完一篇文章后到主页上这个特殊的仓库下面的 <code>README.md</code> 将标题和链接手动更新一下。但这也太麻烦了，DevOps 工程师不会这么干的 :)</p>\n<p>我想象中自动化工作流应该是这样的：</p>\n<ol>\n<li>通过 Workflow 自动获取最新的文章的标题和地址并更新 <code>README.md</code></li>\n<li>只有当有新的文章发布的时候才触发上面的自动获取文章 Workflow</li>\n</ol>\n<p>如果你不了解为什么 GitHub 个人主页可以显示这些丰富的信息，这里做个简单介绍：这其实是 GitHub 早在 2020 年发布的一个新功能。即创建一个与你的 GitHub 账号同名的仓库，添加的 <code>README.md</code> 会在 GitHub 个人主页显示。</p>\n<a id=\"more\"></a>\n\n<p>举个例子：如果你的 GitHub 名叫 <code>gebilaowang</code>，那么当你创建一个叫 <code>gebilaowang</code> 的 Git 仓库，添加 README.md 后就会在主页显示。</p>\n<p>针对这个功能 GitHub 上有很多丰富多彩的个人介绍（如下）。更多灵感可以参看这个链接：<a href=\"https://awesomegithubprofile.tech/\" target=\"_blank\" rel=\"noopener\">https://awesomegithubprofile.tech/</a></p>\n<p><img src=\"/2021/11/special-repository/profile.png\" alt=\"profile\"></p>\n<h2 id=\"如何自动获取文章并更新-README-md\"><a href=\"#如何自动获取文章并更新-README-md\" class=\"headerlink\" title=\"如何自动获取文章并更新 README.md\"></a>如何自动获取文章并更新 <code>README.md</code></h2><p>这一点要赞扬一下 GitHub Actions 这个功能，在 GitHub 上面有非常丰富的针对 Actions 开发的小功能。</p>\n<p>注：这是我和另外一个贡献者在维护 <a href=\"https://github.com/marketplace/actions/c-c-lint-action\" target=\"_blank\" rel=\"noopener\">C/C++ Lint Action</a> 如果喜欢的话不妨点个 Star 支持一下。</p>\n<p>因此这个自动获取最新文章标题和链接的轮子也不用造了，我用了一个开源项目叫 <a href=\"https://github.com/gautamkrishnar/blog-post-workflow\" target=\"_blank\" rel=\"noopener\">blog-post-workflow</a>，它可以通过 RSS（订阅源）来获取到博客的最新文章。</p>\n<p>它不但支持博客还支持 StackOverflow 以及 Youtube 视频等资源。</p>\n<p>然后在 GitHub 同名的仓库下添加一个 Workflow YML <code>.github/workflows/blog-post-workflow.yml</code> 。</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Latest</span> <span class=\"string\">blog</span> <span class=\"string\">post</span> <span class=\"string\">workflow</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">'* 2 * * *'</span></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">update-readme-with-blog:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">Update</span> <span class=\"string\">this</span> <span class=\"string\">repo's</span> <span class=\"string\">README</span> <span class=\"string\">with</span> <span class=\"string\">latest</span> <span class=\"string\">blog</span> <span class=\"string\">posts</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">gautamkrishnar/blog-post-workflow@master</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"comment\"># 我的博客 RSS 链接</span></span><br><span class=\"line\">          <span class=\"attr\">feed_list:</span> <span class=\"string\">\"https://shenxianpeng.github.io/atom.xml\"</span></span><br><span class=\"line\">          <span class=\"comment\"># 获取最新 10 篇文章</span></span><br><span class=\"line\">          <span class=\"attr\">max_post_count:</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>目前这个 Worflow 里用的是定时来触发，就是每天早上两点就自动获取一次最新文章并更新这个特殊仓库 <code>README.md</code>。这个做法还可以，但不够节省资源也不够完美。</p>\n<p>最好的做法是：只有当有新文章发布时才触发上面的 Worflow 更新 <code>README.md</code>。这样需要在存放文章的 Git 仓库里添加另外一个 Worflow 来触发更新  <code>README.md</code> 操作。</p>\n<h2 id=\"如何从外面触发-GitHub-Actions\"><a href=\"#如何从外面触发-GitHub-Actions\" class=\"headerlink\" title=\"如何从外面触发 GitHub Actions\"></a>如何从外面触发 GitHub Actions</h2><p>GitHub Actions 提供了一个 Webhook 事件叫做 <a href=\"https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#repository_dispatch\" target=\"_blank\" rel=\"noopener\"><code>repository_dispatch</code></a> 可以来做这件事。</p>\n<p>它的原理是这样的：使用 GitHub API 来触发一个 Webhook 事件，这个事件叫做 <code>repository_dispatch</code>，这个事件里的类型是可以自定义的，并且在要被触发的 workflow 里需要使用 <code>repository_dispatch</code> 事件。</p>\n<p>也就是说需要存放博客文章的仓库里添加一个 Worflow 通过发送 <code>repository_dispatch</code> 事件触发特殊仓库中的 Worflow。</p>\n<p>这里我定义事件类型叫 <code>special_repository</code>，即它只接受来自 GitHub API <code>repository_dispatch</code> 事件中的类型叫 <code>special_repository</code> 因此接受事件的 <code>.github/workflows/blog-post-workflow.yml</code> 文件更新如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># special_repository.yml</span></span><br><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Latest</span> <span class=\"string\">blog</span> <span class=\"string\">post</span> <span class=\"string\">workflow</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">repository_dispatch:</span></span><br><span class=\"line\">    <span class=\"comment\"># 这里的类型是可以自定义的，我将它起名为：special_repository</span></span><br><span class=\"line\">    <span class=\"attr\">types:</span> <span class=\"string\">[special_repository]</span></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">update-readme-with-blog:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">Update</span> <span class=\"string\">this</span> <span class=\"string\">repo's</span> <span class=\"string\">README</span> <span class=\"string\">with</span> <span class=\"string\">latest</span> <span class=\"string\">blog</span> <span class=\"string\">posts</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">gautamkrishnar/blog-post-workflow@master</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">feed_list:</span> <span class=\"string\">\"https://shenxianpeng.github.io/atom.xml\"</span></span><br><span class=\"line\">          <span class=\"attr\">max_post_count:</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>那么发送事件的 Workflow 改怎么写呢？即如果发送一个类型为 <code>special_repository</code> 的<code>repository_dispatch</code> 事件。</p>\n<p>可以通过 <code>curl</code> 直接调用 API 来完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -XPOST -u <span class=\"string\">\"<span class=\"variable\">$&#123;&#123; secrets.PAT_USERNAME&#125;</span>&#125;:<span class=\"variable\">$&#123;&#123;secrets.PAT_TOKEN&#125;</span>&#125;\"</span> \\</span><br><span class=\"line\">    -H <span class=\"string\">\"Accept: application/vnd.github.everest-preview+json\"</span> \\</span><br><span class=\"line\">    -H <span class=\"string\">\"Content-Type: application/json\"</span> https://api.github.com/repos/shenxianpeng/shenxianpeng/dispatches \\</span><br><span class=\"line\">    --data <span class=\"string\">'&#123;\"event_type\": \"special_repository\"&#125;'</span></span><br></pre></td></tr></table></figure>\n\n<p>最后，触发事件仓库里 Workflow <code>.github/workflows/send-dispatch.yml</code> 如下:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Tigger</span> <span class=\"string\">special</span> <span class=\"string\">repository</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"comment\"># 当 master 分支有变更的时候触发 workflow</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Send</span> <span class=\"string\">repository</span> <span class=\"string\">dispatch</span> <span class=\"string\">event</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">curl</span> <span class=\"string\">-XPOST</span> <span class=\"string\">-u</span> <span class=\"string\">\"$<span class=\"template-variable\">&#123;&#123; secrets.PAT_USERNAME&#125;&#125;</span>:$<span class=\"template-variable\">&#123;&#123;secrets.PAT_TOKEN&#125;&#125;</span>\"</span> <span class=\"string\">\\</span></span><br><span class=\"line\">          <span class=\"string\">-H</span> <span class=\"string\">\"Accept: application/vnd.github.everest-preview+json\"</span> <span class=\"string\">\\</span></span><br><span class=\"line\">          <span class=\"string\">-H</span> <span class=\"string\">\"Content-Type: application/json\"</span> <span class=\"string\">https://api.github.com/repos/shenxianpeng/shenxianpeng/dispatches</span> <span class=\"string\">\\</span></span><br><span class=\"line\">          <span class=\"string\">--data</span> <span class=\"string\">'&#123;\"event_type\": \"special_repository\"&#125;'</span></span><br></pre></td></tr></table></figure>\n\n<p>注：<code>PAT_USERNAME</code> 和 <code>PAT_TOKEN</code> 需要在当前的仓库【设置 -&gt; Secrets】里进行添加。</p>\n<p><img src=\"/2021/11/special-repository/secrets.png\" alt></p>\n<p>完！</p>\n<hr>\n<p>上述引用的 GitHub 仓库：</p>\n<blockquote>\n<p>接受事件（特殊）仓库地址：<a href=\"https://github.com/shenxianpeng/shenxianpeng\" target=\"_blank\" rel=\"noopener\">https://github.com/shenxianpeng/shenxianpeng</a> <br>发送事件（文章）仓库地址：<a href=\"https://github.com/shenxianpeng/shenxianpeng.github.io\" target=\"_blank\" rel=\"noopener\">https://github.com/shenxianpeng/shenxianpeng.github.io</a></p>\n</blockquote>\n","more":"<p>举个例子：如果你的 GitHub 名叫 <code>gebilaowang</code>，那么当你创建一个叫 <code>gebilaowang</code> 的 Git 仓库，添加 README.md 后就会在主页显示。</p>\n<p>针对这个功能 GitHub 上有很多丰富多彩的个人介绍（如下）。更多灵感可以参看这个链接：<a href=\"https://awesomegithubprofile.tech/\" target=\"_blank\" rel=\"noopener\">https://awesomegithubprofile.tech/</a></p>\n<p><img src=\"/2021/11/special-repository/profile.png\" alt=\"profile\"></p>\n<h2 id=\"如何自动获取文章并更新-README-md\"><a href=\"#如何自动获取文章并更新-README-md\" class=\"headerlink\" title=\"如何自动获取文章并更新 README.md\"></a>如何自动获取文章并更新 <code>README.md</code></h2><p>这一点要赞扬一下 GitHub Actions 这个功能，在 GitHub 上面有非常丰富的针对 Actions 开发的小功能。</p>\n<p>注：这是我和另外一个贡献者在维护 <a href=\"https://github.com/marketplace/actions/c-c-lint-action\" target=\"_blank\" rel=\"noopener\">C/C++ Lint Action</a> 如果喜欢的话不妨点个 Star 支持一下。</p>\n<p>因此这个自动获取最新文章标题和链接的轮子也不用造了，我用了一个开源项目叫 <a href=\"https://github.com/gautamkrishnar/blog-post-workflow\" target=\"_blank\" rel=\"noopener\">blog-post-workflow</a>，它可以通过 RSS（订阅源）来获取到博客的最新文章。</p>\n<p>它不但支持博客还支持 StackOverflow 以及 Youtube 视频等资源。</p>\n<p>然后在 GitHub 同名的仓库下添加一个 Workflow YML <code>.github/workflows/blog-post-workflow.yml</code> 。</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Latest</span> <span class=\"string\">blog</span> <span class=\"string\">post</span> <span class=\"string\">workflow</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">'* 2 * * *'</span></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">update-readme-with-blog:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">Update</span> <span class=\"string\">this</span> <span class=\"string\">repo's</span> <span class=\"string\">README</span> <span class=\"string\">with</span> <span class=\"string\">latest</span> <span class=\"string\">blog</span> <span class=\"string\">posts</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">gautamkrishnar/blog-post-workflow@master</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"comment\"># 我的博客 RSS 链接</span></span><br><span class=\"line\">          <span class=\"attr\">feed_list:</span> <span class=\"string\">\"https://shenxianpeng.github.io/atom.xml\"</span></span><br><span class=\"line\">          <span class=\"comment\"># 获取最新 10 篇文章</span></span><br><span class=\"line\">          <span class=\"attr\">max_post_count:</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>目前这个 Worflow 里用的是定时来触发，就是每天早上两点就自动获取一次最新文章并更新这个特殊仓库 <code>README.md</code>。这个做法还可以，但不够节省资源也不够完美。</p>\n<p>最好的做法是：只有当有新文章发布时才触发上面的 Worflow 更新 <code>README.md</code>。这样需要在存放文章的 Git 仓库里添加另外一个 Worflow 来触发更新  <code>README.md</code> 操作。</p>\n<h2 id=\"如何从外面触发-GitHub-Actions\"><a href=\"#如何从外面触发-GitHub-Actions\" class=\"headerlink\" title=\"如何从外面触发 GitHub Actions\"></a>如何从外面触发 GitHub Actions</h2><p>GitHub Actions 提供了一个 Webhook 事件叫做 <a href=\"https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#repository_dispatch\" target=\"_blank\" rel=\"noopener\"><code>repository_dispatch</code></a> 可以来做这件事。</p>\n<p>它的原理是这样的：使用 GitHub API 来触发一个 Webhook 事件，这个事件叫做 <code>repository_dispatch</code>，这个事件里的类型是可以自定义的，并且在要被触发的 workflow 里需要使用 <code>repository_dispatch</code> 事件。</p>\n<p>也就是说需要存放博客文章的仓库里添加一个 Worflow 通过发送 <code>repository_dispatch</code> 事件触发特殊仓库中的 Worflow。</p>\n<p>这里我定义事件类型叫 <code>special_repository</code>，即它只接受来自 GitHub API <code>repository_dispatch</code> 事件中的类型叫 <code>special_repository</code> 因此接受事件的 <code>.github/workflows/blog-post-workflow.yml</code> 文件更新如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># special_repository.yml</span></span><br><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Latest</span> <span class=\"string\">blog</span> <span class=\"string\">post</span> <span class=\"string\">workflow</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">repository_dispatch:</span></span><br><span class=\"line\">    <span class=\"comment\"># 这里的类型是可以自定义的，我将它起名为：special_repository</span></span><br><span class=\"line\">    <span class=\"attr\">types:</span> <span class=\"string\">[special_repository]</span></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">update-readme-with-blog:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">Update</span> <span class=\"string\">this</span> <span class=\"string\">repo's</span> <span class=\"string\">README</span> <span class=\"string\">with</span> <span class=\"string\">latest</span> <span class=\"string\">blog</span> <span class=\"string\">posts</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">gautamkrishnar/blog-post-workflow@master</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">feed_list:</span> <span class=\"string\">\"https://shenxianpeng.github.io/atom.xml\"</span></span><br><span class=\"line\">          <span class=\"attr\">max_post_count:</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>那么发送事件的 Workflow 改怎么写呢？即如果发送一个类型为 <code>special_repository</code> 的<code>repository_dispatch</code> 事件。</p>\n<p>可以通过 <code>curl</code> 直接调用 API 来完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -XPOST -u <span class=\"string\">\"<span class=\"variable\">$&#123;&#123; secrets.PAT_USERNAME&#125;</span>&#125;:<span class=\"variable\">$&#123;&#123;secrets.PAT_TOKEN&#125;</span>&#125;\"</span> \\</span><br><span class=\"line\">    -H <span class=\"string\">\"Accept: application/vnd.github.everest-preview+json\"</span> \\</span><br><span class=\"line\">    -H <span class=\"string\">\"Content-Type: application/json\"</span> https://api.github.com/repos/shenxianpeng/shenxianpeng/dispatches \\</span><br><span class=\"line\">    --data <span class=\"string\">'&#123;\"event_type\": \"special_repository\"&#125;'</span></span><br></pre></td></tr></table></figure>\n\n<p>最后，触发事件仓库里 Workflow <code>.github/workflows/send-dispatch.yml</code> 如下:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Tigger</span> <span class=\"string\">special</span> <span class=\"string\">repository</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"comment\"># 当 master 分支有变更的时候触发 workflow</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Send</span> <span class=\"string\">repository</span> <span class=\"string\">dispatch</span> <span class=\"string\">event</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">curl</span> <span class=\"string\">-XPOST</span> <span class=\"string\">-u</span> <span class=\"string\">\"$<span class=\"template-variable\">&#123;&#123; secrets.PAT_USERNAME&#125;&#125;</span>:$<span class=\"template-variable\">&#123;&#123;secrets.PAT_TOKEN&#125;&#125;</span>\"</span> <span class=\"string\">\\</span></span><br><span class=\"line\">          <span class=\"string\">-H</span> <span class=\"string\">\"Accept: application/vnd.github.everest-preview+json\"</span> <span class=\"string\">\\</span></span><br><span class=\"line\">          <span class=\"string\">-H</span> <span class=\"string\">\"Content-Type: application/json\"</span> <span class=\"string\">https://api.github.com/repos/shenxianpeng/shenxianpeng/dispatches</span> <span class=\"string\">\\</span></span><br><span class=\"line\">          <span class=\"string\">--data</span> <span class=\"string\">'&#123;\"event_type\": \"special_repository\"&#125;'</span></span><br></pre></td></tr></table></figure>\n\n<p>注：<code>PAT_USERNAME</code> 和 <code>PAT_TOKEN</code> 需要在当前的仓库【设置 -&gt; Secrets】里进行添加。</p>\n<p><img src=\"/2021/11/special-repository/secrets.png\" alt></p>\n<p>完！</p>\n<hr>\n<p>上述引用的 GitHub 仓库：</p>\n<blockquote>\n<p>接受事件（特殊）仓库地址：<a href=\"https://github.com/shenxianpeng/shenxianpeng\" target=\"_blank\" rel=\"noopener\">https://github.com/shenxianpeng/shenxianpeng</a> <br>发送事件（文章）仓库地址：<a href=\"https://github.com/shenxianpeng/shenxianpeng.github.io\" target=\"_blank\" rel=\"noopener\">https://github.com/shenxianpeng/shenxianpeng.github.io</a></p>\n</blockquote>","categories":[{"name":"DevOps","path":"api/categories/DevOps.json"}],"tags":[{"name":"Actions","path":"api/tags/Actions.json"},{"name":"GitHub","path":"api/tags/GitHub.json"}]}