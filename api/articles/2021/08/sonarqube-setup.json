{"title":"SonarQube installation and troubleshootings","slug":"2021/08/sonarqube-setup","date":"2021-08-05T04:30:22.000Z","updated":"2024-02-22T05:41:59.578Z","comments":true,"path":"api/articles/2021/08/sonarqube-setup.json","excerpt":"BackgroudIn my opinion, SonarQube is not a very easy setup DevOps tool to compare with Jenkins, Artifactory. You can’t just run some script under the bin folder to let the server boot up.You must have an installed database, configuration LDAP in the config file, etc.So I’d like to document some important steps for myself, like setup LDAP or PostgreSQL when I install SonarQube of v9.0.1. It would be better if it can help others.Prerequisite and DownloadNeed to be installed JRE&#x2F;JDK 11 on the running machine. Here is the prerequisites overview: https://docs.sonarqube.org/latest/requirements/requirements/Download SonarQube: https://www.sonarqube.org/downloads/ cd sonarqube/<br>ls<br>wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.0.1.46107.zip<br><br>unzip sonarqube-9.0.1.46107.zip<br>cd  sonarqube-9.0.1.46107/bin/linux-x86-64<br>sh sonar.sh console<br>Change Java versionI installed SonarQube on CentOS 7 machine, the Java version is OpenJDK 1.8.0_242 by default, but the prerequisite shows at least need JDK 11. There is also JDK 11 available on my machine, so I just need to change the Java version.I recommend using the alternatives command change Java version，refer as following:$ java -version<br>openjdk version &quot;1.8.0_242&quot;<br>OpenJDK Runtime Environment (build 1.8.0_242-b08)<br>OpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode)<br><br>$ alternatives --config java<br><br>There are 3 programs which provide &#x27;java&#x27;.<br><br>  Selection    Command<br>-----------------------------------------------<br>   1           java-1.7.0-openjdk.x86_64 (/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.251-2.6.21.1.el7.x86_64/jre/bin/java)<br>*+ 2           java-1.8.0-openjdk.x86_64 (/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-1.el7.x86_64/jre/bin/java)<br>   3           java-11-openjdk.x86_64 (/usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.el7_9.x86_64/bin/java)<br><br>Enter to keep the current selection[+], or type selection number: 3<br>$ java -version<br>openjdk version &quot;11.0.12&quot; 2021-07-20 LTS<br>OpenJDK Runtime Environment 18.9 (build 11.0.12+7-LTS)<br>OpenJDK 64-Bit Server VM 18.9 (build 11.0.12+7-LTS, mixed mode, sharing)<br>Install DatabaseSonarQube needs you to have installed a database. It supports several database engines, like Microsoft SQL Server, Oracle, and PostgreSQL. Since PostgreSQL is open source, light, and easy to install, so I choose PostgreSQL as its database.How to download and install PostgreSQL please see this page: https://www.postgresql.org/download/linux/redhat/Troubleshooting1. How to establish a connection with SonarQube and PostgreSQLPlease refer to the sonar.properties file at the end of this post.2. How to setup LDAP for users to log insonar.security.realm=LDAP<br>ldap.url=ldap://den.exmaple-org:389<br>ldap.bindDn=user@exmaple-org.com<br>ldap.bindPassword=mypassword<br>ldap.authentication=simple<br>ldap.user.baseDn=DC=exmaple-org,DC=com<br>ldap.user.request=(&amp;(objectClass=user)(sAMAccountName=&#123;login&#125;))<br>ldap.user.realNameAttribute=cn<br>ldap.user.emailAttribute=email<br>3. How to fix LDAP login SonarQube is very slowlyComment out ldap.followReferrals=false in sonar.properties file would be help.Related post: https://community.sonarsource.com/t/ldap-login-takes-2-minutes-the-first-time/1573/74. How to fix ‘Could not resolve 11 file paths in lcov.info’I want to display Javascript code coverage result in SonarQube, so I added sonar.javascript.lcov.reportPaths=coverage/lcov.info to the sonar-project.propertiesBut when I run sonar-scanner.bat in the command line, the code coverage result can not show in sonar. I noticed the following error from the output:INFO: Analysing [C:\\workspace\\xvm-ide\\client\\coverage\\lcov.info]<br>WARN: Could not resolve 11 file paths in [C:\\workspace\\xvm-ide\\client\\coverage\\lcov.info]<br>There are some posts related to this problem, for example, https://github.com/kulshekhar/ts-jest/issues/542, but no one works in my case.# here is an example error path in lcov.info<br>..\\src\\auto-group\\groupView.ts<br>Finally, I have to use the sed command to remove ..\\ in front of the paths before running sonar-scanner.bat, then the problem was solved.sed -i &#x27;s/\\..\\\\//g&#x27; lcov.info<br>Please comment if you can solve the problem with changing options in the tsconfig.json file.4. How to output to more logsTo output more logs, change sonar.log.level=INFO to sonar.log.level=DEBUG in below.Note: all above changes of sonar.properties need to restart the SonarQube instance to take effect.Final sonar.propertiesFor the sonar.properties file, please see below or link","covers":null,"content":"<h2 id=\"Backgroud\"><a href=\"#Backgroud\" class=\"headerlink\" title=\"Backgroud\"></a>Backgroud</h2><p>In my opinion, SonarQube is not a very easy setup DevOps tool to compare with Jenkins, Artifactory. You can’t just run some script under the bin folder to let the server boot up.</p>\n<p>You must have an installed database, configuration LDAP in the config file, etc.</p>\n<p>So I’d like to document some important steps for myself, like setup LDAP or PostgreSQL when I install SonarQube of v9.0.1. It would be better if it can help others.</p>\n<h2 id=\"Prerequisite-and-Download\"><a href=\"#Prerequisite-and-Download\" class=\"headerlink\" title=\"Prerequisite and Download\"></a>Prerequisite and Download</h2><ol>\n<li><p>Need to be installed JRE&#x2F;JDK 11 on the running machine.</p>\n<p> Here is the prerequisites overview: <a href=\"https://docs.sonarqube.org/latest/requirements/requirements/\">https://docs.sonarqube.org/latest/requirements/requirements/</a></p>\n</li>\n<li><p>Download SonarQube: <a href=\"https://www.sonarqube.org/downloads/\">https://www.sonarqube.org/downloads/</a></p>\n <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> sonarqube/</span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\">wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.0.1.46107.zip</span><br><span class=\"line\"></span><br><span class=\"line\">unzip sonarqube-9.0.1.46107.zip</span><br><span class=\"line\"><span class=\"built_in\">cd</span>  sonarqube-9.0.1.46107/bin/linux-x86-64</span><br><span class=\"line\">sh sonar.sh console</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"Change-Java-version\"><a href=\"#Change-Java-version\" class=\"headerlink\" title=\"Change Java version\"></a>Change Java version</h2><p>I installed SonarQube on CentOS 7 machine, the Java version is OpenJDK 1.8.0_242 by default, but the prerequisite shows at least need JDK 11. There is also JDK 11 available on my machine, so I just need to change the Java version.</p>\n<p>I recommend using the <code>alternatives</code> command change Java version，refer as following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ java -version</span><br><span class=\"line\">openjdk version <span class=\"string\">&quot;1.8.0_242&quot;</span></span><br><span class=\"line\">OpenJDK Runtime Environment (build 1.8.0_242-b08)</span><br><span class=\"line\">OpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode)</span><br><span class=\"line\"></span><br><span class=\"line\">$ alternatives --config java</span><br><span class=\"line\"></span><br><span class=\"line\">There are 3 programs <span class=\"built_in\">which</span> provide <span class=\"string\">&#x27;java&#x27;</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">  Selection    Command</span><br><span class=\"line\">-----------------------------------------------</span><br><span class=\"line\">   1           java-1.7.0-openjdk.x86_64 (/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.251-2.6.21.1.el7.x86_64/jre/bin/java)</span><br><span class=\"line\">*+ 2           java-1.8.0-openjdk.x86_64 (/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-1.el7.x86_64/jre/bin/java)</span><br><span class=\"line\">   3           java-11-openjdk.x86_64 (/usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.el7_9.x86_64/bin/java)</span><br><span class=\"line\"></span><br><span class=\"line\">Enter to keep the current selection[+], or <span class=\"built_in\">type</span> selection number: 3</span><br><span class=\"line\">$ java -version</span><br><span class=\"line\">openjdk version <span class=\"string\">&quot;11.0.12&quot;</span> 2021-07-20 LTS</span><br><span class=\"line\">OpenJDK Runtime Environment 18.9 (build 11.0.12+7-LTS)</span><br><span class=\"line\">OpenJDK 64-Bit Server VM 18.9 (build 11.0.12+7-LTS, mixed mode, sharing)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Install-Database\"><a href=\"#Install-Database\" class=\"headerlink\" title=\"Install Database\"></a>Install Database</h2><p>SonarQube needs you to have installed a database. It supports several database engines, like Microsoft SQL Server, Oracle, and PostgreSQL. Since PostgreSQL is open source, light, and easy to install, so I choose PostgreSQL as its database.</p>\n<p>How to download and install PostgreSQL please see this page: <a href=\"https://www.postgresql.org/download/linux/redhat/\">https://www.postgresql.org/download/linux/redhat/</a></p>\n<h2 id=\"Troubleshooting\"><a href=\"#Troubleshooting\" class=\"headerlink\" title=\"Troubleshooting\"></a>Troubleshooting</h2><h3 id=\"1-How-to-establish-a-connection-with-SonarQube-and-PostgreSQL\"><a href=\"#1-How-to-establish-a-connection-with-SonarQube-and-PostgreSQL\" class=\"headerlink\" title=\"1. How to establish a connection with SonarQube and PostgreSQL\"></a>1. How to establish a connection with SonarQube and PostgreSQL</h3><p>Please refer to the <code>sonar.properties</code> file at the end of this post.</p>\n<h3 id=\"2-How-to-setup-LDAP-for-users-to-log-in\"><a href=\"#2-How-to-setup-LDAP-for-users-to-log-in\" class=\"headerlink\" title=\"2. How to setup LDAP for users to log in\"></a>2. How to setup LDAP for users to log in</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sonar.security.realm=LDAP</span><br><span class=\"line\">ldap.url=ldap://den.exmaple-org:389</span><br><span class=\"line\">ldap.bindDn=user@exmaple-org.com</span><br><span class=\"line\">ldap.bindPassword=mypassword</span><br><span class=\"line\">ldap.authentication=simple</span><br><span class=\"line\">ldap.user.baseDn=DC=exmaple-org,DC=com</span><br><span class=\"line\">ldap.user.request=(&amp;(objectClass=user)(sAMAccountName=&#123;login&#125;))</span><br><span class=\"line\">ldap.user.realNameAttribute=cn</span><br><span class=\"line\">ldap.user.emailAttribute=email</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-How-to-fix-LDAP-login-SonarQube-is-very-slowly\"><a href=\"#3-How-to-fix-LDAP-login-SonarQube-is-very-slowly\" class=\"headerlink\" title=\"3. How to fix LDAP login SonarQube is very slowly\"></a>3. How to fix LDAP login SonarQube is very slowly</h3><p>Comment out <code>ldap.followReferrals=false</code> in sonar.properties file would be help.</p>\n<p>Related post: <a href=\"https://community.sonarsource.com/t/ldap-login-takes-2-minutes-the-first-time/1573/7\">https://community.sonarsource.com/t/ldap-login-takes-2-minutes-the-first-time/1573/7</a></p>\n<h2 id=\"4-How-to-fix-‘Could-not-resolve-11-file-paths-in-lcov-info’\"><a href=\"#4-How-to-fix-‘Could-not-resolve-11-file-paths-in-lcov-info’\" class=\"headerlink\" title=\"4. How to fix ‘Could not resolve 11 file paths in lcov.info’\"></a>4. How to fix ‘Could not resolve 11 file paths in lcov.info’</h2><p>I want to display Javascript code coverage result in SonarQube, so I added <code>sonar.javascript.lcov.reportPaths=coverage/lcov.info</code> to the <code>sonar-project.properties</code></p>\n<p>But when I run <code>sonar-scanner.bat</code> in the command line, the code coverage result can not show in sonar. I noticed the following error from the output:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">INFO: Analysing [C:\\workspace\\xvm-ide\\client\\coverage\\lcov.info]</span><br><span class=\"line\">WARN: Could not resolve 11 file paths <span class=\"keyword\">in</span> [C:\\workspace\\xvm-ide\\client\\coverage\\lcov.info]</span><br></pre></td></tr></table></figure>\n\n<p>There are some posts related to this problem, for example, <a href=\"https://github.com/kulshekhar/ts-jest/issues/542\">https://github.com/kulshekhar/ts-jest/issues/542</a>, but no one works in my case.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># here is an example error path in lcov.info</span></span><br><span class=\"line\">..\\src\\auto-group\\groupView.ts</span><br></pre></td></tr></table></figure>\n\n<p>Finally, I have to use the <code>sed</code> command to remove <code>..\\</code> in front of the paths before running <code>sonar-scanner.bat</code>, then the problem was solved.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sed -i <span class=\"string\">&#x27;s/\\..\\\\//g&#x27;</span> lcov.info</span><br></pre></td></tr></table></figure>\n\n<p>Please comment if you can solve the problem with changing options in the <code>tsconfig.json</code> file.</p>\n<h3 id=\"4-How-to-output-to-more-logs\"><a href=\"#4-How-to-output-to-more-logs\" class=\"headerlink\" title=\"4. How to output to more logs\"></a>4. How to output to more logs</h3><p>To output more logs, change <code>sonar.log.level=INFO</code> to <code>sonar.log.level=DEBUG</code> in below.</p>\n<blockquote>\n<p>Note: all above changes of <code>sonar.properties</code> need to restart the SonarQube instance to take effect.</p>\n</blockquote>\n<h2 id=\"Final-sonar-properties\"><a href=\"#Final-sonar-properties\" class=\"headerlink\" title=\"Final sonar.properties\"></a>Final <code>sonar.properties</code></h2><p>For the <code>sonar.properties</code> file, please see below or <a href=\"https://gist.github.com/shenxianpeng/a1eec786210b421f8be34e3263f1a002\">link</a></p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># DATABASE</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># IMPORTANT:</span></span><br><span class=\"line\"><span class=\"comment\"># - The embedded H2 database is used by default. It is recommended for tests but not for</span></span><br><span class=\"line\"><span class=\"comment\">#   production use. Supported databases are Oracle, PostgreSQL and Microsoft SQLServer.</span></span><br><span class=\"line\"><span class=\"comment\"># - Changes to database connection URL (sonar.jdbc.url) can affect SonarSource licensed products.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User credentials.</span></span><br><span class=\"line\"><span class=\"comment\"># Permissions to create tables, indices and triggers must be granted to JDBC user.</span></span><br><span class=\"line\"><span class=\"comment\"># The schema must be created first.</span></span><br><span class=\"line\">sonar.jdbc.username=sonarqube</span><br><span class=\"line\">sonar.jdbc.password=mypassword</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#----- PostgreSQL 9.6 or greater</span></span><br><span class=\"line\"><span class=\"comment\"># By default the schema named &quot;public&quot; is used. It can be overridden with the parameter &quot;currentSchema&quot;.</span></span><br><span class=\"line\">sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Binding IP address. For servers with more than one IP address, this property specifies which</span></span><br><span class=\"line\"><span class=\"comment\"># address will be used for listening on the specified ports.</span></span><br><span class=\"line\"><span class=\"comment\"># By default, ports will be used on all IP addresses associated with the server.</span></span><br><span class=\"line\">sonar.web.host=10.118.245.19</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Web context. When set, it must start with forward slash (for example /sonarqube).</span></span><br><span class=\"line\"><span class=\"comment\"># The default value is root context (empty value).</span></span><br><span class=\"line\">sonar.web.context=</span><br><span class=\"line\"><span class=\"comment\"># TCP port for incoming HTTP connections. Default value is 9000.</span></span><br><span class=\"line\">sonar.web.port=9000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># LDAP CONFIGURATION</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Follow or not referrals. See http://docs.oracle.com/javase/jndi/tutorial/ldap/referral/jndi.html (default: true)</span></span><br><span class=\"line\">ldap.followReferrals=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable the LDAP feature</span></span><br><span class=\"line\">sonar.security.realm=LDAP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set to true when connecting to a LDAP server using a case-insensitive setup.</span></span><br><span class=\"line\"><span class=\"comment\"># sonar.authenticator.downcase=true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL of the LDAP server. Note that if you are using ldaps, then you should install the server certificate into the Java truststore.</span></span><br><span class=\"line\">ldap.url=ldap://den.exmaple-org:389</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bind DN is the username of an LDAP user to connect (or bind) with. Leave this blank for anonymous access to the LDAP directory (optional)</span></span><br><span class=\"line\">ldap.bindDn=user@exmaple-org.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bind Password is the password of the user to connect with. Leave this blank for anonymous access to the LDAP directory (optional)</span></span><br><span class=\"line\">ldap.bindPassword=mypassword</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Possible values: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html (default: simple)</span></span><br><span class=\"line\">ldap.authentication=simple</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># USER MAPPING</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Distinguished Name (DN) of the root node in LDAP from which to search for users (mandatory)</span></span><br><span class=\"line\">ldap.user.baseDn=DC=exmaple-org,DC=com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># LDAP user request. (default: (&amp;(objectClass=inetOrgPerson)(uid=&#123;login&#125;)) )</span></span><br><span class=\"line\">ldap.user.request=(&amp;(objectClass=user)(sAMAccountName=&#123;login&#125;))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Attribute in LDAP defining the user’s real name. (default: cn)</span></span><br><span class=\"line\">ldap.user.realNameAttribute=cn</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Attribute in LDAP defining the user’s email. (default: mail)</span></span><br><span class=\"line\">ldap.user.emailAttribute=email</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sonar.search.javaAdditionalOpts=-Dbootstrap.system_call_filter=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Global level of logs (applies to all 4 processes).</span></span><br><span class=\"line\"><span class=\"comment\"># Supported values are INFO (default), DEBUG and TRACE</span></span><br><span class=\"line\">sonar.log.level=INFO</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Paths to persistent data files (embedded database and search index) and temporary files.</span></span><br><span class=\"line\"><span class=\"comment\"># Can be absolute or relative to installation directory.</span></span><br><span class=\"line\"><span class=\"comment\"># Defaults are respectively &lt;installation home&gt;/data and &lt;installation home&gt;/temp</span></span><br><span class=\"line\">sonar.path.data=/var/sonarqube/data</span><br><span class=\"line\">sonar.path.temp=/var/sonarqube/temp</span><br></pre></td></tr></table></figure>\n","more":"<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># DATABASE</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># IMPORTANT:</span></span><br><span class=\"line\"><span class=\"comment\"># - The embedded H2 database is used by default. It is recommended for tests but not for</span></span><br><span class=\"line\"><span class=\"comment\">#   production use. Supported databases are Oracle, PostgreSQL and Microsoft SQLServer.</span></span><br><span class=\"line\"><span class=\"comment\"># - Changes to database connection URL (sonar.jdbc.url) can affect SonarSource licensed products.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User credentials.</span></span><br><span class=\"line\"><span class=\"comment\"># Permissions to create tables, indices and triggers must be granted to JDBC user.</span></span><br><span class=\"line\"><span class=\"comment\"># The schema must be created first.</span></span><br><span class=\"line\">sonar.jdbc.username=sonarqube</span><br><span class=\"line\">sonar.jdbc.password=mypassword</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#----- PostgreSQL 9.6 or greater</span></span><br><span class=\"line\"><span class=\"comment\"># By default the schema named &quot;public&quot; is used. It can be overridden with the parameter &quot;currentSchema&quot;.</span></span><br><span class=\"line\">sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Binding IP address. For servers with more than one IP address, this property specifies which</span></span><br><span class=\"line\"><span class=\"comment\"># address will be used for listening on the specified ports.</span></span><br><span class=\"line\"><span class=\"comment\"># By default, ports will be used on all IP addresses associated with the server.</span></span><br><span class=\"line\">sonar.web.host=10.118.245.19</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Web context. When set, it must start with forward slash (for example /sonarqube).</span></span><br><span class=\"line\"><span class=\"comment\"># The default value is root context (empty value).</span></span><br><span class=\"line\">sonar.web.context=</span><br><span class=\"line\"><span class=\"comment\"># TCP port for incoming HTTP connections. Default value is 9000.</span></span><br><span class=\"line\">sonar.web.port=9000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># LDAP CONFIGURATION</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Follow or not referrals. See http://docs.oracle.com/javase/jndi/tutorial/ldap/referral/jndi.html (default: true)</span></span><br><span class=\"line\">ldap.followReferrals=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable the LDAP feature</span></span><br><span class=\"line\">sonar.security.realm=LDAP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set to true when connecting to a LDAP server using a case-insensitive setup.</span></span><br><span class=\"line\"><span class=\"comment\"># sonar.authenticator.downcase=true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL of the LDAP server. Note that if you are using ldaps, then you should install the server certificate into the Java truststore.</span></span><br><span class=\"line\">ldap.url=ldap://den.exmaple-org:389</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bind DN is the username of an LDAP user to connect (or bind) with. Leave this blank for anonymous access to the LDAP directory (optional)</span></span><br><span class=\"line\">ldap.bindDn=user@exmaple-org.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bind Password is the password of the user to connect with. Leave this blank for anonymous access to the LDAP directory (optional)</span></span><br><span class=\"line\">ldap.bindPassword=mypassword</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Possible values: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html (default: simple)</span></span><br><span class=\"line\">ldap.authentication=simple</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># USER MAPPING</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Distinguished Name (DN) of the root node in LDAP from which to search for users (mandatory)</span></span><br><span class=\"line\">ldap.user.baseDn=DC=exmaple-org,DC=com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># LDAP user request. (default: (&amp;(objectClass=inetOrgPerson)(uid=&#123;login&#125;)) )</span></span><br><span class=\"line\">ldap.user.request=(&amp;(objectClass=user)(sAMAccountName=&#123;login&#125;))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Attribute in LDAP defining the user’s real name. (default: cn)</span></span><br><span class=\"line\">ldap.user.realNameAttribute=cn</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Attribute in LDAP defining the user’s email. (default: mail)</span></span><br><span class=\"line\">ldap.user.emailAttribute=email</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sonar.search.javaAdditionalOpts=-Dbootstrap.system_call_filter=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Global level of logs (applies to all 4 processes).</span></span><br><span class=\"line\"><span class=\"comment\"># Supported values are INFO (default), DEBUG and TRACE</span></span><br><span class=\"line\">sonar.log.level=INFO</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Paths to persistent data files (embedded database and search index) and temporary files.</span></span><br><span class=\"line\"><span class=\"comment\"># Can be absolute or relative to installation directory.</span></span><br><span class=\"line\"><span class=\"comment\"># Defaults are respectively &lt;installation home&gt;/data and &lt;installation home&gt;/temp</span></span><br><span class=\"line\">sonar.path.data=/var/sonarqube/data</span><br><span class=\"line\">sonar.path.temp=/var/sonarqube/temp</span><br></pre></td></tr></table></figure>","categories":[{"name":"SonarQube","path":"api/categories/SonarQube.json"}],"tags":[{"name":"SonarQube","path":"api/tags/SonarQube.json"},{"name":"LDAP","path":"api/tags/LDAP.json"},{"name":"PostgreSQL","path":"api/tags/PostgreSQL.json"}]}