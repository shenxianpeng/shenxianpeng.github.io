{"title":"How to download the entire folder artifacts when Artifactory \"Download Folder functionality is disabled\"?","slug":"2021/05/artifactory-api-search","date":"2021-05-04T06:37:00.000Z","updated":"2024-09-27T16:51:45.377Z","comments":true,"path":"api/articles/2021/05/artifactory-api-search.json","excerpt":null,"covers":["/2021/05/artifactory-api-search/pattern-search.png"],"content":"<h2 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h2><p>When you do CI with JFrog Artifactory when you want to download the entire folder artifacts, but maybe your IT doesn’t enable this function, whatever some seasons.</p>\n<p>You can try the below JFrog Artifactory API to know if you’re using Artifactory whether allowed to download the entire folder artifacts.</p>\n<p>just visit this API URL: <code>https://den-artifactory.company.com/artifactory/api/archive/download/team-generic-release-den/project/abc/main/?archiveType=zip</code></p>\n<p>You will see an error message returned if the Artifactory is not allowed to download the entire folder.</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;errors&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;status&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">403</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Download Folder functionality is disabled.&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>More details about the API could find here <a href=\"https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RetrieveFolderorRepositoryArchive\">Retrieve Folder or Repository Archive</a></p>\n</blockquote>\n<h2 id=\"Workaround\"><a href=\"#Workaround\" class=\"headerlink\" title=\"Workaround\"></a>Workaround</h2><p>So to be enabled to download entire folder artifacts, I found other JFrog Artifactory APIs provide a workaround.</p>\n<p>How to download the entire folder artifacts programmatically? this post will show you how to use other <a href=\"https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API\">Artifactory REST API</a> to get a workaround.</p>\n<h3 id=\"1-Get-All-Artifacts-Created-in-Date-Range\"><a href=\"#1-Get-All-Artifacts-Created-in-Date-Range\" class=\"headerlink\" title=\"1. Get All Artifacts Created in Date Range\"></a>1. Get All Artifacts Created in Date Range</h3><p>API URL: <a href=\"https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-ArtifactsCreatedinDateRange\">Artifacts Created in Date Range</a></p>\n<p>This is the snippet code I use this API</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">USERNAME=<span class=\"variable\">$1</span></span><br><span class=\"line\">PASSWORD=<span class=\"variable\">$2</span></span><br><span class=\"line\">REPO=<span class=\"variable\">$3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># which day ago do you want to download</span></span><br><span class=\"line\">N_DAY_AGO=<span class=\"variable\">$4</span></span><br><span class=\"line\"><span class=\"comment\"># today</span></span><br><span class=\"line\">START_TIME=$(($(date --date=&quot;<span class=\"variable\">$N_DAY_AGO</span> days ago&quot; +%s%N)/<span class=\"number\">1000000</span>))</span><br><span class=\"line\">END_TIME=$(($(date +%s%N)/<span class=\"number\">1000000</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ARTIFACTORY=https://den-artifactory.company.com/artifactory</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -x <span class=\"string\">&quot;`which sha1sum`&quot;</span> ]; <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You need to have the &#x27;sha1sum&#x27; command in your path.&quot;</span>; <span class=\"built_in\">exit</span> 1; <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">RESULTS=`curl -s -X GET -u <span class=\"variable\">$USERNAME</span>:<span class=\"variable\">$PASSWORD</span> <span class=\"string\">&quot;<span class=\"variable\">$ARTIFACTORY</span>/api/search/creation?from=<span class=\"variable\">$START_TIME</span>&amp;to=<span class=\"variable\">$END_TIME</span>&amp;repos=<span class=\"variable\">$REPO</span>&quot;</span> | grep uri | awk <span class=\"string\">&#x27;&#123;print $3&#125;&#x27;</span> | sed s<span class=\"string\">&#x27;/.$//&#x27;</span> | sed s<span class=\"string\">&#x27;/.$//&#x27;</span> | sed -r <span class=\"string\">&#x27;s/^.&#123;1&#125;//&#x27;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$RESULTS</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> RESULT <span class=\"keyword\">in</span> <span class=\"variable\">$RESULTS</span> ; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;fetching path from <span class=\"variable\">$RESULT</span>&quot;</span></span><br><span class=\"line\">    PATH_TO_FILE=`curl -s -X GET -u <span class=\"variable\">$USERNAME</span>:<span class=\"variable\">$PASSWORD</span> <span class=\"variable\">$RESULT</span> | grep downloadUri | awk <span class=\"string\">&#x27;&#123;print $3&#125;&#x27;</span> | sed s<span class=\"string\">&#x27;/.$//&#x27;</span> | sed s<span class=\"string\">&#x27;/.$//&#x27;</span> | sed -r <span class=\"string\">&#x27;s/^.&#123;1&#125;//&#x27;</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;download file path <span class=\"variable\">$PATH_TO_FILE</span>&quot;</span></span><br><span class=\"line\">  curl -u <span class=\"variable\">$USERNAME</span>:<span class=\"variable\">$PASSWORD</span> -O <span class=\"variable\">$PATH_TO_FILE</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<p>Then you just use this as: <code>sh download.sh $&#123;USERNAME&#125; $&#123;PASSWORD&#125; $&#123;REPO_PATH&#125; $&#123;N_DAY_AGO&#125;</code></p>\n<h3 id=\"2-Get-all-artifacts-matching-the-given-Ant-path-pattern\"><a href=\"#2-Get-all-artifacts-matching-the-given-Ant-path-pattern\" class=\"headerlink\" title=\"2. Get all artifacts matching the given Ant path pattern\"></a>2. Get all artifacts matching the given Ant path pattern</h3><p>More about this API see: <a href=\"https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-PatternSearch\">Pattern Search</a></p>\n<p>Take an example screenshot of pattern search:</p>\n<p><img src=\"/2021/05/artifactory-api-search/pattern-search.png\" alt=\"通过模式来搜索\"></p>\n<p>Then you can use Shell, Python language to get the file path from the response, then use <code>curl -u $USERNAME:$PASSWORD -O $PATH_TO_FILE</code> command to download the file one by one.</p>\n<p>If you have better solutions, suggestions, or questions, you can leave a comment.</p>\n","more":"<h2 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h2><p>When you do CI with JFrog Artifactory when you want to download the entire folder artifacts, but maybe your IT doesn’t enable this function, whatever some seasons.</p>\n<p>You can try the below JFrog Artifactory API to know if you’re using Artifactory whether allowed to download the entire folder artifacts.</p>\n<p>just visit this API URL: <code>https://den-artifactory.company.com/artifactory/api/archive/download/team-generic-release-den/project/abc/main/?archiveType=zip</code></p>\n<p>You will see an error message returned if the Artifactory is not allowed to download the entire folder.</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;errors&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;status&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">403</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Download Folder functionality is disabled.&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>More details about the API could find here <a href=\"https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-RetrieveFolderorRepositoryArchive\">Retrieve Folder or Repository Archive</a></p>\n</blockquote>\n<h2 id=\"Workaround\"><a href=\"#Workaround\" class=\"headerlink\" title=\"Workaround\"></a>Workaround</h2><p>So to be enabled to download entire folder artifacts, I found other JFrog Artifactory APIs provide a workaround.</p>\n<p>How to download the entire folder artifacts programmatically? this post will show you how to use other <a href=\"https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API\">Artifactory REST API</a> to get a workaround.</p>\n<h3 id=\"1-Get-All-Artifacts-Created-in-Date-Range\"><a href=\"#1-Get-All-Artifacts-Created-in-Date-Range\" class=\"headerlink\" title=\"1. Get All Artifacts Created in Date Range\"></a>1. Get All Artifacts Created in Date Range</h3><p>API URL: <a href=\"https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-ArtifactsCreatedinDateRange\">Artifacts Created in Date Range</a></p>\n<p>This is the snippet code I use this API</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">USERNAME=<span class=\"variable\">$1</span></span><br><span class=\"line\">PASSWORD=<span class=\"variable\">$2</span></span><br><span class=\"line\">REPO=<span class=\"variable\">$3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># which day ago do you want to download</span></span><br><span class=\"line\">N_DAY_AGO=<span class=\"variable\">$4</span></span><br><span class=\"line\"><span class=\"comment\"># today</span></span><br><span class=\"line\">START_TIME=$(($(date --date=&quot;<span class=\"variable\">$N_DAY_AGO</span> days ago&quot; +%s%N)/<span class=\"number\">1000000</span>))</span><br><span class=\"line\">END_TIME=$(($(date +%s%N)/<span class=\"number\">1000000</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ARTIFACTORY=https://den-artifactory.company.com/artifactory</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -x <span class=\"string\">&quot;`which sha1sum`&quot;</span> ]; <span class=\"keyword\">then</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You need to have the &#x27;sha1sum&#x27; command in your path.&quot;</span>; <span class=\"built_in\">exit</span> 1; <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">RESULTS=`curl -s -X GET -u <span class=\"variable\">$USERNAME</span>:<span class=\"variable\">$PASSWORD</span> <span class=\"string\">&quot;<span class=\"variable\">$ARTIFACTORY</span>/api/search/creation?from=<span class=\"variable\">$START_TIME</span>&amp;to=<span class=\"variable\">$END_TIME</span>&amp;repos=<span class=\"variable\">$REPO</span>&quot;</span> | grep uri | awk <span class=\"string\">&#x27;&#123;print $3&#125;&#x27;</span> | sed s<span class=\"string\">&#x27;/.$//&#x27;</span> | sed s<span class=\"string\">&#x27;/.$//&#x27;</span> | sed -r <span class=\"string\">&#x27;s/^.&#123;1&#125;//&#x27;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$RESULTS</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> RESULT <span class=\"keyword\">in</span> <span class=\"variable\">$RESULTS</span> ; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;fetching path from <span class=\"variable\">$RESULT</span>&quot;</span></span><br><span class=\"line\">    PATH_TO_FILE=`curl -s -X GET -u <span class=\"variable\">$USERNAME</span>:<span class=\"variable\">$PASSWORD</span> <span class=\"variable\">$RESULT</span> | grep downloadUri | awk <span class=\"string\">&#x27;&#123;print $3&#125;&#x27;</span> | sed s<span class=\"string\">&#x27;/.$//&#x27;</span> | sed s<span class=\"string\">&#x27;/.$//&#x27;</span> | sed -r <span class=\"string\">&#x27;s/^.&#123;1&#125;//&#x27;</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">&quot;download file path <span class=\"variable\">$PATH_TO_FILE</span>&quot;</span></span><br><span class=\"line\">  curl -u <span class=\"variable\">$USERNAME</span>:<span class=\"variable\">$PASSWORD</span> -O <span class=\"variable\">$PATH_TO_FILE</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<p>Then you just use this as: <code>sh download.sh $&#123;USERNAME&#125; $&#123;PASSWORD&#125; $&#123;REPO_PATH&#125; $&#123;N_DAY_AGO&#125;</code></p>\n<h3 id=\"2-Get-all-artifacts-matching-the-given-Ant-path-pattern\"><a href=\"#2-Get-all-artifacts-matching-the-given-Ant-path-pattern\" class=\"headerlink\" title=\"2. Get all artifacts matching the given Ant path pattern\"></a>2. Get all artifacts matching the given Ant path pattern</h3><p>More about this API see: <a href=\"https://www.jfrog.com/confluence/display/JFROG/Artifactory+REST+API#ArtifactoryRESTAPI-PatternSearch\">Pattern Search</a></p>\n<p>Take an example screenshot of pattern search:</p>\n<p><img src=\"/2021/05/artifactory-api-search/pattern-search.png\" alt=\"通过模式来搜索\"></p>\n<p>Then you can use Shell, Python language to get the file path from the response, then use <code>curl -u $USERNAME:$PASSWORD -O $PATH_TO_FILE</code> command to download the file one by one.</p>\n<p>If you have better solutions, suggestions, or questions, you can leave a comment.</p>\n","categories":[{"name":"JFrog","path":"api/categories/JFrog.json"}],"tags":[{"name":"Artifactory","path":"api/tags/Artifactory.json"},{"name":"JFrog","path":"api/tags/JFrog.json"}]}