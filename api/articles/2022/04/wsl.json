{"title":"在 Windows 做开发还能这么爽？WSL + VS Code + Docker Desktop 你值得有用","slug":"2022/04/wsl","date":"2022-04-19T14:12:31.000Z","updated":"2023-02-24T14:52:01.433Z","comments":true,"path":"api/articles/2022/04/wsl.json","excerpt":"很久以来很多程序员都遇到过在 Windows 做开发的各种不便：比如设置开发环境不能像 Linux 和 Mac 那样只需要输入一行命令就能安装各种 command 和 package，因此有的程序员从此转到了 Mac 上开发，也有的干脆就使用 Linux 作为开发机，只有那些不得不使用 Windows 作为开发环境程序员还一直留在了 Windows 上继续凑合中。直到 WSL 的到来，准确来说是 WSL2。WSL + VS Code + Docker Desktop 这三剑客的组合，开始让我觉得在 Windows 上做开发是一件非常爽的事情。什么是 WSLWSL 是 Windows Subsystem for Linux 的缩写，它是 Windows 10 操作系统的一项功能，使你能够在 Windows 上直接运行 Linux 文件系统，以及 Linux 命令行工具和 GUI 应用程序，并与传统的 Windows 桌面和应用程序一起运行。WSL 的最低版本要求是 Windows 10 version 1903 及更高。WSL 是专为那些需要使用 Linux 的开发人员所开发的，例如从事网络开发人员、开源项目、以及需要部署到 Linux 服务器环境的开发者。WSL 适用于喜欢使用 Bash、常用 Linux 工具（sed、awk等）和 Linux 优先框架（Ruby、Python 等），同时也喜欢使用 Windows 作为生产力工具的人。下面来看看 WSL 和虚拟机相比有哪些优势。","covers":["/2022/04/wsl/ubuntu.png","/2022/04/wsl/vscode.png"],"content":"<p>很久以来很多程序员都遇到过在 Windows 做开发的各种不便：</p>\n<p>比如设置开发环境不能像 Linux 和 Mac 那样只需要输入一行命令就能安装各种 command 和 package，因此有的程序员从此转到了 Mac 上开发，也有的干脆就使用 Linux 作为开发机，只有那些不得不使用 Windows 作为开发环境程序员还一直留在了 Windows 上继续凑合中。</p>\n<p>直到 WSL 的到来，准确来说是 WSL2。</p>\n<p>WSL + VS Code + Docker Desktop 这三剑客的组合，开始让我觉得在 Windows 上做开发是一件非常爽的事情。</p>\n<h2 id=\"什么是-WSL\"><a href=\"#什么是-WSL\" class=\"headerlink\" title=\"什么是 WSL\"></a>什么是 WSL</h2><p>WSL 是 Windows Subsystem for Linux 的缩写，它是 Windows 10 操作系统的一项功能，使你能够在 Windows 上直接运行 Linux 文件系统，以及 Linux 命令行工具和 GUI 应用程序，并与传统的 Windows 桌面和应用程序一起运行。</p>\n<blockquote>\n<p>WSL 的最低版本要求是 Windows 10 version 1903 及更高。</p>\n</blockquote>\n<p>WSL 是专为那些需要使用 Linux 的开发人员所开发的，例如从事网络开发人员、开源项目、以及需要部署到 Linux 服务器环境的开发者。</p>\n<p>WSL 适用于喜欢使用 Bash、常用 Linux 工具（sed、awk等）和 Linux 优先框架（Ruby、Python 等），同时也喜欢使用 Windows 作为生产力工具的人。</p>\n<p>下面来看看 WSL 和虚拟机相比有哪些优势。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"使用-WSL-的几点优势\"><a href=\"#使用-WSL-的几点优势\" class=\"headerlink\" title=\"使用 WSL 的几点优势\"></a>使用 WSL 的几点优势</h2><ol>\n<li>与完整的虚拟机相比，WSL 需要的资源（CPU、内存和存储）更少</li>\n<li>你可以同时使用 Windows 和 Linux，并从 Linux 中访问你的 Windows 文件，有更好的交互体验。</li>\n<li>最最重要的是，使用 WSL 结合 VS Code + Docker 既有 Linux 的完美体验感，也同时拥有在 Windows 上的办公生产力。这是虚拟机或是 Linux 操作系统所办不到。Mac 可以，但并不是所有人都适合 Mac。</li>\n</ol>\n<p>下面就来说说如何安装 WSL，以及和 VS Code + Docker 进行搭配使用。</p>\n<h2 id=\"安装-WSL\"><a href=\"#安装-WSL\" class=\"headerlink\" title=\"安装 WSL\"></a>安装 WSL</h2><figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--install</span></span><br></pre></td></tr></table></figure>\n\n<p>这个命令将启用所需的可选组件，下载最新的 Linux 内核，将 WSL 2 设置为你的默认值，并为你安装一个 Linux 发行版（默认为 Ubuntu）。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看可用的发行版列表</span></span><br><span class=\"line\">C:\\Users\\xshen&gt;wsl <span class=\"literal\">--list</span> <span class=\"literal\">--online</span></span><br><span class=\"line\">The following is a list of valid distributions that can be installed.</span><br><span class=\"line\">Install <span class=\"keyword\">using</span> <span class=\"string\">&#x27;wsl --install -d &lt;Distro&gt;&#x27;</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">NAME            FRIENDLY NAME</span><br><span class=\"line\">Ubuntu          Ubuntu</span><br><span class=\"line\">Debian          Debian GNU/Linux</span><br><span class=\"line\">kali<span class=\"literal\">-linux</span>      Kali Linux Rolling</span><br><span class=\"line\">openS<span class=\"built_in\">USE-42</span>     openSUSE Leap <span class=\"number\">42</span></span><br><span class=\"line\">SLES<span class=\"literal\">-12</span>         SUSE Linux Enterprise Server v12</span><br><span class=\"line\">Ubuntu<span class=\"literal\">-16</span>.<span class=\"number\">04</span>    Ubuntu <span class=\"number\">16.04</span> LTS</span><br><span class=\"line\">Ubuntu<span class=\"literal\">-18</span>.<span class=\"number\">04</span>    Ubuntu <span class=\"number\">18.04</span> LTS</span><br><span class=\"line\">Ubuntu<span class=\"literal\">-20</span>.<span class=\"number\">04</span>    Ubuntu <span class=\"number\">20.04</span> LTS</span><br></pre></td></tr></table></figure>\n\n<p>安装其他发行版，比如 Debian</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--install</span> <span class=\"literal\">-d</span> Debian</span><br></pre></td></tr></table></figure>\n\n<p>更详细的请参考官方<a href=\"https://docs.microsoft.com/en-us/windows/wsl/install\">文档</a></p>\n<h2 id=\"WSL-VS-Code-演示\"><a href=\"#WSL-VS-Code-演示\" class=\"headerlink\" title=\"WSL + VS Code 演示\"></a>WSL + VS Code 演示</h2><p>以下以 Ubuntu 为例，演示从下载代码，并通过 VS Code 打开代码目录进行 Coding。</p>\n<p>此时我已经通过 WSL 打开了已经安装好的 Ubuntu 操作系统了。</p>\n<p><img src=\"/2022/04/wsl/ubuntu.png\" alt=\"ubuntu\"></p>\n<p>首选下载代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ubuntu@CN-L-2680:~$ git <span class=\"built_in\">clone</span> https://github.com/cue-lang/cue.git --depth 1</span><br><span class=\"line\">Cloning into <span class=\"string\">&#x27;cue&#x27;</span>...</span><br><span class=\"line\">remote: Enumerating objects: 1833, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (1833/1833), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (1502/1502), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Total 1833 (delta 238), reused 1161 (delta 148), pack-reused 0</span><br><span class=\"line\">Receiving objects: 100% (1833/1833), 1.53 MiB | 5.39 MiB/s, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Resolving deltas: 100% (238/238), <span class=\"keyword\">done</span>.</span><br></pre></td></tr></table></figure>\n\n<p>然后到下载好的代码目录下面，输入 <code>code .</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ubuntu@CN-L-2680:~$ <span class=\"built_in\">cd</span> cue/</span><br><span class=\"line\">ubuntu@CN-L-2680:~/cue$ code .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只有第一次才会安装 VS Code Server</span></span><br><span class=\"line\">Installing VS Code Server <span class=\"keyword\">for</span> x64 (dfd34e8260c270da74b5c2d86d61aee4b6d56977)</span><br><span class=\"line\">Downloading: 100%</span><br><span class=\"line\">Unpacking: 100%</span><br><span class=\"line\">Unpacked 2341 files and folders to /home/ubuntu/.vscode-server/bin/dfd34e8260c270da74b5c2d86d61aee4b6d56977.</span><br></pre></td></tr></table></figure>\n\n<p>第一次会自动下载并安装 VS Code Server，安装完成后会自动启动你本机上的 VS Code，并打开了 Ubuntu 上的代码目录，整个过程非常丝滑。</p>\n<p>之后你就可以在 VS Code 上通过命令行 <code>apt-get</code> 命令安装你需要的任何软件了，真爽~</p>\n<p><img src=\"/2022/04/wsl/vscode.png\" alt=\"vscode\"></p>\n<blockquote>\n<p>本机 VS Code 上需要安装微软出的 <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl\">Remote - WSL</a> 插件；<br>另外，如果需要在 WSL 中使用 Docker，需要在 Windows 上预先安装 <a href=\"https://www.docker.com/products/docker-desktop/\">Docker Desktop</a>。</p>\n</blockquote>\n<hr>\n<p>转载本站文章请注明作者和出处，请勿用于任何商业用途。欢迎关注公众号「DevOps攻城狮」</p>\n","more":"<h2 id=\"使用-WSL-的几点优势\"><a href=\"#使用-WSL-的几点优势\" class=\"headerlink\" title=\"使用 WSL 的几点优势\"></a>使用 WSL 的几点优势</h2><ol>\n<li>与完整的虚拟机相比，WSL 需要的资源（CPU、内存和存储）更少</li>\n<li>你可以同时使用 Windows 和 Linux，并从 Linux 中访问你的 Windows 文件，有更好的交互体验。</li>\n<li>最最重要的是，使用 WSL 结合 VS Code + Docker 既有 Linux 的完美体验感，也同时拥有在 Windows 上的办公生产力。这是虚拟机或是 Linux 操作系统所办不到。Mac 可以，但并不是所有人都适合 Mac。</li>\n</ol>\n<p>下面就来说说如何安装 WSL，以及和 VS Code + Docker 进行搭配使用。</p>\n<h2 id=\"安装-WSL\"><a href=\"#安装-WSL\" class=\"headerlink\" title=\"安装 WSL\"></a>安装 WSL</h2><figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--install</span></span><br></pre></td></tr></table></figure>\n\n<p>这个命令将启用所需的可选组件，下载最新的 Linux 内核，将 WSL 2 设置为你的默认值，并为你安装一个 Linux 发行版（默认为 Ubuntu）。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看可用的发行版列表</span></span><br><span class=\"line\">C:\\Users\\xshen&gt;wsl <span class=\"literal\">--list</span> <span class=\"literal\">--online</span></span><br><span class=\"line\">The following is a list of valid distributions that can be installed.</span><br><span class=\"line\">Install <span class=\"keyword\">using</span> <span class=\"string\">&#x27;wsl --install -d &lt;Distro&gt;&#x27;</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">NAME            FRIENDLY NAME</span><br><span class=\"line\">Ubuntu          Ubuntu</span><br><span class=\"line\">Debian          Debian GNU/Linux</span><br><span class=\"line\">kali<span class=\"literal\">-linux</span>      Kali Linux Rolling</span><br><span class=\"line\">openS<span class=\"built_in\">USE-42</span>     openSUSE Leap <span class=\"number\">42</span></span><br><span class=\"line\">SLES<span class=\"literal\">-12</span>         SUSE Linux Enterprise Server v12</span><br><span class=\"line\">Ubuntu<span class=\"literal\">-16</span>.<span class=\"number\">04</span>    Ubuntu <span class=\"number\">16.04</span> LTS</span><br><span class=\"line\">Ubuntu<span class=\"literal\">-18</span>.<span class=\"number\">04</span>    Ubuntu <span class=\"number\">18.04</span> LTS</span><br><span class=\"line\">Ubuntu<span class=\"literal\">-20</span>.<span class=\"number\">04</span>    Ubuntu <span class=\"number\">20.04</span> LTS</span><br></pre></td></tr></table></figure>\n\n<p>安装其他发行版，比如 Debian</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--install</span> <span class=\"literal\">-d</span> Debian</span><br></pre></td></tr></table></figure>\n\n<p>更详细的请参考官方<a href=\"https://docs.microsoft.com/en-us/windows/wsl/install\">文档</a></p>\n<h2 id=\"WSL-VS-Code-演示\"><a href=\"#WSL-VS-Code-演示\" class=\"headerlink\" title=\"WSL + VS Code 演示\"></a>WSL + VS Code 演示</h2><p>以下以 Ubuntu 为例，演示从下载代码，并通过 VS Code 打开代码目录进行 Coding。</p>\n<p>此时我已经通过 WSL 打开了已经安装好的 Ubuntu 操作系统了。</p>\n<p><img src=\"/2022/04/wsl/ubuntu.png\" alt=\"ubuntu\"></p>\n<p>首选下载代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ubuntu@CN-L-2680:~$ git <span class=\"built_in\">clone</span> https://github.com/cue-lang/cue.git --depth 1</span><br><span class=\"line\">Cloning into <span class=\"string\">&#x27;cue&#x27;</span>...</span><br><span class=\"line\">remote: Enumerating objects: 1833, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (1833/1833), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (1502/1502), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Total 1833 (delta 238), reused 1161 (delta 148), pack-reused 0</span><br><span class=\"line\">Receiving objects: 100% (1833/1833), 1.53 MiB | 5.39 MiB/s, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Resolving deltas: 100% (238/238), <span class=\"keyword\">done</span>.</span><br></pre></td></tr></table></figure>\n\n<p>然后到下载好的代码目录下面，输入 <code>code .</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ubuntu@CN-L-2680:~$ <span class=\"built_in\">cd</span> cue/</span><br><span class=\"line\">ubuntu@CN-L-2680:~/cue$ code .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只有第一次才会安装 VS Code Server</span></span><br><span class=\"line\">Installing VS Code Server <span class=\"keyword\">for</span> x64 (dfd34e8260c270da74b5c2d86d61aee4b6d56977)</span><br><span class=\"line\">Downloading: 100%</span><br><span class=\"line\">Unpacking: 100%</span><br><span class=\"line\">Unpacked 2341 files and folders to /home/ubuntu/.vscode-server/bin/dfd34e8260c270da74b5c2d86d61aee4b6d56977.</span><br></pre></td></tr></table></figure>\n\n<p>第一次会自动下载并安装 VS Code Server，安装完成后会自动启动你本机上的 VS Code，并打开了 Ubuntu 上的代码目录，整个过程非常丝滑。</p>\n<p>之后你就可以在 VS Code 上通过命令行 <code>apt-get</code> 命令安装你需要的任何软件了，真爽~</p>\n<p><img src=\"/2022/04/wsl/vscode.png\" alt=\"vscode\"></p>\n<blockquote>\n<p>本机 VS Code 上需要安装微软出的 <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl\">Remote - WSL</a> 插件；<br>另外，如果需要在 WSL 中使用 Docker，需要在 Windows 上预先安装 <a href=\"https://www.docker.com/products/docker-desktop/\">Docker Desktop</a>。</p>\n</blockquote>\n<hr>\n<p>转载本站文章请注明作者和出处，请勿用于任何商业用途。欢迎关注公众号「DevOps攻城狮」</p>","categories":[{"name":"HowTo","path":"api/categories/HowTo.json"}],"tags":[{"name":"Windows","path":"api/tags/Windows.json"},{"name":"Docker","path":"api/tags/Docker.json"},{"name":"WSL","path":"api/tags/WSL.json"},{"name":"VSCode","path":"api/tags/VSCode.json"}]}