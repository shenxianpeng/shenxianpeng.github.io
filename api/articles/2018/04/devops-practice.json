{"title":"DevOps 实践","slug":"2018/04/devops-practice","date":"2018-04-14T04:45:14.000Z","updated":"2025-02-15T16:38:30.096Z","comments":true,"path":"api/articles/2018/04/devops-practice.json","excerpt":"我想大多数的团队都面临这样的问题：发布周期长开发和测试时间短","covers":null,"content":"<p>我想大多数的团队都面临这样的问题：</p>\n<ol>\n<li>发布周期长</li>\n<li>开发和测试时间短</li>\n</ol>\n<span id=\"more\"></span>\n<ol start=\"3\">\n<li>开发和测试是两个独立的团队</li>\n<li>不稳定的交付质量</li>\n<li>低收益难维护的UI自动化测试脚本</li>\n<li>不合理的测试权重分配</li>\n</ol>\n<p>解决方法：</p>\n<p>引入 DevOps 和分层自动化</p>\n<ul>\n<li>组件化产品<ul>\n<li>产品开发引入模块化，数据驱动会使得产品更加容易实施 Unit，Server，UI 自动化测试</li>\n</ul>\n</li>\n<li>优化工程师<ul>\n<li>开发和测试在未来将没有界限，他们都是开发者，都会产品的质量和客户负责</li>\n</ul>\n</li>\n<li>分层自动化<ul>\n<li>更合理的测试权重分配，更底层的测试收益越高</li>\n</ul>\n</li>\n<li>引入工具<ul>\n<li>实施DevOps引入必要的工具，Bitbucket, Jenkins, Sonar, Pipelines, Docker, test framework …</li>\n</ul>\n</li>\n</ul>\n","more":"<ol start=\"3\">\n<li>开发和测试是两个独立的团队</li>\n<li>不稳定的交付质量</li>\n<li>低收益难维护的UI自动化测试脚本</li>\n<li>不合理的测试权重分配</li>\n</ol>\n<p>解决方法：</p>\n<p>引入 DevOps 和分层自动化</p>\n<ul>\n<li>组件化产品<ul>\n<li>产品开发引入模块化，数据驱动会使得产品更加容易实施 Unit，Server，UI 自动化测试</li>\n</ul>\n</li>\n<li>优化工程师<ul>\n<li>开发和测试在未来将没有界限，他们都是开发者，都会产品的质量和客户负责</li>\n</ul>\n</li>\n<li>分层自动化<ul>\n<li>更合理的测试权重分配，更底层的测试收益越高</li>\n</ul>\n</li>\n<li>引入工具<ul>\n<li>实施DevOps引入必要的工具，Bitbucket, Jenkins, Sonar, Pipelines, Docker, test framework …</li>\n</ul>\n</li>\n</ul>","categories":[{"name":"DevOps","path":"api/categories/DevOps.json"}],"tags":[{"name":"DevOps","path":"api/tags/DevOps.json"}]}