{"title":"Nightwatch 获取接口返回数据","slug":"2017/10/nightwatch-get-interface-return-data","date":"2017-10-22T14:38:50.000Z","updated":"2025-01-25T14:17:18.552Z","comments":true,"path":"api/articles/2017/10/nightwatch-get-interface-return-data.json","excerpt":"如何在 JavaScript 通过接口自动生成和返回接口数据呢？在自动化测试中常常遇到接口测试，或是使用的数据需要从接口返回，那么如何来实现这种情况？","covers":null,"content":"<p>如何在 JavaScript 通过接口自动生成和返回接口数据呢？</p>\n<p>在自动化测试中常常遇到接口测试，或是使用的数据需要从接口返回，那么如何来实现这种情况？</p>\n<span id=\"more\"></span>\n<p>例如我想通过 generateLicense 方法生成一个 license，然后在之后的自动化测试用例中使用这个生成的 license 继续做下一步的操作，例如注册 license 等。</p>\n<p>在 license.js 文件中创建一个 generateLicense 方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">generateLicense</span>: <span class=\"keyword\">function</span>(<span class=\"params\">success, day, capacity, code</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;request&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> options = &#123; <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://generate-license/api/licenses&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">headers</span>:</span><br><span class=\"line\">        &#123; <span class=\"string\">&#x27;postman-token&#x27;</span>: <span class=\"string\">&#x27;d849e636-58c9-2705&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;cache-control&#x27;</span>: <span class=\"string\">&#x27;no-cache&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">authorization</span>: <span class=\"string\">&#x27;Basic YWRtaW46U&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;content-type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">body</span>: &#123; <span class=\"attr\">company</span>: <span class=\"string\">&#x27;Google&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">email</span>: <span class=\"string\">&#x27;5012962@qq.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">expiration</span>: day,</span><br><span class=\"line\">        <span class=\"attr\">capacity</span>: capacity,</span><br><span class=\"line\">        <span class=\"attr\">phone</span>: <span class=\"string\">&#x27;89262518&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">address</span>: <span class=\"string\">&#x27;Dalian&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">code</span>: code &#125;,</span><br><span class=\"line\">    <span class=\"attr\">json</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">request</span>(options, <span class=\"keyword\">function</span> (<span class=\"params\">error, response</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"title function_\">success</span>(response);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>对上面生成的 license 进行赋值，之后的测试用例中就可以使用 MVlicense 了。<br>使用中会涉及到异步操作，异步如何操作请看之前的文章。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> license = client.<span class=\"property\">page</span>.<span class=\"title function_\">license</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">MVlicense</span>;</span><br><span class=\"line\">license.<span class=\"title function_\">generateLicense</span>(<span class=\"keyword\">function</span>(<span class=\"params\">response</span>) &#123;</span><br><span class=\"line\">    <span class=\"title class_\">MVlicense</span> = response.<span class=\"property\">body</span>.<span class=\"property\">data</span>.<span class=\"property\">license</span>.<span class=\"property\">license</span>;</span><br><span class=\"line\">&#125;, <span class=\"number\">365</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;MV&#x27;</span>);</span><br></pre></td></tr></table></figure>\n","more":"<p>例如我想通过 generateLicense 方法生成一个 license，然后在之后的自动化测试用例中使用这个生成的 license 继续做下一步的操作，例如注册 license 等。</p>\n<p>在 license.js 文件中创建一个 generateLicense 方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">generateLicense</span>: <span class=\"keyword\">function</span>(<span class=\"params\">success, day, capacity, code</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;request&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> options = &#123; <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://generate-license/api/licenses&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">headers</span>:</span><br><span class=\"line\">        &#123; <span class=\"string\">&#x27;postman-token&#x27;</span>: <span class=\"string\">&#x27;d849e636-58c9-2705&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;cache-control&#x27;</span>: <span class=\"string\">&#x27;no-cache&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">authorization</span>: <span class=\"string\">&#x27;Basic YWRtaW46U&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;content-type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">body</span>: &#123; <span class=\"attr\">company</span>: <span class=\"string\">&#x27;Google&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">email</span>: <span class=\"string\">&#x27;5012962@qq.com&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">expiration</span>: day,</span><br><span class=\"line\">        <span class=\"attr\">capacity</span>: capacity,</span><br><span class=\"line\">        <span class=\"attr\">phone</span>: <span class=\"string\">&#x27;89262518&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">address</span>: <span class=\"string\">&#x27;Dalian&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">code</span>: code &#125;,</span><br><span class=\"line\">    <span class=\"attr\">json</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">request</span>(options, <span class=\"keyword\">function</span> (<span class=\"params\">error, response</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"title function_\">success</span>(response);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>对上面生成的 license 进行赋值，之后的测试用例中就可以使用 MVlicense 了。<br>使用中会涉及到异步操作，异步如何操作请看之前的文章。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> license = client.<span class=\"property\">page</span>.<span class=\"title function_\">license</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">MVlicense</span>;</span><br><span class=\"line\">license.<span class=\"title function_\">generateLicense</span>(<span class=\"keyword\">function</span>(<span class=\"params\">response</span>) &#123;</span><br><span class=\"line\">    <span class=\"title class_\">MVlicense</span> = response.<span class=\"property\">body</span>.<span class=\"property\">data</span>.<span class=\"property\">license</span>.<span class=\"property\">license</span>;</span><br><span class=\"line\">&#125;, <span class=\"number\">365</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;MV&#x27;</span>);</span><br></pre></td></tr></table></figure>","categories":[{"name":"Automation","path":"api/categories/Automation.json"}],"tags":[{"name":"Nightwatch","path":"api/tags/Nightwatch.json"},{"name":"Automation","path":"api/tags/Automation.json"}]}