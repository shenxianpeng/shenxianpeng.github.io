<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on DevOps 攻城狮</title><link>https://shenxianpeng.github.io/tags/docker/</link><description>Recent content in Docker on DevOps 攻城狮</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>xianpeng.shen@gmail.com (沈显鹏)</managingEditor><webMaster>xianpeng.shen@gmail.com (沈显鹏)</webMaster><copyright>© 2017 - 2025 沈显鹏</copyright><lastBuildDate>Mon, 17 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://shenxianpeng.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Buildx Bake：加速构建和管理多平台镜像的利器</title><link>https://shenxianpeng.github.io/posts/buildx-bake/</link><pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/buildx-bake/</guid><description>&lt;p>随着容器化技术的普及和应用场景的增多，构建和管理多平台镜像变得越来越重要。&lt;a
href="https://github.com/docker/buildx"
target="_blank"
>Docker Buildx&lt;/a> 是 Docker 官方对于 Docker CLI 的一个扩展，为 Docker 用户提供了更强大和灵活的构建功能。包括：&lt;/p></description></item><item><title>在 Windows 做开发还能这么爽？WSL + VS Code + Docker Desktop 你值得有用</title><link>https://shenxianpeng.github.io/posts/wsl/</link><pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/wsl/</guid><description>&lt;p>很久以来很多程序员都遇到过在 Windows 做开发的各种不便：&lt;/p>
&lt;p>比如设置开发环境不能像 Linux 和 Mac 那样只需要输入一行命令就能安装各种 command 和 package，因此有的程序员从此转到了 Mac 上开发，也有的干脆就使用 Linux 作为开发机，只有那些不得不使用 Windows 作为开发环境程序员还一直留在了 Windows 上继续凑合中。&lt;/p></description></item><item><title>关于 Docker，containerd，CRI，CRI-O，OCI，runc 的解释以及它们是如何工作在一起的</title><link>https://shenxianpeng.github.io/posts/container-ecosystem/</link><pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/container-ecosystem/</guid><description>&lt;p>自 Docker 开启了使用容器的爆发式增长，有越来越多的工具和标准来帮助管理和使用这项容器化技术，与此同时也造成了有很多术语让人感到困惑。&lt;/p></description></item><item><title>Vagrant 和 Docker 的区别，该如何选？</title><link>https://shenxianpeng.github.io/posts/vagrant-vs-docker/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/vagrant-vs-docker/</guid><description>&lt;p>关于 Vagrant 的介绍，可以参看前一篇文章：&lt;a
href="https://shenxianpeng.github.io/2022/01/vagrant/"
target="_blank"
>什么是 Vagrant? Vagrant 和 VirtualBox 的区别&lt;/a>&lt;/p></description></item><item><title>你一定要了解这 17 条 Docker 最佳实践！</title><link>https://shenxianpeng.github.io/posts/docker-best-practice/</link><pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/docker-best-practice/</guid><description>&lt;p>本篇分享在编写 Dockerfiles 和使用 Docker 时应遵循的一些最佳实践。篇幅较长，建议先收藏慢慢看，保证看完会很有收获。&lt;/p></description></item><item><title>Docker 常用命令</title><link>https://shenxianpeng.github.io/posts/docker-commands/</link><pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/docker-commands/</guid><description>一个 Docker 常用命令小纸条，记录一些常用的 Docker 命令和操作，方便日常使用和参考。</description></item><item><title>Docker 版本概述</title><link>https://shenxianpeng.github.io/posts/overview-of-docker-editions/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/overview-of-docker-editions/</guid><description>概述 Docker 的不同版本，包括社区版、企业版和企业级解决方案，适用于不同规模和需求的用户。</description></item><item><title>定制一个 Docker 版 Jenkins 镜像</title><link>https://shenxianpeng.github.io/posts/install-docker-jenkins/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/install-docker-jenkins/</guid><description>如何定制一个 Docker 版 Jenkins 镜像，并将其备份到 Artifactory，便于在需要时快速恢复 Jenkins 环境。</description></item></channel></rss>