<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on DevOps 攻城狮</title><link>https://shenxianpeng.github.io/tags/git/</link><description>Recent content in Git on DevOps 攻城狮</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>xianpeng.shen@gmail.com (沈显鹏)</managingEditor><webMaster>xianpeng.shen@gmail.com (沈显鹏)</webMaster><copyright>© 2017 - 2025 沈显鹏</copyright><lastBuildDate>Thu, 12 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://shenxianpeng.github.io/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>提升代码可追溯性：一招把 PR 描述写入 Git commit</title><link>https://shenxianpeng.github.io/posts/commit-message-template/</link><pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/commit-message-template/</guid><description>在 Bitbucket 中使用 Commit Message Templates 功能，将 PR 描述自动写入 Git commit message，确保关键信息不会随工具变更而丢失。</description></item><item><title>🚀 gitstats 升级来袭：支持 JSON 输出、多平台兼容、代码重构！</title><link>https://shenxianpeng.github.io/posts/gitstats-update/</link><pubDate>Wed, 05 Feb 2025 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/gitstats-update/</guid><description>gitstats 经过两个月的持续改进，现已支持 JSON 输出、代码重构、argparse 替换 getopt，并全面兼容 Windows 和 macOS。欢迎使用和 Star 支持！</description></item><item><title>复活 GitStats：让 Git 历史分析焕发新活力</title><link>https://shenxianpeng.github.io/posts/gitstats/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/gitstats/</guid><description>&lt;p>最近的晚上的时间（一般要等到孩子睡了）我正在做一件事：复活已经沉寂多年的 GitStats 项目。&lt;/p></description></item><item><title>约定式分支规范中文版正式发布！</title><link>https://shenxianpeng.github.io/posts/conventional-branch-zh/</link><pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/conventional-branch-zh/</guid><description>&lt;p>上周正式发布《约定式分支规范》后，受到了广泛关注，不少人询问何时推出中文版。&lt;/p></description></item><item><title>2023 年开源状况和人工智能的崛起（GitHub）</title><link>https://shenxianpeng.github.io/posts/open-source-state/</link><pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/open-source-state/</guid><description>&lt;p>最近看到一篇非常有信息量的关于人工智能、云原生、开源的趋势报告，出自于GitHub，翻译并分享给大家，以下是报告全文。&lt;/p></description></item><item><title>程序员自我修养之Git提交信息和分支创建规范（工具篇）</title><link>https://shenxianpeng.github.io/posts/commit-check/</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/commit-check/</guid><description>&lt;p>Git 提交信息和 Git 分支命名规范是团队协作中非常重要的一部分，它们能够使代码库更加规范、易于维护和理解。&lt;/p></description></item><item><title>靠谱：在不删除和重建 GitHub 仓库的情况下与父(Fork)仓库分离(Unfork)</title><link>https://shenxianpeng.github.io/posts/unfork-github-repo/</link><pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/unfork-github-repo/</guid><description>&lt;h2 class="relative group">背景
&lt;div id="背景" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%e8%83%8c%e6%99%af" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;p>有开发者、甚至公司可能会遇到过以下几个问题：&lt;/p></description></item><item><title>Git 常用命令备忘录</title><link>https://shenxianpeng.github.io/posts/git-cheatsheet/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/git-cheatsheet/</guid><description>&lt;p>不管是对于 Git 的初学者还是经常使用 Git 的码农们，在日常工作中难免会有遇到有的命令一时想不起来。不妨将下面总结的一些 Git 常用命令及技巧收藏或打印出来，以备需要的时候可以很快找到。&lt;/p></description></item><item><title>解决在 AIX 上 Git Clone 失败的两个问题</title><link>https://shenxianpeng.github.io/posts/git-clone-failed-on-aix/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/git-clone-failed-on-aix/</guid><description>&lt;h2 class="relative group">前言
&lt;div id="前言" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%e5%89%8d%e8%a8%80" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;p>本篇记录两个在做 Jenkins 与 AIX 做持续集成得时候遇到的 Git clone 代码失败的问题，并已解决，分享出来或许能有所帮助。&lt;/p></description></item><item><title>通过解除文件资源限制：解决在 AIX 使用 Git 下载大容量仓库失败问题</title><link>https://shenxianpeng.github.io/posts/aix-ulimit/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/aix-ulimit/</guid><description>&lt;p>最近使用 AIX 7.1 从 Bitbucket 下载代码的时候遇到了这个错误：&lt;/p>
&lt;p>&lt;code>fatal: write error: A file cannot be larger than the value set by ulimit.&lt;/code>&lt;/p></description></item><item><title>Git 常见设置指北</title><link>https://shenxianpeng.github.io/posts/git-guidelines/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/git-guidelines/</guid><description>&lt;p>在使用 Git 提交代码之前，建议做以下这些设置。&lt;/p>
&lt;p>叫指南有点夸张，因为它在有些情况下下不适用，比如你已经有了 &lt;code>.gitattributes&lt;/code> 或 &lt;code>.editorconfig&lt;/code> 等文件，那么有些设置就不用做了。&lt;/p></description></item><item><title>程序员自我修养之Git提交信息和分支创建规范</title><link>https://shenxianpeng.github.io/posts/commit-messages-specification/</link><pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/commit-messages-specification/</guid><description>&lt;h2 class="relative group">为什么要制定规范
&lt;div id="为什么要制定规范" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e5%88%b6%e5%ae%9a%e8%a7%84%e8%8c%83" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;p>古话说，没有规矩不成方圆。在团队协作开发时，每个人提交代码时都会写 commit message，但如果没有规范，每个人都会有自己的书写风格，因此在翻看 git log 时经常看到的是五花八门，十分不利于阅读和维护。&lt;/p></description></item><item><title>如何给你的 Git 仓库“瘦身”</title><link>https://shenxianpeng.github.io/posts/maintaining-git-repository/</link><pubDate>Sat, 21 Mar 2020 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/maintaining-git-repository/</guid><description>&lt;p>对 Git 仓库的维护通常是为了减少仓库的大小。如果你从另外一个版本控制系统导入了一个仓库，你可能需要在导入后清除掉不必要的文件。本文主要讨论如何从 Git 仓库中删除不需要的文件。&lt;/p></description></item><item><title>Git 分支策略</title><link>https://shenxianpeng.github.io/posts/git-branching-strategy/</link><pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/git-branching-strategy/</guid><description>介绍大型项目的 Git 分支策略，包括 master、develop、release 和 hotfix 分支的作用和使用方法，帮助团队更好地管理代码和版本发布。</description></item><item><title>通过 Jenkins 来提交修改的代码 git push by Jenkins</title><link>https://shenxianpeng.github.io/posts/git-push-by-jenkins/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/git-push-by-jenkins/</guid><description>&lt;p>在持续集成中，你可能需要通过 Jenkins 来修改代码，并且将修改后的代码提交到Git仓库里。怎么做呢？最方便的做法还是 Jenkins 提供对应的插件，但是很遗憾我没找到合适的。另外我也觉得通过脚本的方式来实现会更加稳定，不用担心 Jenkins 以及插件升级带来潜在不好用的可能。&lt;/p></description></item><item><title>Error: Permission denied (publickey)</title><link>https://shenxianpeng.github.io/posts/permission-denied-publickey/</link><pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/permission-denied-publickey/</guid><description>&lt;p>如果你想在一台电脑上配置 github 和 bitbucket，如何配置多个 SSH git key？
输入以下命令生成 SSH Key，注意在生成过程中最好输入新的名字，比如 id_rsa_github 和 id_rsa_bitbucket&lt;/p></description></item><item><title>Git 命令备忘</title><link>https://shenxianpeng.github.io/posts/git-command-cheat/</link><pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/git-command-cheat/</guid><description>&lt;p>有些git命令总是记不住，在我这台 Ubuntu 使用 web 版 OneNote 不方便，那就把他们记到 Blog 里吧，需要的时候翻看一下。&lt;/p></description></item><item><title>Git remove and add remote repository</title><link>https://shenxianpeng.github.io/posts/remove-and-add-remote-repository/</link><pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate><author>xianpeng.shen@gmail.com (沈显鹏)</author><guid>https://shenxianpeng.github.io/posts/remove-and-add-remote-repository/</guid><description>&lt;p>如果是通过 https 方式来 pull 和 push 代码，每次都要输入烦人的账号和密码
可以通过切成成 ssh 方式：&lt;/p></description></item></channel></rss>