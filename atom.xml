<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="https://shenxianpeng.github.io/atom.xml" rel="self"/>
  
  <link href="https://shenxianpeng.github.io/"/>
  <updated>2025-02-14T15:17:09.745Z</updated>
  <id>https://shenxianpeng.github.io/</id>
  
  <author>
    <name>shenxianpeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为什么我选择参与 EuroPython 2025 评审？</title>
    <link href="https://shenxianpeng.github.io/2025/02/euro-python-review/"/>
    <id>https://shenxianpeng.github.io/2025/02/euro-python-review/</id>
    <published>2025-02-14T07:26:59.000Z</published>
    <updated>2025-02-14T15:17:09.745Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如果我想去做一件事情，我首先会问下面这三个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对我的简历有没有帮助或能否写进我的简历里；&lt;/li&gt;
&lt;li&gt;对我个人有没有锻炼或成长的机会；&lt;/li&gt;
&lt;li&gt;能不能认识什么人。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面这三个问题，其中前两个的回答是肯</summary>
        
      
    
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/categories/python/"/>
    
    
    <category term="EuroPython" scheme="https://shenxianpeng.github.io/tags/europython/"/>
    
    <category term="Reviewer" scheme="https://shenxianpeng.github.io/tags/reviewer/"/>
    
  </entry>
  
  <entry>
    <title>🚀 gitstats 升级来袭：支持 JSON 输出、多平台兼容、代码重构！</title>
    <link href="https://shenxianpeng.github.io/2025/02/gitstats-update/"/>
    <id>https://shenxianpeng.github.io/2025/02/gitstats-update/</id>
    <published>2025-02-05T07:26:59.000Z</published>
    <updated>2025-02-14T15:17:09.745Z</updated>
    
    
    <summary type="html">&lt;p&gt;大家好！自从上次发文&lt;a href=&quot;https://shenxianpeng.github.io/2024/11/gitstats/&quot;&gt;宣布开始维护 &lt;strong&gt;gitstats&lt;/strong&gt;&lt;/a&gt; 以来，我一直在不断地改进这个项目，下面是这两个月的主要更新内容：&lt;/p&gt;
&lt;h2 id=&quot;✨-新增功能与改进&quot;&gt;&lt;a href=&quot;#✨-新增功能与改进&quot; class=&quot;headerlink&quot; title=&quot;✨ 新增功能与改进&quot;&gt;&lt;/a&gt;✨ 新增功能与改进&lt;/h2&gt;</summary>
    
    
    
    <category term="Tools" scheme="https://shenxianpeng.github.io/categories/tools/"/>
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/tags/git/"/>
    
    <category term="GitStats" scheme="https://shenxianpeng.github.io/tags/gitstats/"/>
    
  </entry>
  
  <entry>
    <title>How to use Jenkins Docker Cloud</title>
    <link href="https://shenxianpeng.github.io/2025/01/jenkins-docker-cloud/"/>
    <id>https://shenxianpeng.github.io/2025/01/jenkins-docker-cloud/</id>
    <published>2025-01-25T07:26:59.000Z</published>
    <updated>2025-02-14T15:17:09.745Z</updated>
    
    
    <summary type="html">&lt;p&gt;Recently, I am working on Jenkins instance migration, this time I started to use Jenkins Docker Cloud insead of use &lt;code&gt;docker &amp;#123; ... &amp;#125;&lt;/code&gt; in Jenkinsfile.&lt;/p&gt;
&lt;h2 id=&quot;Jenkins-cloud-plugin&quot;&gt;&lt;a href=&quot;#Jenkins-cloud-plugin&quot; class=&quot;headerlink&quot; title=&quot;Jenkins cloud plugin&quot;&gt;&lt;/a&gt;Jenkins cloud plugin&lt;/h2&gt;&lt;p&gt;First you need to install Jenkins Docker Cloud plugin &lt;a href=&quot;https://plugins.jenkins.io/docker-plugin/&quot;&gt;https://plugins.jenkins.io/docker-plugin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jenkins Docker Cloud is a plugin that allows Jenkins to use Docker containers as build agents.&lt;/p&gt;
&lt;p&gt;So you need to config a Docker Host with remote API as follows.&lt;/p&gt;</summary>
    
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/categories/jenkins/"/>
    
    
    <category term="Docker" scheme="https://shenxianpeng.github.io/tags/docker/"/>
    
    <category term="Cloud" scheme="https://shenxianpeng.github.io/tags/cloud/"/>
    
  </entry>
  
  <entry>
    <title>CPython 停止更新 Copyright 了，为什么？</title>
    <link href="https://shenxianpeng.github.io/2025/01/copyright/"/>
    <id>https://shenxianpeng.github.io/2025/01/copyright/</id>
    <published>2025-01-19T19:26:59.000Z</published>
    <updated>2025-02-14T15:17:09.745Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近逛 CPython 的仓库发现了这个 Issue &lt;a href=&quot;https://github.com/python/cpython/issues/126133&quot;&gt;gh-126133&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Hugo van Kemenade 他作为 Python 3.14 &amp;amp; 3.15 发布经理提出是否可以停止更新 Copyright。&lt;/p&gt;
&lt;p&gt;在工作中，我其中的职责之一也是发布，因此我这个想法的提出也非常感兴趣，跟 CPython 项目一样，我们的项目在每年的年初都要更新 Copyright。&lt;/p&gt;
&lt;p&gt;下面我们就一起来看看 Hugo 提出的理由以及最终这个想法被 Python 项目法律团队采纳并最终合并到 CPython 的主分支的过程。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/categories/python/"/>
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/tags/python/"/>
    
    <category term="Copyright" scheme="https://shenxianpeng.github.io/tags/copyright/"/>
    
  </entry>
  
  <entry>
    <title>2024 年终总结</title>
    <link href="https://shenxianpeng.github.io/2024/12/2024-summary/"/>
    <id>https://shenxianpeng.github.io/2024/12/2024-summary/</id>
    <published>2024-12-27T19:26:59.000Z</published>
    <updated>2025-02-14T15:17:09.745Z</updated>
    
    
    <summary type="html">&lt;p&gt;时间过得很快，2024 年即将过去。如果不记录下在这一年里发生的事情，过不了多久就很难回想起这一年都发生了什么。按照惯例，这篇年终总结如期而至。&lt;/p&gt;
&lt;p&gt;回看自己年初写下的 Flag，有些实现了，有些做了但不是很好，还有一些没有做到。&lt;/p&gt;</summary>
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Thought" scheme="https://shenxianpeng.github.io/tags/thought/"/>
    
    <category term="Summary" scheme="https://shenxianpeng.github.io/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>我的女儿</title>
    <link href="https://shenxianpeng.github.io/2024/12/my-daughter/"/>
    <id>https://shenxianpeng.github.io/2024/12/my-daughter/</id>
    <published>2024-12-27T18:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.745Z</updated>
    
    
    <summary type="html">&lt;p&gt;女儿已经两岁七个月了，我还没有单独写过一篇关于她的文章。&lt;/p&gt;
&lt;p&gt;我的女儿是个好动的小姑娘，每天充满活力，以至于经常我从下班到家六点半一直陪她到半夜十二点多才能停下来睡觉。&lt;/p&gt;
&lt;p&gt;今天是周五晚上，十二点半了还是蹦蹦跳跳不想睡觉，终于在凌晨一点钟熄灯睡觉了。但她突然下床要吃苹果。&lt;/p&gt;</summary>
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Thought" scheme="https://shenxianpeng.github.io/tags/thought/"/>
    
  </entry>
  
  <entry>
    <title>复活 GitStats：让 Git 历史分析焕发新活力</title>
    <link href="https://shenxianpeng.github.io/2024/11/gitstats/"/>
    <id>https://shenxianpeng.github.io/2024/11/gitstats/</id>
    <published>2024-11-27T18:28:00.000Z</published>
    <updated>2025-02-14T15:17:09.744Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近的晚上的时间（一般要等到孩子睡了）我正在做一件事：复活已经沉寂多年的 GitStats 项目。&lt;/p&gt;
&lt;p&gt;此前，我曾写过两篇关于 GitStats 的文章，如果感兴趣，可以查阅了解。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://shenxianpeng.github.io/2019/12/git-stats/&quot;&gt;Git 历史统计信息生成器 GitStats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shenxianpeng.github.io/2020/01/git-stats-jenkins/&quot;&gt;通过 Jenkins 定期自动给老板提供 Git 仓库的多维度代码分析报告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>pip vs pipx 的区别</title>
    <link href="https://shenxianpeng.github.io/2024/11/pip-vs-pipx/"/>
    <id>https://shenxianpeng.github.io/2024/11/pip-vs-pipx/</id>
    <published>2024-11-25T17:21:00.000Z</published>
    <updated>2025-02-14T15:17:09.745Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;pip-vs-pipx-的区别&quot;&gt;&lt;a href=&quot;#pip-vs-pipx-的区别&quot; class=&quot;headerlink&quot; title=&quot;pip vs pipx 的区别&quot;&gt;&lt;/a&gt;&lt;strong&gt;pip vs pipx 的区别&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在 Python 的生态中，&lt;strong&gt;pip&lt;/strong&gt; 和 &lt;strong&gt;pipx&lt;/strong&gt; 都是用于管理包的软件工具，但它们有不同的设计目标和使用场景。有些同学可能会疑惑，两者到底有什么区别？该如何选择？&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/categories/python/"/>
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell is not recognized as an internal or external command</title>
    <link href="https://shenxianpeng.github.io/2024/11/ansbile-playbook-issue/"/>
    <id>https://shenxianpeng.github.io/2024/11/ansbile-playbook-issue/</id>
    <published>2024-11-17T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.743Z</updated>
    
    
    <summary type="html">&lt;p&gt;Recently, while setting up a new Windows Server 2022, I encountered an issue where my Ansible playbook, which previously worked without problems, failed to execute.&lt;/p&gt;
&lt;p&gt;Here’s the configuration I used for the Windows host in my Ansible inventory:&lt;/p&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="Ansible" scheme="https://shenxianpeng.github.io/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>从早到晚，我的 DevOps 一天</title>
    <link href="https://shenxianpeng.github.io/2024/10/devops-everyday/"/>
    <id>https://shenxianpeng.github.io/2024/10/devops-everyday/</id>
    <published>2024-10-26T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.743Z</updated>
    
    
    <summary type="html">&lt;p&gt;很多人可能会好奇，作为一名 DevOps 工程师，每天究竟忙些什么呢？今天就来简单聊聊，作为 DevOps&amp;#x2F;Build&amp;#x2F;Release 工程师，我的日常工作节奏是怎样的。&lt;/p&gt;
&lt;h2 id=&quot;工作准备&quot;&gt;&lt;a href=&quot;#工作准备&quot; class=&quot;headerlink&quot; title=&quot;工作准备&quot;&gt;&lt;/a&gt;工作准备&lt;/h2&gt;&lt;p&gt;每天早上九点半到公司，第一件事就是打开 Slack 和邮箱，优先处理那些紧急或容易回复的消息。遇到比较复杂的内容，就会设置提醒，以防漏掉。之后，会把当天的任务列入 To-Do List，再检查 Jenkins 上是否有失败的任务需要关注。这一系列动作大概会花半小时左右。&lt;/p&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>What Optimizations I Made During the Jenkins Upgrade</title>
    <link href="https://shenxianpeng.github.io/2024/10/jenkins-upgrade-en/"/>
    <id>https://shenxianpeng.github.io/2024/10/jenkins-upgrade-en/</id>
    <published>2024-10-24T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.743Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h2&gt;&lt;p&gt;Recently, I’ve been working on migrating and upgrading Jenkins. The main motivation is the vulnerability &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2024-23897&quot;&gt;CVE-2024-23897&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jenkins 2.441 and earlier, LTS 2.426.2 and earlier does not disable a feature of its CLI command parser that replaces an ‘@’ character followed by a file path in an argument with the file’s contents, allowing unauthenticated attackers to read arbitrary files on the Jenkins controller file system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To address this, Jenkins needs to be upgraded to at least version 2.442 or LTS 2.426.3 or above. This was also an opportunity to rework parts of the setup that weren’t initially optimized.&lt;/p&gt;</summary>
    
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/categories/jenkins/"/>
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/tags/devops/"/>
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>从 Jenkins 升级，我做了哪些优化</title>
    <link href="https://shenxianpeng.github.io/2024/10/jenkins-upgrade/"/>
    <id>https://shenxianpeng.github.io/2024/10/jenkins-upgrade/</id>
    <published>2024-10-23T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.743Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;我最近在做的一件事情是迁移并升级 Jenkins。主要动机是因为这个漏洞 &lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2024-23897&quot;&gt;CVE-2024-23897&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jenkins 2.441 及更早版本、LTS 2.426.2 及更早版本未禁用其 CLI 命令解析器的一项功能，该功能会将参数中文件路径后的“@”字符替换为文件内容，从而允许未经身份验证的攻击者读取 Jenkins 控制器文件系统上的任意文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此需要将 Jenkins 至少升级到 2.442 或 LTS 2.426.3 及以上版本，也趁此机会重新重构之前没有做满意的部分。&lt;/p&gt;</summary>
    
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/categories/jenkins/"/>
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/tags/devops/"/>
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>选择往往比努力更重要</title>
    <link href="https://shenxianpeng.github.io/2024/09/power-of-choice/"/>
    <id>https://shenxianpeng.github.io/2024/09/power-of-choice/</id>
    <published>2024-09-26T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.743Z</updated>
    
    
    <summary type="html">&lt;p&gt;偶尔深夜躺下时，我常常在想，我是怎么就走到这了？这都是源于毕业后的一系列选择吧！&lt;/p&gt;
&lt;p&gt;也时常感慨，选择往往比努力更重要。回顾过去十余年，这几个决定对我走到今天起到了至关重要的影响。&lt;/p&gt;</summary>
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Thought" scheme="https://shenxianpeng.github.io/tags/thought/"/>
    
    <category term="Summary" scheme="https://shenxianpeng.github.io/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>DevOps进阶：揭秘首席DevOps工程师的职责与技能</title>
    <link href="https://shenxianpeng.github.io/2024/09/principal-devops-engineer/"/>
    <id>https://shenxianpeng.github.io/2024/09/principal-devops-engineer/</id>
    <published>2024-09-25T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.743Z</updated>
    
    
    <summary type="html">&lt;p&gt;想象一下，你是一名 DevOps 工程师，不论初级、中级还是高级，老板总有一天拍拍你的肩膀说：“加油干，兄弟，未来你就是我们的首席 DevOps 工程师了！”你可能会心想：“啥是首席 DevOps？这是个什么新饼？”&lt;/p&gt;
&lt;p&gt;今天就带你了解一下，所谓的“首席 DevOps 工程师”到底干啥，职责是什么？&lt;/p&gt;
&lt;p&gt;我们一起看看，顺便找准未来的职业发展方向。毕竟，谁都希望能进阶到高级角色嘛，对吧？&lt;/p&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>约定式分支规范中文版正式发布！</title>
    <link href="https://shenxianpeng.github.io/2024/09/conventional-branch-zh/"/>
    <id>https://shenxianpeng.github.io/2024/09/conventional-branch-zh/</id>
    <published>2024-09-23T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.742Z</updated>
    
    
    <summary type="html">&lt;p&gt;上周正式发布《约定式分支规范》后，受到了广泛关注，不少人询问何时推出中文版。&lt;/p&gt;
&lt;p&gt;经过一周末的努力，中文版已正式上线，详情请访问：&lt;strong&gt;&lt;a href=&quot;https://conventional-branch.github.io/zh/&quot;&gt;https://conventional-branch.github.io/zh/&lt;/a&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;此外，我们对原始版本进行了部分细微调整。以下为《约定式分支规范》中文版的完整内容。&lt;/p&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Conventional Branch Specification Released!</title>
    <link href="https://shenxianpeng.github.io/2024/09/conventional-branch/"/>
    <id>https://shenxianpeng.github.io/2024/09/conventional-branch/</id>
    <published>2024-09-17T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.743Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;p&gt;Conventional Branch refers to a structured and standardized naming convention for Git branches which aims to make branch more readable and actionable. We’ve suggested some branch prefixes you might want to use but you can also specify your own naming convention. A consistent naming convention makes it easier to identify branches by type.&lt;/p&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>初步了解 PyPA（Python Packaging Authority）下的知名项目和关系</title>
    <link href="https://shenxianpeng.github.io/2024/09/pypa/"/>
    <id>https://shenxianpeng.github.io/2024/09/pypa/</id>
    <published>2024-09-04T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.743Z</updated>
    
    
    <summary type="html">&lt;p&gt;PyPA（Python Packaging Authority）是管理和维护 Python 包相关工具的一个社区组织。PyPA 管理的知名项目包括 pip、packaging、setuptools、wheel、twine、build 等等。了解这些项目的关于有助于我们更好的了解 Python 的生态系统。&lt;/p&gt;
&lt;p&gt;以下是这些项目的介绍以及它们之间的关系：&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/categories/python/"/>
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>我记得</title>
    <link href="https://shenxianpeng.github.io/2024/07/remember/"/>
    <id>https://shenxianpeng.github.io/2024/07/remember/</id>
    <published>2024-07-08T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.742Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近开车的时候我总爱听赵雷的歌，尤其是那首《我记得》。&lt;/p&gt;
&lt;p&gt;我觉得这首歌就是回忆的交响曲，每每听到就仿佛看到了一部老电影。它像是一种声音，一种触动人心的触感，让我们回忆起那些已经消逝的时光，反思我们的生活方式和人生的方向。&lt;/p&gt;</summary>
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Work" scheme="https://shenxianpeng.github.io/tags/work/"/>
    
    <category term="Life" scheme="https://shenxianpeng.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>告别Rocket中国，回连十年再启程</title>
    <link href="https://shenxianpeng.github.io/2024/06/farewell/"/>
    <id>https://shenxianpeng.github.io/2024/06/farewell/</id>
    <published>2024-06-27T16:00:00.000Z</published>
    <updated>2025-02-14T15:17:09.741Z</updated>
    
    
    <summary type="html">&lt;p&gt;​今天（6月28日）是我在Rocket中国分公司的最后一天，也是效力的第十个年头。这是我职业生涯中效力过最长的一家公司，想借此机会写下一些文字，为这十年画上一个句号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;光阴似箭，岁月如梭&lt;/strong&gt;。转眼间，十年悄然逝去。唯有认真努力地生活，才能不被时光的流逝所感叹。我一直很喜欢的一句话是：“种一棵树最好的时间是十年前，其次是现在。&lt;/p&gt;</summary>
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Work" scheme="https://shenxianpeng.github.io/tags/work/"/>
    
    <category term="Life" scheme="https://shenxianpeng.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>你的软件究竟从哪里来？</title>
    <link href="https://shenxianpeng.github.io/2024/06/where-does-your-software-come-from/"/>
    <id>https://shenxianpeng.github.io/2024/06/where-does-your-software-come-from/</id>
    <published>2024-06-13T15:27:18.000Z</published>
    <updated>2025-02-14T15:17:09.742Z</updated>
    
    
    <summary type="html">&lt;p&gt;软件真是个有趣又深奥的东西，它由看似神奇的代码片段组成，这些代码运行在最终的终端上，本身却并非生命体，但拥有自己的生命周期。&lt;/p&gt;
&lt;p&gt;软件最初是源代码的形式，仅仅是存放在某个仓库的文本文件，然后通过独特的构建过程，这些源代码会转变为其他形式。例如交付到 web 服务器的压缩 JavaScript 代码块、包含框架代码和业务逻辑的容器镜像，或者针对特定处理器架构编译的原始二进制文件。&lt;/p&gt;
&lt;p&gt;这种最终的形态转变，也就是源代码生成的其他形式，通常被称为“软件制品”。在创建之后，制品通常会处于休眠状态，等待被使用。它们可能会被放置在软件包注册表（例如 npm、RubyGems、PyPI 等）或容器注册表（例如 GitHub Packages、Azure Container Registry、AWS ECR 等）中，也可能作为附加到 GitHub 版本发布的二进制文件，或者仅仅以 ZIP 文件的形式存储在某个 Blob 存储服务中。&lt;/p&gt;
&lt;p&gt;最终，有人会决定拾取该制品并使用它。他们可能会解压缩包、执行代码、启动容器、安装驱动程序、更新固件 - 无论采用何种方式，构建完成的软件都将开始运行。&lt;/p&gt;
&lt;p&gt;这标志着生产生命周期的顶峰，该周期可能需要大量人力投入、巨额资金，并且鉴于现代世界依赖软件运行，其重要性不言而喻。&lt;/p&gt;
&lt;p&gt;然而，在许多情况下，我们并不能完全保证所运行的制品就是我们构建的制品。制品经历的旅程细节要么丢失，要么模糊不清，很难将制品与其来源的源代码和构建指令联系起来。&lt;/p&gt;
&lt;p&gt;这种缺乏对制品生命周期的可见性是当今许多最严峻的安全挑战的根源。在整个软件开发生命周期 (SDLC) 中，有机会保护代码转换为制品的流程 - 如此一来，可以消除威胁行为者破坏最终软件并造成严重后果的风险。一些网络安全挑战似乎难以成功应对，但这种情况并非如此。让我们深入了解一些背景知识。&lt;/p&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/tags/devsecops/"/>
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
  </entry>
  
</feed>
