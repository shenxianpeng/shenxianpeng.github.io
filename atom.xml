<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peter Shen</title>
  
  <subtitle>Share about CI/CD and DevOps</subtitle>
  <link href="https://shenxianpeng.github.io/atom.xml" rel="self"/>
  
  <link href="https://shenxianpeng.github.io/"/>
  <updated>2024-01-31T04:49:00.762Z</updated>
  <id>https://shenxianpeng.github.io/</id>
  
  <author>
    <name>shenxianpeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>看看顶级的开源组织都在用哪些服务和工具</title>
    <link href="https://shenxianpeng.github.io/2024/01/apache-services-and-tools/"/>
    <id>https://shenxianpeng.github.io/2024/01/apache-services-and-tools/</id>
    <published>2024-01-21T03:27:18.000Z</published>
    <updated>2024-01-31T04:49:00.762Z</updated>
    
    
    <summary type="html">&lt;p&gt;本篇介绍的是大名鼎鼎的开源软件基金会 Apache 所使用的服务(Services)和工具(Tools)，这或许能帮助你打开视野，在选择工具的时候提供参考。如果你是一名 DevOps、SRE 或是 Infra 工程师，通过本篇文章内容结果帮助你更好的展示团队所提供的服务有哪些，以及窥探到 Apache Infra 是怎样组织和管理他们的。&lt;/p&gt;
&lt;h2 id=&quot;Apache-是谁&quot;&gt;&lt;a href=&quot;#Apache-是谁&quot; class=&quot;headerlink&quot; title=&quot;Apache 是谁&quot;&gt;&lt;/a&gt;Apache 是谁&lt;/h2&gt;&lt;p&gt;如果你不太了解 Apache，下面是关于 Apache 的简要介绍。&lt;/p&gt;
&lt;p&gt;Apache 是一个开源软件基金会（Apache Software Foundation，简称 ASF）的缩写。ASF 是一个非营利性的组织，致力于支持和发展开源软件项目。Apache 软件基金会通过提供法律、财务和基础设施支持，帮助开发者共同合作创建和维护开源软件。其中，Apache 软件基金会最为著名的项目之一是 Apache HTTP 服务器，也称为 Apache Web 服务器。此外，ASF 还托管了许多其他流行的开源项目，像 ECharts，Superset，Dubbo，Spark，Kafka 等等。&lt;/p&gt;
&lt;h2 id=&quot;服务与工具&quot;&gt;&lt;a href=&quot;#服务与工具&quot; class=&quot;headerlink&quot; title=&quot;服务与工具&quot;&gt;&lt;/a&gt;服务与工具&lt;/h2&gt;&lt;p&gt;Apache Infra 团队维护着供 PMC（项目管理委员会）、项目提交者和 Apache 董事会使用的各种工具。这些工具中的部分工具只提供给有特定职责或角色的人员使用。其他工具，如显示 Apache 基础设施各部分状态的监控工具，则向所有人开放。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%B8%BA%E9%A1%B6%E7%BA%A7%E9%A1%B9%E7%9B%AEtlp%E6%8F%90%E4%BE%9B%E7%9A%84%E6%9C%8D%E5%8A%A1&quot;&gt;为顶级项目（TLP）提供的服务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%BD%91%E7%AB%99&quot;&gt;网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6&quot;&gt;电子邮件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#asf-%E8%87%AA%E5%8A%A9%E6%9C%8D%E5%8A%A1%E5%B9%B3%E5%8F%B0&quot;&gt;ASF 自助服务平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#asf-%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86&quot;&gt;ASF 账户管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%94%AF%E6%8C%81-ldap-%E7%9A%84%E6%9C%8D%E5%8A%A1&quot;&gt;支持 LDAP 的服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%AD%B5%E5%8C%96%E9%A1%B9%E7%9B%AEpodlings%E6%9C%8D%E5%8A%A1&quot;&gt;项目孵化服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#asf-%E9%A1%B9%E7%9B%AE%E5%B7%A5%E5%85%B7&quot;&gt;ASF 项目工具&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6&quot;&gt;版本控制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E9%97%AE%E9%A2%98%E8%B7%9F%E8%B8%AA%E5%92%8C%E5%8A%9F%E8%83%BD%E8%AF%B7%E6%B1%82&quot;&gt;问题跟踪和功能请求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%B0%86%E4%BD%A0%E7%9A%84%E7%89%88%E6%9C%AC%E5%BA%93%E4%B8%8E-jira-%E7%A5%A8%E6%8D%AE%E9%9B%86%E6%88%90&quot;&gt;将版本库与 Jira 票据集成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%BA%90%E7%A0%81%E5%BA%93%E5%8F%91%E5%B8%83%E8%80%85%E8%AE%A2%E9%98%85%E8%80%85%E6%9C%8D%E5%8A%A1&quot;&gt;源码库发布者&amp;#x2F;订阅者服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9E%84%E5%BB%BA%E6%9C%8D%E5%8A%A1&quot;&gt;构建服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BA%A7%E5%93%81%E5%91%BD%E5%90%8D&quot;&gt;产品命名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%A3%E7%A0%81%E7%AD%BE%E5%90%8D&quot;&gt;代码签名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F&quot;&gt;代码质量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%A3%E7%A0%81%E5%88%86%E5%8F%91&quot;&gt;代码分发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E8%99%9A%E6%8B%9F%E6%9C%8D%E5%8A%A1%E5%99%A8&quot;&gt;虚拟服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%9C%A8%E7%BA%BF%E6%8A%95%E7%A5%A8&quot;&gt;在线投票&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7&quot;&gt;其他工具&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#dns&quot;&gt;DNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#url-%E7%9F%AD%E7%BC%A9%E5%99%A8&quot;&gt;URL 短缩器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%88%86%E4%BA%AB%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5&quot;&gt;共享片段&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9C%BA%E5%99%A8%E5%88%97%E8%A1%A8&quot;&gt;机器列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#&quot;&gt;奇思妙想&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;为顶级项目（TLP）提供的服务&quot;&gt;&lt;a href=&quot;#为顶级项目（TLP）提供的服务&quot; class=&quot;headerlink&quot; title=&quot;为顶级项目（TLP）提供的服务&quot;&gt;&lt;/a&gt;为顶级项目（TLP）提供的服务&lt;/h2&gt;&lt;h3 id=&quot;网站&quot;&gt;&lt;a href=&quot;#网站&quot; class=&quot;headerlink&quot; title=&quot;网站&quot;&gt;&lt;/a&gt;网站&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.apache.org/&quot;&gt;www.apache.org&lt;/a&gt; 这是 Apache 的主要网站。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://whimsy.apache.org/site/&quot;&gt;Apache 项目网站检查器&lt;/a&gt; 会定期检查所有为顶级项目（TLP）提供的网站，并报告它们是否符合 Apache 的 TLP 网站政策。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里只列出了几个挺有意思的连接，比如项目网址检查器，它会检查顶级项目是否有 License, Donate, Sponsors, Privacy 等正确的连接。&lt;/p&gt;
&lt;h3 id=&quot;电子邮件&quot;&gt;&lt;a href=&quot;#电子邮件&quot; class=&quot;headerlink&quot; title=&quot;电子邮件&quot;&gt;&lt;/a&gt;电子邮件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;所有新建电子邮件列表的申请都应通过&lt;a href=&quot;https://selfserve.apache.org/mailinglist-new.html&quot;&gt;自助服务系统&lt;/a&gt;进行。&lt;/li&gt;
&lt;li&gt;电子邮件服务器 - QMail&amp;#x2F;QSMTPD&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="Apache" scheme="https://shenxianpeng.github.io/tags/apache/"/>
    
    <category term="Infrastructure" scheme="https://shenxianpeng.github.io/tags/infrastructure/"/>
    
  </entry>
  
  <entry>
    <title>2023 年终总结</title>
    <link href="https://shenxianpeng.github.io/2023/12/2023-summary/"/>
    <id>https://shenxianpeng.github.io/2023/12/2023-summary/</id>
    <published>2023-12-31T15:59:59.000Z</published>
    <updated>2024-01-31T04:49:00.758Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;时间过得很快，2023 年转瞬即逝。如果不记录下自己在这一年里发生的事情，过不了多久就很难回想起来这一年都发生过什么。&lt;/p&gt;
&lt;p&gt;因此按照惯例还是要先回顾 2023 年，然后展望 2024 年。&lt;/p&gt;
&lt;h2 id=&quot;回顾-2023&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Thought" scheme="https://shenxianpeng.github.io/tags/thought/"/>
    
    <category term="Summary" scheme="https://shenxianpeng.github.io/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>如何把 GitHub Release Notes 按照 New features、Bug Fixes ... 进行自动分类</title>
    <link href="https://shenxianpeng.github.io/2023/12/automatic-categorize-release-notes/"/>
    <id>https://shenxianpeng.github.io/2023/12/automatic-categorize-release-notes/</id>
    <published>2023-12-27T10:25:39.000Z</published>
    <updated>2024-01-31T04:49:00.758Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如果你使用过 GitHub 发布过项目，你会知道 GitHub 可以&lt;a</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/tags/devops/"/>
    
    <category term="GitHub" scheme="https://shenxianpeng.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>How to make Jenkins pipeline not fail if a specific error occurs</title>
    <link href="https://shenxianpeng.github.io/2023/12/jenkins-catch-error/"/>
    <id>https://shenxianpeng.github.io/2023/12/jenkins-catch-error/</id>
    <published>2023-12-15T10:25:39.000Z</published>
    <updated>2024-01-31T04:49:00.758Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Sometimes you don’t want Jenkins pipeline failed for a specific error occurs. so you can use &lt;code&gt;catchError&lt;/code&gt; to catch error and</summary>
        
      
    
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/categories/jenkins/"/>
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>How to adopt Supply Chain Security for GitHub and Non-GitHub projects</title>
    <link href="https://shenxianpeng.github.io/2023/12/supply-chain-security/"/>
    <id>https://shenxianpeng.github.io/2023/12/supply-chain-security/</id>
    <published>2023-12-02T06:25:39.000Z</published>
    <updated>2024-01-31T04:49:00.758Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Why-Software-Supply-Chain-Security-is-important&quot;&gt;&lt;a href=&quot;#Why-Software-Supply-Chain-Security-is-important&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
    <category term="Witness" scheme="https://shenxianpeng.github.io/tags/witness/"/>
    
  </entry>
  
  <entry>
    <title>Witness 和 SLSA 💃</title>
    <link href="https://shenxianpeng.github.io/2023/11/witness-and-slsa/"/>
    <id>https://shenxianpeng.github.io/2023/11/witness-and-slsa/</id>
    <published>2023-11-30T06:25:39.000Z</published>
    <updated>2024-01-31T04:49:00.758Z</updated>
    
    
    <summary type="html">&lt;p&gt;由于近些年针对软件的供应链的攻击越来越频繁，因此 Google 在 2021 提出的解决方案是软件工件供应链级别（Supply chain Levels for Software Artifacts，”SLSA”）&lt;/p&gt;
&lt;p&gt;本篇将介绍在&lt;strong&gt;非 GitHub&lt;/strong&gt; 生态系统中，我们如何生成和验证软件工件的来源，从而提高你的项目的 SLSA Level。&lt;/p&gt;
&lt;p&gt;Witness 是一个可插拔的软件供应链风险管理框架，它能自动、规范和验证软件工件出处。它是 in-toto 是 &lt;a href=&quot;https://www.cncf.io/projects/in-toto/&quot;&gt;CNCF&lt;/a&gt; 下的项目之一。它的最初作者是 Testifysec，后来捐赠给了 &lt;a href=&quot;https://in-toto.io/&quot;&gt;in-toto&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;什么是-Witness&quot;&gt;&lt;a href=&quot;#什么是-Witness&quot; class=&quot;headerlink&quot; title=&quot;什么是 Witness&quot;&gt;&lt;/a&gt;什么是 Witness&lt;/h2&gt;&lt;p&gt;Witness 是一个可插拔的供应链安全框架，可创建整个软件开发生命周期（SDLC）的证据（Provenance）跟踪，确保软件从源代码到目标的完整性。它支持大多数主要的 CI 和基础架构提供商，是确保软件供应链安全的多功能、灵活的解决方案。&lt;/p&gt;
&lt;p&gt;安全 PKI (Public Key Infrastructure - 公钥基础设施)分发系统的使用和验证 Witness 元数据的能力进一步增强了流程的安全性，并有助于减少许多软件供应链攻击向量。&lt;/p&gt;
&lt;p&gt;Witness 的工作原理是封装在持续集成流程中执行的命令，为软件开发生命周期（SDLC）中的每个操作提供证据跟踪，这样就可以详细、可验证地记录软件是如何构建的、由谁构建以及使用了哪些工具。&lt;/p&gt;
&lt;p&gt;这些证据可用于评估政策合规性，检测任何潜在的篡改或恶意活动，并确保只有授权用户或机器才能完成流程中的某一步骤。&lt;/p&gt;
&lt;p&gt;总结 - Witness 可以做什么&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证软件由谁构建、如何构建以及使用了哪些工具&lt;/li&gt;
&lt;li&gt;检测任何潜在的篡改或恶意活动&lt;/li&gt;
&lt;li&gt;确保只有经授权的用户或机器才能完成流程的每一步&lt;/li&gt;
&lt;li&gt;分发证词（Attestations）和策略（Policy）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;如何使用-Witness&quot;&gt;&lt;a href=&quot;#如何使用-Witness&quot; class=&quot;headerlink&quot; title=&quot;如何使用 Witness&quot;&gt;&lt;/a&gt;如何使用 Witness&lt;/h2&gt;&lt;p&gt;主要分三步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;witness run&lt;/code&gt; - 运行提供的命令并记录有关执行的证词。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;witness sign&lt;/code&gt; - 使用提供的密钥签署提供的文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;witness verify&lt;/code&gt; - 验证 witness 策略。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;快速开始&quot;&gt;&lt;a href=&quot;#快速开始&quot; class=&quot;headerlink&quot; title=&quot;快速开始&quot;&gt;&lt;/a&gt;快速开始&lt;/h3&gt;&lt;p&gt;这是我创建的 &lt;a href=&quot;https://github.com/shenxianpeng/witness-demo&quot;&gt;Witness Demo 仓库&lt;/a&gt;用于演示 witness 的工作流程，具体可以根据如下步骤进行。&lt;/p&gt;</summary>
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
    <category term="Witness" scheme="https://shenxianpeng.github.io/tags/witness/"/>
    
  </entry>
  
  <entry>
    <title>Python 和 SLSA 💃</title>
    <link href="https://shenxianpeng.github.io/2023/11/python-and-slsa/"/>
    <id>https://shenxianpeng.github.io/2023/11/python-and-slsa/</id>
    <published>2023-11-15T06:25:39.000Z</published>
    <updated>2024-01-31T04:49:00.758Z</updated>
    
    
    <summary type="html">&lt;p&gt;由于近些年针对软件的供应链的攻击越来越频繁，据 SonaType 的统计从 2019 年到 2022 年针对开源软件的攻击增长了 742%，因此 2021 年 Google 提出的解决方案是软件工件供应链级别（Supply chain Levels for Software Artifacts，”SLSA”）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/11/python-and-slsa/attacks.png&quot; alt=&quot;Software supply chain attacks&quot;&gt;&lt;/p&gt;
&lt;p&gt;本篇将介绍在 Python 生态系统中，我们如何使用 SLSA 框架来生成和验证 Python 工件的来源，从而让你的 SLSA Level 从 L0&amp;#x2F;L1 到 L3。&lt;/p&gt;
&lt;p&gt;注意：本文介绍的是针对&lt;strong&gt;托管在 GitHub 上的 Python 项目&lt;/strong&gt;。SLSA 框架可通过 GitHub Actions 来实现开箱即用，只需较少的配置即可完成。&lt;/p&gt;
&lt;p&gt;对于托管在非 GitHub 上的项目（例如 Bitbucket）可以尝试 &lt;a href=&quot;https://witness.dev/&quot;&gt;Witness&lt;/a&gt;，下一篇我将更新关于如何使用 Witness。&lt;/p&gt;
&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9E%84%E5%BB%BA%E7%BA%AF%E5%87%80%E7%9A%84Python%E5%8C%85&quot;&gt;构建纯净的Python包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%94%9F%E6%88%90%E5%87%BA%E5%A4%84%E8%AF%81%E6%98%8E&quot;&gt;生成出处证明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%B8%8A%E4%BC%A0%E5%88%B0PyPI&quot;&gt;上传到PyPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E9%AA%8C%E8%AF%81Python%E5%8C%85%E7%9A%84%E6%9D%A5%E6%BA%90&quot;&gt;验证Python包的来源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%96%87%E4%B8%AD%E7%94%A8%E5%88%B0%E7%9A%84%E9%A1%B9%E7%9B%AE&quot;&gt;文中用到的项目&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是从维护人员到用户的端到端工作流程：从构建 Wheel package -&amp;gt; 生成出处 -&amp;gt; 验证出处 -&amp;gt; 发布到 PyPI -&amp;gt; 以及用户验证出处 -&amp;gt; 安装 wheel。接下来让我们一起来完成这其中的每一步。&lt;/p&gt;
&lt;p&gt;如果你想了解 Python 打包的流程或是术语可以参见&lt;a href=&quot;https://packaging.python.org/en/latest/overview/#packaging-python-libraries-and-tools&quot;&gt;Python 打包用户指南&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/11/python-and-slsa/workflows.svg&quot; alt=&quot;端到端流程&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/tags/python/"/>
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
  </entry>
  
  <entry>
    <title>Problems and solutions when upgrading XLC from 10.1 to IBM Open XL C/C++ for AIX 17.1.0</title>
    <link href="https://shenxianpeng.github.io/2023/10/upgrade-xlc-10-to-xlc-17.1/"/>
    <id>https://shenxianpeng.github.io/2023/10/upgrade-xlc-10-to-xlc-17.1/</id>
    <published>2023-10-08T10:53:26.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In this article, I would like to document the problems encountered when upgrading from IBM XLC 10.1 to XLC 17.1 (IBM Open XL C&amp;#x2F;C++</summary>
        
      
    
    
    
    <category term="AIX" scheme="https://shenxianpeng.github.io/categories/aix/"/>
    
    
    <category term="AIX" scheme="https://shenxianpeng.github.io/tags/aix/"/>
    
    <category term="Clang" scheme="https://shenxianpeng.github.io/tags/clang/"/>
    
    <category term="XLC" scheme="https://shenxianpeng.github.io/tags/xlc/"/>
    
    <category term="IBM" scheme="https://shenxianpeng.github.io/tags/ibm/"/>
    
  </entry>
  
  <entry>
    <title>2022-23 世界质量报告（World Quality Report）</title>
    <link href="https://shenxianpeng.github.io/2023/10/world-quality-report/"/>
    <id>https://shenxianpeng.github.io/2023/10/world-quality-report/</id>
    <published>2023-10-08T06:25:39.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
    <summary type="html">&lt;p&gt;2202-23 世界质量报告（World Quality Report 简称 WQR）是一项全球研究，不论是作为软件测试、开发工程师，关注这类软件质量报告可以帮助我们快速了解软件行业的现状和趋势。&lt;/p&gt;
&lt;h2 id=&quot;七个主题&quot;&gt;&lt;a href=&quot;#七个主题&quot; class=&quot;headerlink&quot; title=&quot;七个主题&quot;&gt;&lt;/a&gt;七个主题&lt;/h2&gt;&lt;p&gt;今年的 WQR 的关键趋势和推荐包括包括以下七个关键建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;敏捷质量调配 (DONE)&lt;/li&gt;
&lt;li&gt;质量自动化 (DONE)&lt;/li&gt;
&lt;li&gt;测试基础设施测试和配置 (DONE)&lt;/li&gt;
&lt;li&gt;测试数据提供和数据验证 (WIP)&lt;/li&gt;
&lt;li&gt;质量和可持续的 IT (NOT START)&lt;/li&gt;
&lt;li&gt;新兴技术趋势的质量工程 (NOT START)&lt;/li&gt;
&lt;li&gt;价值流管理 (NOT START)&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Quality" scheme="https://shenxianpeng.github.io/categories/quality/"/>
    
    
    <category term="Report" scheme="https://shenxianpeng.github.io/tags/report/"/>
    
    <category term="Quality" scheme="https://shenxianpeng.github.io/tags/quality/"/>
    
  </entry>
  
  <entry>
    <title>解决通过 Jenkins Artifactory plugin 上传 artifacts 失败的问题 “unable to find valid certification path to requested target”</title>
    <link href="https://shenxianpeng.github.io/2023/09/unable-to-find-valid-certification-path/"/>
    <id>https://shenxianpeng.github.io/2023/09/unable-to-find-valid-certification-path/</id>
    <published>2023-09-11T10:53:26.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近遇到了通过 Jenkins agent 无法上传 artifacts 到 Artifactory 的情况，具体错误如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="Artifactory" scheme="https://shenxianpeng.github.io/categories/artifactory/"/>
    
    
    <category term="Java" scheme="https://shenxianpeng.github.io/tags/java/"/>
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/tags/jenkins/"/>
    
    <category term="Artifactory" scheme="https://shenxianpeng.github.io/tags/artifactory/"/>
    
  </entry>
  
  <entry>
    <title>解决在 AIX 通过 Jenkins agent git clone 失败的问题</title>
    <link href="https://shenxianpeng.github.io/2023/09/git-clone-failed-on-aix/"/>
    <id>https://shenxianpeng.github.io/2023/09/git-clone-failed-on-aix/</id>
    <published>2023-09-07T10:53:26.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近又遇到了在 AIX 上通过 Jenkins agent 无法下载代码的情况，报了如下错误：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="AIX" scheme="https://shenxianpeng.github.io/categories/aix/"/>
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/tags/git/"/>
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/tags/jenkins/"/>
    
    <category term="AIX" scheme="https://shenxianpeng.github.io/tags/aix/"/>
    
  </entry>
  
  <entry>
    <title>2023 年最值得关注的 DevOps 趋势</title>
    <link href="https://shenxianpeng.github.io/2023/09/devops-trends-2023/"/>
    <id>https://shenxianpeng.github.io/2023/09/devops-trends-2023/</id>
    <published>2023-09-01T03:27:18.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;DevOps 运动仍然是一个不断发展的领域，受到技术进步、行业趋势和组织需求等多种因素的影响。这使得很难对 DevOps 工程的未来做出具体预测。然而我认为有一些趋势可能会在来年继续影响 DevOps 领域的发展。&lt;/p&gt;
&lt;h2 id=&quot;云原生技术的持续采用&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/tags/devops/"/>
    
    <category term="Kubernetes" scheme="https://shenxianpeng.github.io/tags/kubernetes/"/>
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/tags/devsecops/"/>
    
  </entry>
  
  <entry>
    <title>Upload artifacts failed to Artifactory from AIX</title>
    <link href="https://shenxianpeng.github.io/2023/08/upload-artifacts-failed-on-aix/"/>
    <id>https://shenxianpeng.github.io/2023/08/upload-artifacts-failed-on-aix/</id>
    <published>2023-08-28T22:36:46.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Recently my CI pipeline suddenly does not work on AIX 7.1 with error &lt;code&gt;Caused by: javax.net.ssl.SSLHandshakeException:</summary>
        
      
    
    
    
    <category term="AIX" scheme="https://shenxianpeng.github.io/categories/aix/"/>
    
    
    <category term="Troubleshooting" scheme="https://shenxianpeng.github.io/tags/troubleshooting/"/>
    
    <category term="Artifactory" scheme="https://shenxianpeng.github.io/tags/artifactory/"/>
    
  </entry>
  
  <entry>
    <title>创建 NuGet Organization 的遇到的坑</title>
    <link href="https://shenxianpeng.github.io/2023/08/nuget/"/>
    <id>https://shenxianpeng.github.io/2023/08/nuget/</id>
    <published>2023-08-24T22:36:46.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;其实创建包管理平台账户没什么可说的，但最近准备在 &lt;a href=&quot;https://www.nuget.org/&quot;&gt;https://www.nuget.org&lt;/a&gt; 上面发布产品前创建 Organization 的时候确遇到了问题。&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="Release" scheme="https://shenxianpeng.github.io/categories/release/"/>
    
    
    <category term="NuGet" scheme="https://shenxianpeng.github.io/tags/nuget/"/>
    
  </entry>
  
  <entry>
    <title>Docker Buildx Bake：加速构建和管理多平台镜像的利器</title>
    <link href="https://shenxianpeng.github.io/2023/07/buildx-bake/"/>
    <id>https://shenxianpeng.github.io/2023/07/buildx-bake/</id>
    <published>2023-07-17T14:43:37.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;随着容器化技术的普及和应用场景的增多，构建和管理多平台镜像变得越来越重要。&lt;a href=&quot;https://github.com/docker/buildx&quot;&gt;Docker Buildx&lt;/a&gt; 是 Docker 官方对于 Docker CLI 的一个扩展，为</summary>
        
      
    
    
    
    <category term="Docker" scheme="https://shenxianpeng.github.io/categories/docker/"/>
    
    
    <category term="Docker" scheme="https://shenxianpeng.github.io/tags/docker/"/>
    
    <category term="Buildx" scheme="https://shenxianpeng.github.io/tags/buildx/"/>
    
    <category term="Bake" scheme="https://shenxianpeng.github.io/tags/bake/"/>
    
  </entry>
  
  <entry>
    <title>详解SBOM：定义、关系、区别、最佳实践和生成工具</title>
    <link href="https://shenxianpeng.github.io/2023/06/sbom/"/>
    <id>https://shenxianpeng.github.io/2023/06/sbom/</id>
    <published>2023-06-10T14:43:37.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;什么是-SBOM&quot;&gt;&lt;a href=&quot;#什么是-SBOM&quot; class=&quot;headerlink&quot; title=&quot;什么是 SBOM&quot;&gt;&lt;/a&gt;什么是 SBOM&lt;/h2&gt;&lt;p&gt;SBOM 是软件材料清单（Software Bill of</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="SBOM" scheme="https://shenxianpeng.github.io/tags/sbom/"/>
    
  </entry>
  
  <entry>
    <title>如果你是项目成员，是 Fork 原始仓库还是直接原始仓库中修改代码？</title>
    <link href="https://shenxianpeng.github.io/2023/06/fork-or-unfork/"/>
    <id>https://shenxianpeng.github.io/2023/06/fork-or-unfork/</id>
    <published>2023-06-09T05:47:43.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;想必你也见到过很多开源项目中的 CONTRIBUTION.md 文档中通常都会让贡献者 Fork 仓库，然后做修改。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么如果你是该开源项目中的成员是否需要 Fork</summary>
        
      
    
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/categories/git/"/>
    
    
    <category term="Fork" scheme="https://shenxianpeng.github.io/tags/fork/"/>
    
  </entry>
  
  <entry>
    <title>程序员自我修养之Git提交信息和分支创建规范（工具篇）</title>
    <link href="https://shenxianpeng.github.io/2023/05/commit-check/"/>
    <id>https://shenxianpeng.github.io/2023/05/commit-check/</id>
    <published>2023-05-09T11:00:00.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Git 提交信息和 Git 分支命名规范是团队协作中非常重要的一部分，它们能够使代码库更加规范、易于维护和理解。&lt;/p&gt;
&lt;p&gt;我们需要通过工具来帮助实现Git提交信息和分支创建规范，本篇将介绍如何使用 &lt;a</summary>
        
      
    
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/categories/git/"/>
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/tags/git/"/>
    
    <category term="Branch" scheme="https://shenxianpeng.github.io/tags/branch/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins agent service can not start automatically on Windows</title>
    <link href="https://shenxianpeng.github.io/2023/04/jenkins-troubleshooting/"/>
    <id>https://shenxianpeng.github.io/2023/04/jenkins-troubleshooting/</id>
    <published>2023-04-10T19:49:13.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;What’s-the-issue&quot;&gt;&lt;a href=&quot;#What’s-the-issue&quot; class=&quot;headerlink&quot; title=&quot;What’s the issue&quot;&gt;&lt;/a&gt;What’s the issue&lt;/h2&gt;&lt;p&gt;My Windows build machine is regular reboot after Windows updates, but my Jenkins agent service on this Windows can not&lt;br&gt;start automatically even I have set the startup type to Automatic.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/04/jenkins-troubleshooting/service-general.png&quot; alt=&quot;Windows Service Config 2&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Solution-1&quot;&gt;&lt;a href=&quot;#Solution-1&quot; class=&quot;headerlink&quot; title=&quot;Solution 1&quot;&gt;&lt;/a&gt;Solution 1&lt;/h2&gt;&lt;p&gt;After some research, select “Allow service to interact with desktop” with service properties on Log On tab can fix this problem.&lt;/p&gt;
&lt;p&gt;In service properties -&amp;gt; Log On -&amp;gt; Select “Local System account” and select the checkbox for “Allow service to interact with desktop”. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/04/jenkins-troubleshooting/service-log-on.png&quot; alt=&quot;Windows Service Config 2&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Solution-2&quot;&gt;&lt;a href=&quot;#Solution-2&quot; class=&quot;headerlink&quot; title=&quot;Solution 2&quot;&gt;&lt;/a&gt;Solution 2&lt;/h2&gt;</summary>
    
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/categories/jenkins/"/>
    
    
    <category term="Pipeline" scheme="https://shenxianpeng.github.io/tags/pipeline/"/>
    
    <category term="Troubleshooting" scheme="https://shenxianpeng.github.io/tags/troubleshooting/"/>
    
  </entry>
  
  <entry>
    <title>SLSA 框架与软件供应链安全防护</title>
    <link href="https://shenxianpeng.github.io/2023/03/slsa/"/>
    <id>https://shenxianpeng.github.io/2023/03/slsa/</id>
    <published>2023-03-23T07:09:39.000Z</published>
    <updated>2024-01-31T04:49:00.754Z</updated>
    
    
    <summary type="html">&lt;p&gt;随着近些年针对软件供应链发起的攻击次数越来越多，Google 发布了一系列指南来确保软件包的完整性，目的是为了防止未经授权的代码修改影响软件供应链。&lt;/p&gt;
&lt;p&gt;Google 的 SLSA 框架（Supply-chain Levels for Software Artifacts 软件制品的供应链级别）是通过识别 CI&amp;#x2F;CD 流水线中的问题并减小影响，为实现更安全的软件开发和部署流程提供建议。&lt;/p&gt;
&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%80%E4%B9%88%E6%98%AFSLSA&quot;&gt;什么是SLSA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E8%BD%AF%E4%BB%B6%E4%BE%9B%E5%BA%94%E9%93%BE%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98&quot;&gt;软件供应链中的问题&lt;/a&gt;&lt;br&gt;2.1 &lt;a href=&quot;#%E4%BE%9B%E5%BA%94%E9%93%BE%E6%94%BB%E5%87%BB%E5%8C%85%E6%8B%AC%E5%93%AA%E4%BA%9B&quot;&gt;供应链攻击包括哪些&lt;/a&gt;&lt;br&gt;2.2 &lt;a href=&quot;#%E7%9C%9F%E5%AE%9E%E4%B8%96%E7%95%8C%E7%9A%84%E4%BE%8B%E5%AD%90&quot;&gt;真实世界的例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SLSA%E7%AD%89%E7%BA%A7&quot;&gt;SLSA等级&lt;/a&gt;&lt;br&gt;3.1 &lt;a href=&quot;#%E8%AF%A6%E7%BB%86%E8%A7%A3%E9%87%8A&quot;&gt;详细解释&lt;/a&gt;&lt;br&gt;3.2 &lt;a href=&quot;#%E9%99%90%E5%88%B6&quot;&gt;限制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#SLSA%E8%90%BD%E5%9C%B0&quot;&gt;SLSA落地&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7&quot;&gt;其他工具&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;什么是SLSA&quot;&gt;&lt;a href=&quot;#什么是SLSA&quot; class=&quot;headerlink&quot; title=&quot;什么是SLSA&quot;&gt;&lt;/a&gt;什么是SLSA&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://slsa.dev/&quot;&gt;SLSA&lt;/a&gt; 全名是 Supply chain Levels for Software Artifacts, or SLSA (发音“salsa”).&lt;/p&gt;
&lt;p&gt;SLSA 是一个端到端框架，一个标准和控制的清单确保软件构建和部署过程的安全性，防止篡改源代码、构建平台以及构件仓库而产生的威胁。&lt;/p&gt;
&lt;h2 id=&quot;软件供应链中的问题&quot;&gt;&lt;a href=&quot;#软件供应链中的问题&quot; class=&quot;headerlink&quot; title=&quot;软件供应链中的问题&quot;&gt;&lt;/a&gt;软件供应链中的问题&lt;/h2&gt;&lt;p&gt;任何软件供应链都可能引入漏洞，随着系统变得越来越复杂，做好最佳实践从而保证交付工件的完整性变得非常重要。如果没有一定的规范和系统发展计划，就很难应对下一次黑客攻击。&lt;/p&gt;
&lt;h3 id=&quot;供应链攻击包括哪些&quot;&gt;&lt;a href=&quot;#供应链攻击包括哪些&quot; class=&quot;headerlink&quot; title=&quot;供应链攻击包括哪些&quot;&gt;&lt;/a&gt;供应链攻击包括哪些&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2023/03/slsa/supply-chain-threats.png&quot; alt=&quot;Supply Chain Threats&quot;&gt;&lt;/p&gt;
&lt;p&gt;A 提交未经认证的修改&lt;br&gt;B 泄露源码仓库&lt;br&gt;C 从被修改源代码构建&lt;br&gt;D 泄露构建过程&lt;br&gt;E 使用已泄露的依赖&lt;br&gt;F 上传被修改的包&lt;br&gt;G 泄露了包仓库&lt;br&gt;H 使用已泄露的包&lt;/p&gt;
&lt;h3 id=&quot;真实世界的例子&quot;&gt;&lt;a href=&quot;#真实世界的例子&quot; class=&quot;headerlink&quot; title=&quot;真实世界的例子&quot;&gt;&lt;/a&gt;真实世界的例子&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;完整性威胁&lt;/th&gt;
&lt;th&gt;已知例子&lt;/th&gt;
&lt;th&gt;SLSA 如何提供帮助&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;A 提交未经认证的修改&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://lore.kernel.org/lkml/202105051005.49BFABCE@keescook/&quot;&gt;研究人员&lt;/a&gt;试图通过邮件列表上的&lt;br&gt;补丁程序故意将漏洞引入 Linux 内核。&lt;/td&gt;
&lt;td&gt;两人审查发现了大部分（但不是全部）漏洞。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B 泄露源码仓库&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://news-web.php.net/php.internals/113838&quot;&gt;PHP&lt;/a&gt;：攻击者破坏了 PHP 的自托管&lt;br&gt; git 服务器并注入了两个恶意提交。&lt;/td&gt;
&lt;td&gt;一个受到更好保护的源代码平台&lt;br&gt;将成为攻击者更难攻击的目标。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C 从被修改源代码构建&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://www.webmin.com/exploit.html&quot;&gt;Webmin&lt;/a&gt;：攻击者修改了构建基础设施&lt;br&gt;以使用与源代码控制不匹配的源文件。&lt;/td&gt;
&lt;td&gt;符合 SLSA 标准的构建服务器会生成出处，&lt;br&gt;以识别实际使用的来源，从而使消费者能够检测到此类篡改。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D 泄露构建过程&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://www.crowdstrike.com/blog/sunspot-malware-technical-analysis/&quot;&gt;SolarWinds&lt;/a&gt;：攻击者破坏了构建平台&lt;br&gt;并安装了在每次构建期间注入恶意行为的植入程序。&lt;/td&gt;
&lt;td&gt;更高的 SLSA 级别需要对构建平台进行更强大的安全控制，&lt;br&gt;这使得妥协和获得持久性变得更加困难。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E 使用已泄露的依赖&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://web.archive.org/web/20210909051737/https://schneider.dev/blog/event-stream-vulnerability-explained/&quot;&gt;event-stream&lt;/a&gt;：攻击者添加了一个无害的依赖项，然后更新了该依赖项&lt;br&gt;以添加恶意行为。更新与提交到 GitHub 的代码不匹配（即攻击 F）。&lt;/td&gt;
&lt;td&gt;递归地将 SLSA 应用于所有依赖项会阻止这个特定的向量，因为&lt;br&gt;出处会表明它不是由适当的构建器构建的，或者源不是来自 GitHub。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;F 上传被修改的包&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://about.codecov.io/apr-2021-post-mortem/&quot;&gt;CodeCov&lt;/a&gt;：攻击者使用泄露的凭据将恶意工件上传到&lt;br&gt; Google Cloud Storage(GCS)，用户可以从中直接下载。&lt;/td&gt;
&lt;td&gt;GCS 中工件的出处表明工件不是以&lt;br&gt;预期的方式从预期的源代码库中构建的。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;G 泄露了包仓库&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://theupdateframework.io/papers/attacks-on-package-managers-ccs2008.pdf&quot;&gt;对包镜像的攻击&lt;/a&gt;：研究人员为几个流行的&lt;br&gt;包存储库运行镜像，这些镜像可能被用来提供恶意包。&lt;/td&gt;
&lt;td&gt;与上面的 (F) 类似，恶意工件的来源表明它们不是&lt;br&gt;按预期构建的，也不是来自预期的源代码库。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H 使用已泄露的包&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://blog.sonatype.com/damaging-linux-mac-malware-bundled-within-browserify-npm-brandjack-attempt&quot;&gt;Browserify typosquatting&lt;/a&gt;：攻击者&lt;br&gt;上传了一个与原始名称相似的恶意包。&lt;/td&gt;
&lt;td&gt;SLSA 不直接解决这种威胁，但将出处链接回源代码控制&lt;br&gt;可以启用和增强其他解决方案。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;SLSA等级&quot;&gt;&lt;a href=&quot;#SLSA等级&quot; class=&quot;headerlink&quot; title=&quot;SLSA等级&quot;&gt;&lt;/a&gt;SLSA等级&lt;/h2&gt;</summary>
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
  </entry>
  
</feed>
