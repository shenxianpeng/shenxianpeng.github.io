<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xianpeng Shen</title>
  
  <subtitle>Share about CI/CD and DevOps</subtitle>
  <link href="https://shenxianpeng.github.io/atom.xml" rel="self"/>
  
  <link href="https://shenxianpeng.github.io/"/>
  <updated>2024-09-07T16:25:25.621Z</updated>
  <id>https://shenxianpeng.github.io/</id>
  
  <author>
    <name>shenxianpeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初步了解 PyPA（Python Packaging Authority）下的知名项目和关系</title>
    <link href="https://shenxianpeng.github.io/2024/09/pypa/"/>
    <id>https://shenxianpeng.github.io/2024/09/pypa/</id>
    <published>2024-09-04T16:00:00.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;PyPA（Python Packaging Authority）是管理和维护 Python 包相关工具的一个社区组织。PyPA 管理的知名项目包括 pip、packaging、setuptools、wheel、twine、build</summary>
        
      
    
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/categories/python/"/>
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>我记得</title>
    <link href="https://shenxianpeng.github.io/2024/07/remember/"/>
    <id>https://shenxianpeng.github.io/2024/07/remember/</id>
    <published>2024-07-08T16:00:00.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近开车的时候我总爱听赵雷的歌，尤其是那首《我记得》。&lt;/p&gt;
&lt;p&gt;我觉得这首歌就是回忆的交响曲，每每听到就仿佛看到了一部老电影。它像是一种声音，一种触动人心的触感，让我们回忆起那些已经消逝的时光，反思我们的生活方式和人生的方向。&lt;/p&gt;
&lt;p&gt;歌词和旋律中都充满了满满的</summary>
        
      
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Work" scheme="https://shenxianpeng.github.io/tags/work/"/>
    
    <category term="Life" scheme="https://shenxianpeng.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>告别Rocket中国，回连十年再启程</title>
    <link href="https://shenxianpeng.github.io/2024/06/farewell/"/>
    <id>https://shenxianpeng.github.io/2024/06/farewell/</id>
    <published>2024-06-27T16:00:00.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;​今天（6月28日）是我在Rocket中国分公司的最后一天，也是效力的第十个年头。这是我职业生涯中效力过最长的一家公司，想借此机会写下一些文字，为这十年画上一个句号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;光阴似箭，岁月如梭&lt;/strong&gt;。转眼间，十年悄然逝去。唯有认真努力地生</summary>
        
      
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Work" scheme="https://shenxianpeng.github.io/tags/work/"/>
    
    <category term="Life" scheme="https://shenxianpeng.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>你的软件究竟从哪里来？</title>
    <link href="https://shenxianpeng.github.io/2024/06/where-does-your-software-come-from/"/>
    <id>https://shenxianpeng.github.io/2024/06/where-does-your-software-come-from/</id>
    <published>2024-06-13T15:27:18.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;软件真是个有趣又深奥的东西，它由看似神奇的代码片段组成，这些代码运行在最终的终端上，本身却并非生命体，但拥有自己的生命周期。&lt;/p&gt;
&lt;p&gt;软件最初是源代码的形式，仅仅是存放在某个仓库的文本文件，然后通过独特的构建过程，这些源代码会转变为其他形式。例如交付到 web</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/tags/devsecops/"/>
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
  </entry>
  
  <entry>
    <title>代码签名（Code Signing） - GaraSign</title>
    <link href="https://shenxianpeng.github.io/2024/06/garasign/"/>
    <id>https://shenxianpeng.github.io/2024/06/garasign/</id>
    <published>2024-06-10T03:27:18.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;上次我在 &lt;a href=&quot;2024/04/code-signing/&quot;&gt;代码签名（Code Signing）&lt;/a&gt;的文章中时候提到了 GaraSign，这是我在工作中使用到的另一个代码签名工具。&lt;/p&gt;
&lt;p&gt;鉴于关于 GaraSign</summary>
        
      
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/tags/devsecops/"/>
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
  </entry>
  
  <entry>
    <title>Python 软件基金会 (PFS) 基础设施概览</title>
    <link href="https://shenxianpeng.github.io/2024/05/psf-infra/"/>
    <id>https://shenxianpeng.github.io/2024/05/psf-infra/</id>
    <published>2024-05-28T03:27:18.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Python 软件基金会 (PFS) 或许大家比较熟知，它是开源 Python 编程语言背后的组织，致力于为 Python 和 Python 社区的发展壮大创造条件。&lt;/p&gt;
&lt;p&gt;继上次我们看完了 &lt;a</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/tags/python/"/>
    
    <category term="Infrastructure" scheme="https://shenxianpeng.github.io/tags/infrastructure/"/>
    
  </entry>
  
  <entry>
    <title>代码签名（Code Signing）</title>
    <link href="https://shenxianpeng.github.io/2024/04/code-signing/"/>
    <id>https://shenxianpeng.github.io/2024/04/code-signing/</id>
    <published>2024-04-29T12:34:18.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;当谈到软件开发和安全性时，Code Signing（代码签名）是一个至关重要的概念。在这篇文章中，我们将探讨什么是代码签名，为什么它重要，以及两个代码签名工具的对比。&lt;/p&gt;
&lt;h2 id=&quot;什么是代码签名？&quot;&gt;&lt;a href=&quot;#什么是代码签名？&quot;</summary>
        
      
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/tags/devsecops/"/>
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
  </entry>
  
  <entry>
    <title>【分享】通过 Jenkins-X 社区最终进入到 Jenkins 基础设施团队成为 SRE 的经历</title>
    <link href="https://shenxianpeng.github.io/2024/04/jenkins-contributors/"/>
    <id>https://shenxianpeng.github.io/2024/04/jenkins-contributors/</id>
    <published>2024-04-21T12:34:18.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;今天翻译一篇我在 &lt;a href=&quot;https://contributors.jenkins.io/&quot;&gt;Jenkins Contributors&lt;/a&gt; 页面上看到的一篇文章。&lt;/p&gt;
&lt;p&gt;其作者是 Hervé Le Meur，我早在关注 Jenkins-Infra</summary>
        
      
    
    
    
    <category term="OSS" scheme="https://shenxianpeng.github.io/categories/oss/"/>
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/tags/jenkins/"/>
    
    <category term="Contributor" scheme="https://shenxianpeng.github.io/tags/contributor/"/>
    
  </entry>
  
  <entry>
    <title>2024年如何保持竞争力：DevOps工程师的关键技能</title>
    <link href="https://shenxianpeng.github.io/2024/04/devops-skills-2024/"/>
    <id>https://shenxianpeng.github.io/2024/04/devops-skills-2024/</id>
    <published>2024-04-08T12:34:18.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;相信大家最近都总会看到这样或那样的新闻：哪个科技巨头又裁员了。裁员潮似乎成为了这个时代的常态，让许多打工人感到焦虑和不安。&lt;/p&gt;
&lt;p&gt;身在大连的我确实深有感触，外企和私企都有在裁员，与前两年相比，岗位越来越少，失业的人越来越多，因此想找到一个满意的岗位将会变得越来越难。</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/tags/devops/"/>
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/tags/devsecops/"/>
    
  </entry>
  
  <entry>
    <title>你一定要了解的 GitHub Action 特性：可重用工作流（Reusable Workflows）</title>
    <link href="https://shenxianpeng.github.io/2024/03/reusable-workflows/"/>
    <id>https://shenxianpeng.github.io/2024/03/reusable-workflows/</id>
    <published>2024-03-25T10:34:18.000Z</published>
    <updated>2024-09-07T16:25:25.621Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;什么是-Reusable-Workflows&quot;&gt;&lt;a href=&quot;#什么是-Reusable-Workflows&quot; class=&quot;headerlink&quot; title=&quot;什么是 Reusable Workflows&quot;&gt;&lt;/a&gt;什么是 Reusable</summary>
        
      
    
    
    
    <category term="GitHub" scheme="https://shenxianpeng.github.io/categories/github/"/>
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/tags/jenkins/"/>
    
    <category term="GitHub" scheme="https://shenxianpeng.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>2023 年开源状况和人工智能的崛起（GitHub）</title>
    <link href="https://shenxianpeng.github.io/2024/02/open-source-state/"/>
    <id>https://shenxianpeng.github.io/2024/02/open-source-state/</id>
    <published>2024-02-22T10:34:18.000Z</published>
    <updated>2024-09-07T16:25:25.617Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近看到一篇非常有信息量的关于人工智能、云原生、开源的趋势报告，出自于GitHub，翻译并分享给大家，以下是报告全文。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英文原文在这里：&lt;a</summary>
        
      
    
    
    
    <category term="GitHub" scheme="https://shenxianpeng.github.io/categories/github/"/>
    
    
    <category term="Git" scheme="https://shenxianpeng.github.io/tags/git/"/>
    
    <category term="GitHub" scheme="https://shenxianpeng.github.io/tags/github/"/>
    
    <category term="AI" scheme="https://shenxianpeng.github.io/tags/ai/"/>
    
    <category term="OSS" scheme="https://shenxianpeng.github.io/tags/oss/"/>
    
  </entry>
  
  <entry>
    <title>cpp-linter-action 最新版支持 Pull Request Review 功能了 👏</title>
    <link href="https://shenxianpeng.github.io/2024/02/cpp-linter-action/"/>
    <id>https://shenxianpeng.github.io/2024/02/cpp-linter-action/</id>
    <published>2024-02-17T03:34:18.000Z</published>
    <updated>2024-09-07T16:25:25.613Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;作为 &lt;a href=&quot;https://github.com/cpp-linter&quot;&gt;cpp-linter&lt;/a&gt; 的创建者和贡献者，我很高兴地宣布 —— cpp-linter-action 从 v2.9.0 版本开始支持 Pull Request Review 功能了</summary>
        
      
    
    
    
    <category term="cpp-linter" scheme="https://shenxianpeng.github.io/categories/cpp-linter/"/>
    
    
    <category term="clang-format" scheme="https://shenxianpeng.github.io/tags/clang-format/"/>
    
    <category term="clang-tidy" scheme="https://shenxianpeng.github.io/tags/clang-tidy/"/>
    
    <category term="clang" scheme="https://shenxianpeng.github.io/tags/clang/"/>
    
    <category term="cpp-linter" scheme="https://shenxianpeng.github.io/tags/cpp-linter/"/>
    
  </entry>
  
  <entry>
    <title>看看顶级的开源组织都在用哪些服务和工具</title>
    <link href="https://shenxianpeng.github.io/2024/01/apache-services-and-tools/"/>
    <id>https://shenxianpeng.github.io/2024/01/apache-services-and-tools/</id>
    <published>2024-01-21T03:27:18.000Z</published>
    <updated>2024-09-07T16:25:25.613Z</updated>
    
    
    <summary type="html">&lt;p&gt;本篇介绍的是大名鼎鼎的开源软件基金会 Apache 所使用的服务(Services)和工具(Tools)，这或许能帮助你打开视野，在选择工具的时候提供参考。如果你是一名 DevOps、SRE 或是 Infra 工程师，通过本篇文章内容结果帮助你更好的展示团队所提供的服务有哪些，以及窥探到 Apache Infra 是怎样组织和管理他们的。&lt;/p&gt;
&lt;h2 id=&quot;Apache-是谁&quot;&gt;&lt;a href=&quot;#Apache-是谁&quot; class=&quot;headerlink&quot; title=&quot;Apache 是谁&quot;&gt;&lt;/a&gt;Apache 是谁&lt;/h2&gt;&lt;p&gt;如果你不太了解 Apache，下面是关于 Apache 的简要介绍。&lt;/p&gt;
&lt;p&gt;Apache 是一个开源软件基金会（Apache Software Foundation，简称 ASF）的缩写。ASF 是一个非营利性的组织，致力于支持和发展开源软件项目。Apache 软件基金会通过提供法律、财务和基础设施支持，帮助开发者共同合作创建和维护开源软件。其中，Apache 软件基金会最为著名的项目之一是 Apache HTTP 服务器，也称为 Apache Web 服务器。此外，ASF 还托管了许多其他流行的开源项目，像 ECharts，Superset，Dubbo，Spark，Kafka 等等。&lt;/p&gt;
&lt;h2 id=&quot;服务与工具&quot;&gt;&lt;a href=&quot;#服务与工具&quot; class=&quot;headerlink&quot; title=&quot;服务与工具&quot;&gt;&lt;/a&gt;服务与工具&lt;/h2&gt;&lt;p&gt;Apache Infra 团队维护着供 PMC（项目管理委员会）、项目提交者和 Apache 董事会使用的各种工具。这些工具中的部分工具只提供给有特定职责或角色的人员使用。其他工具，如显示 Apache 基础设施各部分状态的监控工具，则向所有人开放。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%B8%BA%E9%A1%B6%E7%BA%A7%E9%A1%B9%E7%9B%AEtlp%E6%8F%90%E4%BE%9B%E7%9A%84%E6%9C%8D%E5%8A%A1&quot;&gt;为顶级项目（TLP）提供的服务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%BD%91%E7%AB%99&quot;&gt;网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6&quot;&gt;电子邮件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#asf-%E8%87%AA%E5%8A%A9%E6%9C%8D%E5%8A%A1%E5%B9%B3%E5%8F%B0&quot;&gt;ASF 自助服务平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#asf-%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86&quot;&gt;ASF 账户管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%94%AF%E6%8C%81-ldap-%E7%9A%84%E6%9C%8D%E5%8A%A1&quot;&gt;支持 LDAP 的服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%AD%B5%E5%8C%96%E9%A1%B9%E7%9B%AEpodlings%E6%9C%8D%E5%8A%A1&quot;&gt;项目孵化服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#asf-%E9%A1%B9%E7%9B%AE%E5%B7%A5%E5%85%B7&quot;&gt;ASF 项目工具&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6&quot;&gt;版本控制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E9%97%AE%E9%A2%98%E8%B7%9F%E8%B8%AA%E5%92%8C%E5%8A%9F%E8%83%BD%E8%AF%B7%E6%B1%82&quot;&gt;问题跟踪和功能请求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%B0%86%E4%BD%A0%E7%9A%84%E7%89%88%E6%9C%AC%E5%BA%93%E4%B8%8E-jira-%E7%A5%A8%E6%8D%AE%E9%9B%86%E6%88%90&quot;&gt;将版本库与 Jira 票据集成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%BA%90%E7%A0%81%E5%BA%93%E5%8F%91%E5%B8%83%E8%80%85%E8%AE%A2%E9%98%85%E8%80%85%E6%9C%8D%E5%8A%A1&quot;&gt;源码库发布者&amp;#x2F;订阅者服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9E%84%E5%BB%BA%E6%9C%8D%E5%8A%A1&quot;&gt;构建服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BA%A7%E5%93%81%E5%91%BD%E5%90%8D&quot;&gt;产品命名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%A3%E7%A0%81%E7%AD%BE%E5%90%8D&quot;&gt;代码签名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F&quot;&gt;代码质量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%A3%E7%A0%81%E5%88%86%E5%8F%91&quot;&gt;代码分发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E8%99%9A%E6%8B%9F%E6%9C%8D%E5%8A%A1%E5%99%A8&quot;&gt;虚拟服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%9C%A8%E7%BA%BF%E6%8A%95%E7%A5%A8&quot;&gt;在线投票&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7&quot;&gt;其他工具&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#dns&quot;&gt;DNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#url-%E7%9F%AD%E7%BC%A9%E5%99%A8&quot;&gt;URL 短缩器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%88%86%E4%BA%AB%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5&quot;&gt;共享片段&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9C%BA%E5%99%A8%E5%88%97%E8%A1%A8&quot;&gt;机器列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#&quot;&gt;奇思妙想&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;为顶级项目（TLP）提供的服务&quot;&gt;&lt;a href=&quot;#为顶级项目（TLP）提供的服务&quot; class=&quot;headerlink&quot; title=&quot;为顶级项目（TLP）提供的服务&quot;&gt;&lt;/a&gt;为顶级项目（TLP）提供的服务&lt;/h2&gt;&lt;h3 id=&quot;网站&quot;&gt;&lt;a href=&quot;#网站&quot; class=&quot;headerlink&quot; title=&quot;网站&quot;&gt;&lt;/a&gt;网站&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.apache.org/&quot;&gt;www.apache.org&lt;/a&gt; 这是 Apache 的主要网站。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://whimsy.apache.org/site/&quot;&gt;Apache 项目网站检查器&lt;/a&gt; 会定期检查所有为顶级项目（TLP）提供的网站，并报告它们是否符合 Apache 的 TLP 网站政策。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里只列出了几个挺有意思的连接，比如项目网址检查器，它会检查顶级项目是否有 License, Donate, Sponsors, Privacy 等正确的连接。&lt;/p&gt;
&lt;h3 id=&quot;电子邮件&quot;&gt;&lt;a href=&quot;#电子邮件&quot; class=&quot;headerlink&quot; title=&quot;电子邮件&quot;&gt;&lt;/a&gt;电子邮件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;所有新建电子邮件列表的申请都应通过&lt;a href=&quot;https://selfserve.apache.org/mailinglist-new.html&quot;&gt;自助服务系统&lt;/a&gt;进行。&lt;/li&gt;
&lt;li&gt;电子邮件服务器 - QMail&amp;#x2F;QSMTPD&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="Apache" scheme="https://shenxianpeng.github.io/tags/apache/"/>
    
    <category term="Infrastructure" scheme="https://shenxianpeng.github.io/tags/infrastructure/"/>
    
  </entry>
  
  <entry>
    <title>2023 年终总结</title>
    <link href="https://shenxianpeng.github.io/2023/12/2023-summary/"/>
    <id>https://shenxianpeng.github.io/2023/12/2023-summary/</id>
    <published>2023-12-31T15:59:59.000Z</published>
    <updated>2024-09-07T16:25:25.613Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;时间过得很快，2023 年转瞬即逝。如果不记录下自己在这一年里发生的事情，过不了多久就很难回想起来这一年都发生过什么。&lt;/p&gt;
&lt;p&gt;因此按照惯例还是要先回顾 2023 年，然后展望 2024 年。&lt;/p&gt;
&lt;h2 id=&quot;回顾-2023&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Others" scheme="https://shenxianpeng.github.io/categories/others/"/>
    
    
    <category term="Thought" scheme="https://shenxianpeng.github.io/tags/thought/"/>
    
    <category term="Summary" scheme="https://shenxianpeng.github.io/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>如何把 GitHub Release Notes 按照 New features、Bug Fixes ... 进行自动分类</title>
    <link href="https://shenxianpeng.github.io/2023/12/automatic-categorize-release-notes/"/>
    <id>https://shenxianpeng.github.io/2023/12/automatic-categorize-release-notes/</id>
    <published>2023-12-27T10:25:39.000Z</published>
    <updated>2024-09-07T16:25:25.613Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如果你使用过 GitHub 发布过项目，你会知道 GitHub 可以&lt;a</summary>
        
      
    
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/categories/devops/"/>
    
    
    <category term="DevOps" scheme="https://shenxianpeng.github.io/tags/devops/"/>
    
    <category term="GitHub" scheme="https://shenxianpeng.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>How to make Jenkins pipeline not fail if a specific error occurs</title>
    <link href="https://shenxianpeng.github.io/2023/12/jenkins-catch-error/"/>
    <id>https://shenxianpeng.github.io/2023/12/jenkins-catch-error/</id>
    <published>2023-12-15T10:25:39.000Z</published>
    <updated>2024-09-07T16:25:25.613Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Sometimes you don’t want Jenkins pipeline failed for a specific error occurs. so you can use &lt;code&gt;catchError&lt;/code&gt; to catch error and</summary>
        
      
    
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/categories/jenkins/"/>
    
    
    <category term="Jenkins" scheme="https://shenxianpeng.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>How to adopt Supply Chain Security for GitHub and Non-GitHub projects</title>
    <link href="https://shenxianpeng.github.io/2023/12/supply-chain-security/"/>
    <id>https://shenxianpeng.github.io/2023/12/supply-chain-security/</id>
    <published>2023-12-02T06:25:39.000Z</published>
    <updated>2024-09-07T16:25:25.613Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Why-Software-Supply-Chain-Security-is-important&quot;&gt;&lt;a href=&quot;#Why-Software-Supply-Chain-Security-is-important&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
    <category term="Witness" scheme="https://shenxianpeng.github.io/tags/witness/"/>
    
  </entry>
  
  <entry>
    <title>Witness 和 SLSA 💃</title>
    <link href="https://shenxianpeng.github.io/2023/11/witness-and-slsa/"/>
    <id>https://shenxianpeng.github.io/2023/11/witness-and-slsa/</id>
    <published>2023-11-30T06:25:39.000Z</published>
    <updated>2024-09-07T16:25:25.613Z</updated>
    
    
    <summary type="html">&lt;p&gt;由于近些年针对软件的供应链的攻击越来越频繁，因此 Google 在 2021 提出的解决方案是软件工件供应链级别（Supply chain Levels for Software Artifacts，”SLSA”）&lt;/p&gt;
&lt;p&gt;本篇将介绍在&lt;strong&gt;非 GitHub&lt;/strong&gt; 生态系统中，我们如何生成和验证软件工件的来源，从而提高你的项目的 SLSA Level。&lt;/p&gt;
&lt;p&gt;Witness 是一个可插拔的软件供应链风险管理框架，它能自动、规范和验证软件工件出处。它是 in-toto 是 &lt;a href=&quot;https://www.cncf.io/projects/in-toto/&quot;&gt;CNCF&lt;/a&gt; 下的项目之一。它的最初作者是 Testifysec，后来捐赠给了 &lt;a href=&quot;https://in-toto.io/&quot;&gt;in-toto&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;什么是-Witness&quot;&gt;&lt;a href=&quot;#什么是-Witness&quot; class=&quot;headerlink&quot; title=&quot;什么是 Witness&quot;&gt;&lt;/a&gt;什么是 Witness&lt;/h2&gt;&lt;p&gt;Witness 是一个可插拔的供应链安全框架，可创建整个软件开发生命周期（SDLC）的证据（Provenance）跟踪，确保软件从源代码到目标的完整性。它支持大多数主要的 CI 和基础架构提供商，是确保软件供应链安全的多功能、灵活的解决方案。&lt;/p&gt;
&lt;p&gt;安全 PKI (Public Key Infrastructure - 公钥基础设施)分发系统的使用和验证 Witness 元数据的能力进一步增强了流程的安全性，并有助于减少许多软件供应链攻击向量。&lt;/p&gt;
&lt;p&gt;Witness 的工作原理是封装在持续集成流程中执行的命令，为软件开发生命周期（SDLC）中的每个操作提供证据跟踪，这样就可以详细、可验证地记录软件是如何构建的、由谁构建以及使用了哪些工具。&lt;/p&gt;
&lt;p&gt;这些证据可用于评估政策合规性，检测任何潜在的篡改或恶意活动，并确保只有授权用户或机器才能完成流程中的某一步骤。&lt;/p&gt;
&lt;p&gt;总结 - Witness 可以做什么&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证软件由谁构建、如何构建以及使用了哪些工具&lt;/li&gt;
&lt;li&gt;检测任何潜在的篡改或恶意活动&lt;/li&gt;
&lt;li&gt;确保只有经授权的用户或机器才能完成流程的每一步&lt;/li&gt;
&lt;li&gt;分发证词（Attestations）和策略（Policy）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;如何使用-Witness&quot;&gt;&lt;a href=&quot;#如何使用-Witness&quot; class=&quot;headerlink&quot; title=&quot;如何使用 Witness&quot;&gt;&lt;/a&gt;如何使用 Witness&lt;/h2&gt;&lt;p&gt;主要分三步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;witness run&lt;/code&gt; - 运行提供的命令并记录有关执行的证词。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;witness sign&lt;/code&gt; - 使用提供的密钥签署提供的文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;witness verify&lt;/code&gt; - 验证 witness 策略。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;快速开始&quot;&gt;&lt;a href=&quot;#快速开始&quot; class=&quot;headerlink&quot; title=&quot;快速开始&quot;&gt;&lt;/a&gt;快速开始&lt;/h3&gt;&lt;p&gt;这是我创建的 &lt;a href=&quot;https://github.com/shenxianpeng/witness-demo&quot;&gt;Witness Demo 仓库&lt;/a&gt;用于演示 witness 的工作流程，具体可以根据如下步骤进行。&lt;/p&gt;</summary>
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
    <category term="Witness" scheme="https://shenxianpeng.github.io/tags/witness/"/>
    
  </entry>
  
  <entry>
    <title>Python 和 SLSA 💃</title>
    <link href="https://shenxianpeng.github.io/2023/11/python-and-slsa/"/>
    <id>https://shenxianpeng.github.io/2023/11/python-and-slsa/</id>
    <published>2023-11-15T06:25:39.000Z</published>
    <updated>2024-09-07T16:25:25.613Z</updated>
    
    
    <summary type="html">&lt;p&gt;由于近些年针对软件的供应链的攻击越来越频繁，据 SonaType 的统计从 2019 年到 2022 年针对开源软件的攻击增长了 742%，因此 2021 年 Google 提出的解决方案是软件工件供应链级别（Supply chain Levels for Software Artifacts，”SLSA”）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/11/python-and-slsa/attacks.png&quot; alt=&quot;Software supply chain attacks&quot;&gt;&lt;/p&gt;
&lt;p&gt;本篇将介绍在 Python 生态系统中，我们如何使用 SLSA 框架来生成和验证 Python 工件的来源，从而让你的 SLSA Level 从 L0&amp;#x2F;L1 到 L3。&lt;/p&gt;
&lt;p&gt;注意：本文介绍的是针对&lt;strong&gt;托管在 GitHub 上的 Python 项目&lt;/strong&gt;。SLSA 框架可通过 GitHub Actions 来实现开箱即用，只需较少的配置即可完成。&lt;/p&gt;
&lt;p&gt;对于托管在非 GitHub 上的项目（例如 Bitbucket）可以尝试 &lt;a href=&quot;https://witness.dev/&quot;&gt;Witness&lt;/a&gt;，下一篇我将更新关于如何使用 Witness。&lt;/p&gt;
&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9E%84%E5%BB%BA%E7%BA%AF%E5%87%80%E7%9A%84Python%E5%8C%85&quot;&gt;构建纯净的Python包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%94%9F%E6%88%90%E5%87%BA%E5%A4%84%E8%AF%81%E6%98%8E&quot;&gt;生成出处证明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%B8%8A%E4%BC%A0%E5%88%B0PyPI&quot;&gt;上传到PyPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E9%AA%8C%E8%AF%81Python%E5%8C%85%E7%9A%84%E6%9D%A5%E6%BA%90&quot;&gt;验证Python包的来源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%96%87%E4%B8%AD%E7%94%A8%E5%88%B0%E7%9A%84%E9%A1%B9%E7%9B%AE&quot;&gt;文中用到的项目&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是从维护人员到用户的端到端工作流程：从构建 Wheel package -&amp;gt; 生成出处 -&amp;gt; 验证出处 -&amp;gt; 发布到 PyPI -&amp;gt; 以及用户验证出处 -&amp;gt; 安装 wheel。接下来让我们一起来完成这其中的每一步。&lt;/p&gt;
&lt;p&gt;如果你想了解 Python 打包的流程或是术语可以参见&lt;a href=&quot;https://packaging.python.org/en/latest/overview/#packaging-python-libraries-and-tools&quot;&gt;Python 打包用户指南&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/11/python-and-slsa/workflows.svg&quot; alt=&quot;端到端流程&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="DevSecOps" scheme="https://shenxianpeng.github.io/categories/devsecops/"/>
    
    
    <category term="Python" scheme="https://shenxianpeng.github.io/tags/python/"/>
    
    <category term="SLSA" scheme="https://shenxianpeng.github.io/tags/slsa/"/>
    
  </entry>
  
  <entry>
    <title>Problems and solutions when upgrading XLC from 10.1 to IBM Open XL C/C++ for AIX 17.1.0</title>
    <link href="https://shenxianpeng.github.io/2023/10/upgrade-xlc-10-to-xlc-17.1/"/>
    <id>https://shenxianpeng.github.io/2023/10/upgrade-xlc-10-to-xlc-17.1/</id>
    <published>2023-10-08T10:53:26.000Z</published>
    <updated>2024-09-07T16:25:25.609Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In this article, I would like to document the problems encountered when upgrading from IBM XLC 10.1 to XLC 17.1 (IBM Open XL C&amp;#x2F;C++</summary>
        
      
    
    
    
    <category term="AIX" scheme="https://shenxianpeng.github.io/categories/aix/"/>
    
    
    <category term="AIX" scheme="https://shenxianpeng.github.io/tags/aix/"/>
    
    <category term="Clang" scheme="https://shenxianpeng.github.io/tags/clang/"/>
    
    <category term="XLC" scheme="https://shenxianpeng.github.io/tags/xlc/"/>
    
    <category term="IBM" scheme="https://shenxianpeng.github.io/tags/ibm/"/>
    
  </entry>
  
</feed>
